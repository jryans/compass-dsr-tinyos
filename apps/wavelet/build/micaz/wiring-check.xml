<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="57:BigPackC.nc">
      <from><interface-ref name="BigPackServer" scoped="" ref="0x7ef834b8"/></from>
      <to><interface-ref name="BigPackServer" scoped="" ref="0x7ee51178"/></to>
    </wire>
    <wire loc="58:BigPackC.nc">
      <from><interface-ref name="BigPackClient" scoped="" ref="0x7ef72680"/></from>
      <to><interface-ref name="BigPackClient" scoped="" ref="0x7ee518f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d2e8530"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d2f1628"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d304280"/></to>
    </wire>
    <wire loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e675d00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d341388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d3577f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d3733d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dad3a08"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dae5010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7db5d600"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dbdb010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e04f060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d3efe78"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dd752f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e0e63f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d4ea760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d4f7ef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d524010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d52ded0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e567188"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ece0988"/></to>
    </wire>
    <wire loc="60:BigPackC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ee50b90"/></to>
    </wire>
    <wire loc="62:BigPackC.nc">
      <from><interface-ref name="Timeout" scoped="" ref="0x7ee608e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ed11e98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7ed11e98"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ecf2848"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:BigPackC.nc">
      <from><interface-ref name="SendHeader" scoped="" ref="0x7ef41010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e831c60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7e831c60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d964010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:BigPackC.nc">
      <from><interface-ref name="SendData" scoped="" ref="0x7ef416e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d900ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d900ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d964010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:BigPackC.nc">
      <from><interface-ref name="ReceiveHeader" scoped="" ref="0x7ee93c98"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d8fa120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d8fa120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d964940"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:BigPackC.nc">
      <from><interface-ref name="ReceiveData" scoped="" ref="0x7eea2268"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d8eb040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d8eb040"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d964940"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:BigPackC.nc">
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7ee806d8"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d902310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d902310"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d965618"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7ecf2848"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ecd4100"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7ecd4100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7eac1370"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ece0988"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ecb30d8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7ecc29b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7ea61a88"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ecb30d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ec81970"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7ea70380"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ead2440"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ead04c8"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7eca1d00"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7eca1d00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ec81da8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ea603d0"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7ec90b20"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7ec90b20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7eb045b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x7eb045b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7d8dea80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7ec81970"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d8e1dd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7ec81da8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d8df270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d8dda78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ebb28b0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ebb28b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7eb942d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7d8da868"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7ebb0690"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7ebb0690"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7eb910a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x7d8d90c0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ebb0ee0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7ebb0ee0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7eb918f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7d8d87c8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7eba3628"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7eba3628"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7eb853d8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe3e38"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7eb85078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x7eac5bf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7ea64240"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ea36930"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7e8384f0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7e838838"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f232c50"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f232c50"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f071598"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7e838d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ea33988"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ea33988"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ea208d0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7e8371a8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ea23b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7df70580"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ea23488"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7e857160"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7ea16010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e858d58"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ea20c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc476b8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ea20c40"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ea11610"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ea11610"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ea06af0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ea11978"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ea23b80"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7e9f52f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7e9e6af8"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7e9e6af8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7e954330"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7e9f5c80"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ea11978"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7e9b2808"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7e8b8998"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7e9d0858"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7e926bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7e926bf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7bf718"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7e9c29d8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7e9146b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7e9146b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7780f8"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7e9b5808"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7e905ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7e905ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7276c0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7e9e5e78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7e9536b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7e9536b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d862010"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7e9b6508"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7e906840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7e906840"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d72a228"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7e9e3190"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7e9473a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7e9473a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8387f8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7e9d5348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7e936f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7e936f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d801a88"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7e9c65e8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7e924890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7e924890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7ba570"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7e9c07a8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7e912330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7e912330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d773010"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7e9f1e18"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7e9576b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7e9576b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d86ba08"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7e9e2e78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7e945030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7e945030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8336c0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7e9d2068"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7e934ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7e934ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7fc9e8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7e9c4348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7e9225d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7e9225d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7b5538"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7e9b3508"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7e902890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7e902890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d721538"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7e9b07a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7e8b03b0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7e9c36c8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7e915330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7e915330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d77cc78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7e954330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8669e8"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7e9e0bd8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7e944c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7e944c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d82e538"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7e9b1428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7e8b6cb8"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7e9d6010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7e937bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7e937bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8045e0"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7e9c7268"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7e9255d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7e9255d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7bd0f8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7e9c1428"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7e913030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7e913030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d777ac8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7e9b4190"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7e9035d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7e9035d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7250b0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7e9e4808"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7e952030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7e952030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8619e8"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7e9e3b00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7e947cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7e947cf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d836228"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7e9d5cb8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7e935890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7e935890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7ff538"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7e9c5010"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7e923250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7e923250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7b8010"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7e9b7188"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7e912c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7e912c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7729e8"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7e9f07a8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7e956030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7e956030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d869538"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7e9e1808"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7e945988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7e945988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8310b0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7e9d29d8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7e9335d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7e9335d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7f9538"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7e9b3e78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7e901250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7e901250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d71f010"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7e9d1d98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7e9262a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7e9262a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7d2d08"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7e9c2068"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7e915c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7e915c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d77a718"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7e9b6e78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7e905250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7e905250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d729c08"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7e9a7188"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7e8a66c0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7e9e5508"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7e954c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7e954c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d864538"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7e9d75e8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7e9436b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7e9436b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d82c010"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7e9b7af8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7e907eb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7e907eb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d72c7f8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7e9d6980"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7e9365d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7e9365d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8020b0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7e9c7bd8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7e925f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7e925f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7bcac8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7e9c1d98"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7e913988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7e913988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d775570"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7e9b4b00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7e903f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7e903f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d724a88"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7e9f14a8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7e960d18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7e960d18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d86c050"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7e9e2508"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7e9466b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7e9466b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d835c08"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7e9d36c8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7e934250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7e934250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7fd010"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7e9c5980"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7e923ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7e923ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7b79e8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7e9b1d98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7e8b2050"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7e9c4cb8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7e9169c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7e9169c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d77d2b0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7e9d1428"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7e933f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7e933f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7f7010"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7e9e6188"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7e956988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7e956988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d867010"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7e9e0268"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7e944330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7e944330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d830a88"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f071d30"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f052188"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f0108c0"/></to>
    </wire>
    <wire loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d965618"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d95ccb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d9015b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9635e0"/></to>
    </wire>
    <wire loc="62:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7d9635e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d95ac88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d9029a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e230ab8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7d962010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Send" scoped="" ref="0x7d6890a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d6890a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da07548"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7ef634d8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProtocolC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7d906778"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7d906e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7d906e50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e24bb60"/></to>
    </wire>
    <wire loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7da113b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e7f1450"/></to>
    </wire>
    <wire loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e7f1450"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e7763f8"/></to>
    </wire>
    <wire loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7e7b9070"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7da11a88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7da11a88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e24bb60"/></to>
    </wire>
    <wire loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7e7d5170"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7d974430"/></to>
    </wire>
    <wire loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7e7d5170"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7d96dc78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngine" scoped="" ref="0x7d96dc78"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7da04278"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngine" scoped="" ref="0x7d974430"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7da04278"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SinglePacketEngine" scoped="" ref="0x7e7e7010"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7d974430"/></to>
    </wire>
    <wire loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="DsrPacketEngine" scoped="" ref="0x7e7e7e68"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7d96dc78"/></to>
    </wire>
    <wire loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7e7c7aa8"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7d970360"/></to>
    </wire>
    <wire loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7e7c7aa8"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7d96cc20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketWaitList" scoped="" ref="0x7d96cc20"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7da03460"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PacketWaitList" scoped="" ref="0x7d970360"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7da03460"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7e7d26a0"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7d970360"/></to>
    </wire>
    <wire loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7e7c6330"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7d96cc20"/></to>
    </wire>
    <wire loc="62:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7e7c01c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e247e30"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e247e30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e229d38"/></to>
    </wire>
    <wire loc="63:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7e7c06a8"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d965618"/></to>
    </wire>
    <wire loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e7c0d50"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></to>
    </wire>
    <wire loc="65:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="ComposePacket" scoped="" ref="0x7e7c2970"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d90a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d90a010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9635e0"/></to>
    </wire>
    <wire loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7e7b9738"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d90c5f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d90c5f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d964010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e7763f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e684da8"/></to>
    </wire>
    <wire loc="76:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7e776af8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7e7b9070"/></to>
    </wire>
    <wire loc="78:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7e3fcb40"/></from>
      <to><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7e7d5170"/></to>
    </wire>
    <wire loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SinglePacketEngine" scoped="" ref="0x7e3fb9d0"/></from>
      <to><interface-ref name="SinglePacketEngine" scoped="" ref="0x7e7e7010"/></to>
    </wire>
    <wire loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="DsrPacketEngine" scoped="" ref="0x7e3fa818"/></from>
      <to><interface-ref name="DsrPacketEngine" scoped="" ref="0x7e7e7e68"/></to>
    </wire>
    <wire loc="81:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7e3f97c0"/></from>
      <to><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7e7c7aa8"/></to>
    </wire>
    <wire loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7e3f8370"/></from>
      <to><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7e7d26a0"/></to>
    </wire>
    <wire loc="83:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7e3f6010"/></from>
      <to><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7e7c6330"/></to>
    </wire>
    <wire loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7e3eee30"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7e7c01c0"/></to>
    </wire>
    <wire loc="86:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7e3ed350"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7e7c06a8"/></to>
    </wire>
    <wire loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e3ed9e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e7c0d50"/></to>
    </wire>
    <wire loc="88:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="ComposePacket" scoped="" ref="0x7e3ec6b0"/></from>
      <to><interface-ref name="ComposePacket" scoped="" ref="0x7e7c2970"/></to>
    </wire>
    <wire loc="90:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7e3ea170"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e7b9738"/></to>
    </wire>
    <wire loc="92:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="DsrHeader" scoped="" ref="0x7e400220"/></from>
      <to><interface-ref name="DsrHeader" scoped="" ref="0x7e7a2810"/></to>
    </wire>
    <wire loc="62:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="DsrHeader" scoped="" ref="0x7e7a2810"/></from>
      <to><interface-ref name="TlvBlockPacket" scoped="" ref="0x7e6d49b8"/></to>
    </wire>
    <wire loc="93:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequest" scoped="" ref="0x7e400718"/></from>
      <to><interface-ref name="RouteRequest" scoped="" ref="0x7e794420"/></to>
    </wire>
    <wire loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteRequest" scoped="" ref="0x7e794420"/></from>
      <to><interface-ref name="TlvSinglePacket" scoped="" ref="0x7e6d4f28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteError" scoped="" ref="0x7e400dd0"/></from>
      <to><interface-ref name="RouteError" scoped="" ref="0x7e792860"/></to>
    </wire>
    <wire loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteError" scoped="" ref="0x7e792860"/></from>
      <to><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7e685678"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteErrorList" scoped="" ref="0x7e3fd6f0"/></from>
      <to><interface-ref name="RouteErrorList" scoped="" ref="0x7e780180"/></to>
    </wire>
    <wire loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteErrorList" scoped="" ref="0x7e780180"/></from>
      <to><interface-ref name="TlvListPacket" scoped="" ref="0x7e684010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SourceRoute" scoped="" ref="0x7e3fc488"/></from>
      <to><interface-ref name="SourceRoute" scoped="" ref="0x7e778cd8"/></to>
    </wire>
    <wire loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="SourceRoute" scoped="" ref="0x7e778cd8"/></from>
      <to><interface-ref name="TlvSinglePacket" scoped="" ref="0x7e6d4f28"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteCache" scoped="" ref="0x7e3f6af0"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7e3e49b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RouteCache" scoped="" ref="0x7e3e49b8"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7d55a298"/></to>
    </wire>
    <wire loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SalvageRouteCache" scoped="" ref="0x7e3f5250"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7e3e49b8"/></to>
    </wire>
    <wire loc="100:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteNodeList" scoped="" ref="0x7e3f5998"/></from>
      <to><interface-ref name="RouteNodeList" scoped="" ref="0x7e3e3120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RouteNodeList" scoped="" ref="0x7e3e3120"/></from>
      <to><interface-ref name="RouteNodeList" scoped="" ref="0x7d55a9e0"/></to>
    </wire>
    <wire loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequestInCache" scoped="" ref="0x7e3f4578"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7da7b0a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataCache" scoped="" ref="0x7da7b0a0"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7d373778"/></to>
    </wire>
    <wire loc="102:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequestOutCache" scoped="" ref="0x7e3f3ab0"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7da54d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataCache" scoped="" ref="0x7da54d28"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7d357ba0"/></to>
    </wire>
    <wire loc="103:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequestOutTimer" scoped="" ref="0x7e3ee010"/></from>
      <to><interface-ref name="DataTimer" scoped="" ref="0x7da49c30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataTimer" scoped="" ref="0x7da49c30"/></from>
      <to><interface-ref name="DataTimer" scoped="" ref="0x7d341730"/></to>
    </wire>
    <wire loc="105:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Equal" scoped="" ref="0x7da565e0"/></from>
      <to><interface-ref name="RouteRequestInEqual" scoped="" ref="0x7e403b48"/></to>
    </wire>
    <wire loc="106:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Equal" scoped="" ref="0x7da512b0"/></from>
      <to><interface-ref name="RouteRequestOutEqual" scoped="" ref="0x7e402588"/></to>
    </wire>
    <wire loc="108:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Compose" scoped="" ref="0x7e3ecd68"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7da1f968"/></to>
    </wire>
    <wire loc="109:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Salvage" scoped="" ref="0x7e3eb7d0"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7da1d348"/></to>
    </wire>
    <wire loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e3ea808"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e56bf08"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e56bf08"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e567e50"/></to>
    </wire>
    <wire loc="113:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7e402eb8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ea36930"/></to>
    </wire>
    <wire loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="AckList" scoped="" ref="0x7e779f08"/></from>
      <to><interface-ref name="TlvListPacket" scoped="" ref="0x7e684010"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteReplyList" scoped="" ref="0x7e781a98"/></from>
      <to><interface-ref name="TlvListPacket" scoped="" ref="0x7e684010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7e684da8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d6759d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlockPacket" scoped="" ref="0x7e6d49b8"/></from>
      <to><interface-ref name="TlvBlockPacket" scoped="" ref="0x7d677570"/></to>
    </wire>
    <wire loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="AckRequest" scoped="" ref="0x7e780f28"/></from>
      <to><interface-ref name="TlvSinglePacket" scoped="" ref="0x7e6d4f28"/>
      <arguments>
        <value cst="I:160">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteReply" scoped="" ref="0x7e7853c8"/></from>
      <to><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7e685678"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="Ack" scoped="" ref="0x7e779610"/></from>
      <to><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7e685678"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7e682520"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7e776af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvListPacket" scoped="" ref="0x7e684010"/></from>
      <to><interface-ref name="TlvListPacket" scoped="" ref="0x7d676c28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7e685678"/></from>
      <to><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7d6762c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvSinglePacket" scoped="" ref="0x7e6d4f28"/></from>
      <to><interface-ref name="TlvSinglePacket" scoped="" ref="0x7d677ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7d671400"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7e682520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlock" scoped="" ref="0x7d674180"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7e6d3908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvSingle" scoped="" ref="0x7d6746f0"/></from>
      <to><interface-ref name="TlvSingle" scoped="" ref="0x7e6d1100"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvMultiple" scoped="" ref="0x7d674e30"/></from>
      <to><interface-ref name="TlvMultiple" scoped="" ref="0x7e6d1a38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvList" scoped="" ref="0x7d672738"/></from>
      <to><interface-ref name="TlvList" scoped="" ref="0x7e6d05a8"/></to>
    </wire>
    <wire loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7e662970"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7da02bb8"/></to>
    </wire>
    <wire loc="74:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7e662010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7da02258"/></to>
    </wire>
    <wire loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SendPool" scoped="" ref="0x7e644508"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7d9e0ca8"/></to>
    </wire>
    <wire loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7e654910"/></from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7da00d70"/></to>
    </wire>
    <wire loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="ReceivePool" scoped="" ref="0x7e646638"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7d9f8eb0"/></to>
    </wire>
    <wire loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e636768"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e56bf08"/></to>
    </wire>
    <wire loc="86:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7e639bd8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7d9dd640"/></to>
    </wire>
    <wire loc="83:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7e64a930"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7d9fe030"/></to>
    </wire>
    <wire loc="76:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7e659120"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7da00418"/></to>
    </wire>
    <wire loc="190:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <from><interface-ref name="msgAction" scoped="" ref="0x7e626618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <from><interface-ref name="msgAdded" scoped="" ref="0x7e627ea0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SendBackoff" scoped="" ref="0x7e636c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d9dc900"/></to>
    </wire>
    <wire loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e654d98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e567e50"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e562db8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7e56b658"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7e5675a0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7e5675a0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7e562508"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e575998"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e567188"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e567188"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e5620f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="composePkt" scoped="" ref="0x7e3eac40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RouteCache" scoped="" ref="0x7d55a298"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7e3d2600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RouteNodeList" scoped="" ref="0x7d55a9e0"/></from>
      <to><interface-ref name="PathEdgeList" scoped="" ref="0x7d5544a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PathEdgeList" scoped="" ref="0x7d5544a0"/></from>
      <to><interface-ref name="PathEdgeList" scoped="" ref="0x7d544c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d553058"/></from>
      <to><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7e264e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7e3c2050"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d558e28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7d558e28"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d5477d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SourceShortestPath" scoped="" ref="0x7e3baa30"/></from>
      <to><interface-ref name="SourceShortestPath" scoped="" ref="0x7d556af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SourceShortestPath" scoped="" ref="0x7d556af0"/></from>
      <to><interface-ref name="SourceShortestPath" scoped="" ref="0x7d544380"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Track" scoped="" ref="0x7e3d0030"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7d551520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Initial" scoped="" ref="0x7e3d09a0"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7d550d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e3ce320"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7d5477d0"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d52c200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PathEdgeList" scoped="" ref="0x7d544c88"/></from>
      <to><interface-ref name="PathEdgeList" scoped="" ref="0x7d4f5b28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SourceShortestPath" scoped="" ref="0x7d544380"/></from>
      <to><interface-ref name="SourceShortestPath" scoped="" ref="0x7d4f5220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7d557b30"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7d5464d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7d5464d0"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7d52ceb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7d556010"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7d546978"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7d546978"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7d52b390"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7d5437b0"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d5477d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7d5424d0"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7d5464d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7d540a78"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7d546978"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d542958"/></from>
      <to><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d553058"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IndexedAlloc" scoped="" ref="0x7d52be90"/></from>
      <to><interface-ref name="IndexedAlloc" scoped="" ref="0x7d52f820"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IndexedAlloc" scoped="" ref="0x7d52f820"/></from>
      <to><interface-ref name="IndexedAlloc" scoped="" ref="0x7d526440"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IndexedAlloc" scoped="" ref="0x7d526440"/></from>
      <to><interface-ref name="IndexedAlloc" scoped="" ref="0x7d5237b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Boot" scoped="" ref="0x7d522070"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ea36930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BitVector" scoped="" ref="0x7d522388"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7d524348"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7d4f3c48"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d5437b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7d4f2930"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7d5424d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d4f2db8"/></from>
      <to><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d542958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7d4f1e58"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7d540a78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x7d4f8900"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7d4f4728"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PriorityQueue" scoped="" ref="0x7d4f3070"/></from>
      <to><interface-ref name="PriorityQueue" scoped="" ref="0x7d4faba0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PriorityQueue" scoped="" ref="0x7d4faba0"/></from>
      <to><interface-ref name="PriorityQueue" scoped="" ref="0x7d4eaa78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x7d4e8740"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7d4f8900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="buildTreeTask" scoped="" ref="0x7d4ef9b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e249ce8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e242c60"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e242c60"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7dab1c70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e24c5a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e2414c8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e2414c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e205dd0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7e24b680"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e2305d0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7e2305d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e204f00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e24bb60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e22f778"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e22f778"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e201010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e24ced8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e241df8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e241df8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e204768"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e229d38"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7db1a010"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e230ab8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e202400"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7dab1c70"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7daaa6a0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7e2238f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7e1825d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7e1825d0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7e16ead0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e229768"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7db1b9b0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7e20db98"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7dab1168"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7dab1168"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7daa8ae8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7e2070b0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7da98060"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7da98060"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7da96c30"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7daaa6a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e1830c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e1830c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e180b20"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7e1f0010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7daf4bd0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7daf4bd0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dae7898"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7daf0380"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da9b998"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7da9b998"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7da98768"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7da98768"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dab2500"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7dab2500"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7dab0a58"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7dab0a58"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dab7da0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7dab7da0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7dab5010"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7dab5010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e1836a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7e1836a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e16e178"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7e1f06e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dab2ba0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7dab2ba0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7daaa188"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7daaa188"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dadbc48"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7dadbc48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dad3010"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7dad86e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dab64d8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7dab64d8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7dab6a28"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7dab6a28"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e183d68"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e183d68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7db62e00"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e1d1010"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7dc153f8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e1f0bc8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7db1b9b0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e1e79c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7db1a500"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7e1e03f0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e0ef340"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7e0ef340"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e0e6e00"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7db62e00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7db5c338"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e162e58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e230ab8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e1688b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e0f0bb8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e0f0bb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e0e6738"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e163a80"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e0ee200"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e0ee200"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e0e5c80"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e167450"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7dc00b98"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e167450"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7db624d8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7db624d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7db5d948"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7dc00b98"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7dbdb358"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7e150b18"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7dbff010"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7dbff010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dbdb7a8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7e162290"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7dbff6b8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7dbff6b8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7dbdbe70"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e14da40"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7db1b9b0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e14c060"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7db1a500"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e162a30"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e56bf08"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7e14c538"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7daf7070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7daf7070"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7dd7a718"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e146da8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7dc72bb8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7dc72bb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7dc638f8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7e143170"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7e144960"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7e144010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7e0e9670"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7e0e4788"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e0c2bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e230ab8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7e0e3478"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e04f508"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7e04f508"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e04ac90"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e0e1bb8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7deb4188"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7deb4188"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7e9e3190"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7e0e0608"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7deb3e78"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7deb3e78"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7e9e5e78"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7e0d2010"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7deb0190"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7deb0190"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7e9e5508"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7e0cc570"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7dea5b10"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7dea5b10"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7de13298"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e0c18b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dc40f08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dc40f08"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dddf450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7e0c0d78"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7dc3e528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dc3e528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e0c21a8"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7dc3e880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dc3e880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e0c2890"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7dc3d368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dc3d368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e0c2520"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7dc3d6c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dc3d6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e0c5800"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7dc3dd70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dc3dd70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e0c5cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7dc3c270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dc3c270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e0ca1a8"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7dc3c6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dc3c6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e0ca600"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7dc3cae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dc3cae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e0caa58"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7dc3cf18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dc3cf18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7e0c85e0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7dc39468"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dc39468"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7e0caea8"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7dc3a7a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7dc3a7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7e0c7338"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7dc3abd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7dc3abd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7e0b27c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dc34030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dc34030"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dddf450"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7e0b20d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dc23ea0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dc23ea0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dddf450"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e0ccb60"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7dc153f8"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7e0ae9c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7e0ae298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e04f060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dec43c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7dec43c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dec6b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7e04ac90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d492010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7d492010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d48c320"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7d489c00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d48fad8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7d48fad8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d4830b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x7d48ab40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7df30a28"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7df30a28"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7df0b0c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7d482840"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e02bb50"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e02bb50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e006cf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7d4646f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e010100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7e012388"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e003ac8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7e00d300"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e002770"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e010100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7e000330"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e010100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7dff2ac8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e010100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7dfef290"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7dfeea20"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7ebb0690"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7df70968"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e02bb50"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7def2150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7df2ae30"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7df2ae30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7df26890"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7df11878"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e02bb50"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7deb4af8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7e9d75e8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7deb3508"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7e9c07a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7dec0760"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7e9c5980"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7deb2808"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7e9c65e8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7dea54f8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7de90c60"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dea81b0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7de8c720"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7dea4300"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e00d300"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7de8cd18"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7de70be8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7de70be8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7de1d978"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7de138c8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7dec0760"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7de72430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7de336c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7de71be8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7de22788"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7de6f430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7de1ba88"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7de72be8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7de306c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7de70430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7de208f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7de73c50"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7de6b6c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7de71430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7de246c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7de6be78"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7de67c48"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7de33e78"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7de69010"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7de30e78"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7de69388"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7de24e78"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7de69700"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7de21010"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7de69a78"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7de1f0b8"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7de69df0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7de1c190"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7de681b0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7de1a270"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7de68528"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7de12df8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dc3d010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc39cd8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dc3a368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7dc3f5d0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7dddfb18"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7dddfb18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7dddbc58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dc3fe40"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7dc3da18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dc398a0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dc38190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ddde2f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dc3e1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dc39030"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc3fae8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dc3ebd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dc38968"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ddde2f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7ddde2f8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ddd7d50"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7dddec80"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ddd66c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7dddc438"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ddd6d88"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7dddf450"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ddd73f0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ddd54f8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7ddc3dd8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7dd81a38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7dd81a38"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7dd7a718"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ddd5890"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dd76858"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dd76858"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dd58300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ddc6050"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7dd76f10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x7dd76f10"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7dd598e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ddc39a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7dc73268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7dc73268"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7dd59c30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ddd05b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7dc72bb8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7ddc2e90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7dd7a718"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7dd758a0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7dd59c30"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7dd53080"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7dd598e8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7dd54d38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7dd76520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dd595a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dd595a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dd54a18"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7dd58300"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dd53718"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7dd46a40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dcbe570"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dcbe570"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d3ec1e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7dd347b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7dc76150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7dc76150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d3ecd30"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7dd3ae98"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7dd03300"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7dd03300"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7dcfd010"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7dd34bb8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></to>
    </wire>
    <wire loc="207:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7dd221e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7dcf6af8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7dcfa470"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7e9e3190"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7dcfade0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7e9e3b00"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7dcf97a8"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7e9e2508"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7dcf6188"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7e9e2e78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7dcbecb0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7d3ec928"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d3eb218"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7dc76600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7d3eb640"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7d3ed1d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7d3ebc38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dc476b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc635d8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7dc62628"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7dc50900"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7dc50900"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7e9f07a8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7dc61010"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7dc48368"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7dc48368"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7e9f1e18"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7dc61980"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7dc48cf8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7dc48cf8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7e9f14a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7dc28920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dc30c58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dc31190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc27f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dc284e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7dc28d58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dc303e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7dc346e8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7dddfb18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dc33010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7dc31b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dc31840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dc280b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dc314e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dc27ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dc26368"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ddde2f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dc33368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dc30820"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dc31ef0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dc336c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dc276a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dc27270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc34c00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dc33d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dc33a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dc26b40"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ddde2f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7dc1d6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dc1fa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dc21ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc1ccb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dc1d2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7dc1db20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dc1f190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7dc225a0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7dddfb18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dc22e10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7dc20910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dc205b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dc1fe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dc20260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dc1c880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dc1b190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ddde2f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dc21190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dc1f5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dc20c68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dc214e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dc1c448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dc1c010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc22ab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dc21b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dc21840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dc1b968"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ddde2f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7dbf6a90"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7dbd9e58"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7dbf6730"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7dbd9ad8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioTimeStamping" scoped="" ref="0x7dbf98e0"/></from>
      <to><interface-ref name="TimeStamp" scoped="" ref="0x7dbd9678"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7dbd8320"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e04f508"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7dbd6aa8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7dec0760"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7dbd5450"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7deb4188"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7dbd5e60"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7deb2808"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7dbd6498"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7dea54f8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7dbd4810"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7db77070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7db77070"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dddf450"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7dbd4ed8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7db77728"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7db77728"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7dddfb18"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7dbd1460"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7db76368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7db76368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7dbd17d0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7db76d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7db76d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dbd1b48"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7db75190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7db75190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dbd1ec0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7db76010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7db76010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dbd1010"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7db724e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7db724e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dbd2418"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7db70b40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7db70b40"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ddde2f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dbd2b10"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7db71f18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7db71f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dbd0260"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7db720b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7db720b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7dbc5408"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7db62900"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7db62900"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7db5dd70"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7dbd7a30"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7db1b9b0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dbd6040"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7db1a500"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7dbc5a08"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7dc72bb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7db72920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7db73c58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7db72d58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7db733e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7db75b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7db75840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7db754e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7db71ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7db70368"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ddde2f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7db73820"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7db75ef0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7db766c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7db716a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7db71270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7db77c40"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7db76a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7db61378"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7db5c878"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7db57e50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7dc72bb8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7db5cbe8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7deb4188"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7db5b608"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7deb4af8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7db5a010"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7deb3508"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7db5a9a8"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dea81b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7db59010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7db1db78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7db1db78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dddf450"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7db59700"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7db04cd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7db04cd8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ddde2f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7db581b0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7db1c768"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7db1c768"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7db59df0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7db075b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7db075b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7db58578"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7db1b9b0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7db58b68"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7db1a500"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7db57010"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e0ef340"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7db51278"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7db05368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7db066a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7db09b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7db048a0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7db06f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7db057a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7db07dc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7db1c250"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7dddfb18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7db1cac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7db07260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7db06ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7db09ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7db04468"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7db1ce18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7db06270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7db07910"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7dddc438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7db09190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7db04030"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7db05bd8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7dddec80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7db09840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7db094e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7db02510"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ddde2f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7dae5398"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7daf0380"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7dae5a38"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7dae93a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7dae93a8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7dd7a718"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7dae4238"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e56bf08"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dae4648"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7db1a500"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7dad8190"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7dad3528"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7dad3d98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7dad86e0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dad2328"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7db1a500"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7dab0270"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7daa7450"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7daa7450"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7dd7a718"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7da92368"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e247e30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Equal" scoped="" ref="0x7d372d38"/></from>
      <to><interface-ref name="Equal" scoped="" ref="0x7da565e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Equal" scoped="" ref="0x7d354110"/></from>
      <to><interface-ref name="Equal" scoped="" ref="0x7da512b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d340610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d3458f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d3458f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ecf2848"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7da02258"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d319ed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7d319ed8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d2d00c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7da02bb8"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d314c10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d314c10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e24ced8"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d314c10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e24b680"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7da00418"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Packet" scoped="" ref="0x7da113b0"/></to>
    </wire>
    <wire loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7da06610"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7e666cf8"/></to>
    </wire>
    <wire loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7da07548"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e670dd8"/></to>
    </wire>
    <wire loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7da06930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e669040"/></to>
    </wire>
    <wire loc="73:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="PacketWaitList" scoped="" ref="0x7da03460"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7e668b60"/></to>
    </wire>
    <wire loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="PacketEngine" scoped="" ref="0x7da04278"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7e669978"/></to>
    </wire>
    <wire loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7da07e78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e672768"/></to>
    </wire>
    <wire loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7da08e38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e670708"/></to>
    </wire>
    <wire loc="81:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Equal" scoped="" ref="0x7d9fc570"/></from>
      <to><interface-ref name="SendQueueEqual" scoped="" ref="0x7e65a390"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataCache" scoped="" ref="0x7d9fe030"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7d304628"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x7d9f8eb0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7d2f19d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x7d9e0ca8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7d2e88d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7d9dd640"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7dd7a718"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d9dc900"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ecf2848"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Equal" scoped="" ref="0x7d303b98"/></from>
      <to><interface-ref name="Equal" scoped="" ref="0x7d9fc570"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d316580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e24bb60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d316c18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7d315870"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e247e30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d2d0790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d9b52f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d2d0e28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7d9b52f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d9b1ec0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7d988648"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e24c5a8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d988cf0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7d987930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e24bb60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x7d986030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x7d986468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d313150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e24bb60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d3137e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></to>
    </wire>
    <wire loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7d964010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d95b6c8"/></to>
    </wire>
    <wire loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7d963100"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7d95a7a8"/></to>
    </wire>
    <wire loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7d964940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d95a010"/></to>
    </wire>
    <wire loc="63:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7d959708"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7d962010"/></to>
    </wire>
    <wire loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7d958100"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7d962970"/></to>
    </wire>
    <wire loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7d958610"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7da06930"/></to>
    </wire>
    <wire loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d958cb8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d90cc88"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d965618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d90b3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7d962010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Send" scoped="" ref="0x7d293958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d293958"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da07548"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7ef634d8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d292010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7da06930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7da00d70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7ef634d8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7d28fa78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7da02258"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d289260"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7d289260"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d2776a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7da02bb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d286030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d286030"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e24ced8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d286030"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e24b680"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7da00418"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d906778"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d2898f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e24bb60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d288010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7d288c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e247e30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d277d68"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d9b52f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d2764d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d286508"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e24bb60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d286ba0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d689738"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7da06930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7da00d70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7ef634d8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7d266620"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d8ff3f0"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d965618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d8fe690"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9635e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d8ffa88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7d962010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Send" scoped="" ref="0x7d260668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d260668"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da07548"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7ef634d8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d260d00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7da06930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7da00d70"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7ef634d8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7d25b918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d8fa5f8"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d965618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d8ed930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9635e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d8fac90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7d962970"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d255238"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d255238"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7da07e78"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d255710"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7da06930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d8eb518"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d965618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d8e9850"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9635e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d8ebbb0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7d962970"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d247948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d247948"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7da07e78"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d247e20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7da06930"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="BigPackC" loc="42:BigPackC.nc">
      <configuration/>
    </component>
    <component qname="BigPackP" loc="43:BigPackP.nc">
      <module/>
    </component>
    <component qname="BigPackC.TimeoutC" loc="36(BigPackC.TimeoutC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(BigPackC.TimeoutC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer. </short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7ec83cc0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10;</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.8 2007/04/08 01:17:12 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10;</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <documentation loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10;</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
    </component>
    <component qname="BigPackC.SendHeaderC" loc="41(BigPackC.SendHeaderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <instance number="0">
        <component-ref qname="SingleSenderC"/>
        <arguments>
          <value cst="I:22">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
        <short>&#10;&#10; Bundles the components which route and process DSR.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Bundles the components which route and process DSR.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DsrOptionsC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <configuration/>
    </component>
    <component qname="DsrOptionsC.TlvC" loc="45(DsrOptionsC.TlvC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketC.nc">
      <documentation loc="45(DsrOptionsC.TlvC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketC.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10;</short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10; This component does not assume any ordering by type among the TLV&#10;&#10; types in a block of types.  If at most one instance of a type is&#10;&#10; allowed, access the type via the TlvSingle interface.  If any number&#10;&#10; of instances are allowed, access the type via the TlvMultiple and&#10;&#10; TlvList interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TlvPacketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrOptionsC.TlvC.TlvPacketP" loc="45(DsrOptionsC.TlvC.TlvPacketP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketP.nc">
      <documentation loc="45(DsrOptionsC.TlvC.TlvPacketP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketP.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10;</short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10; This component does not assume any ordering by type among the TLV&#10;&#10; types in a block of types.  If at most one instance of a type is&#10;&#10; allowed, access the type via the TlvSingle interface.  If any number&#10;&#10; of instances are allowed, access the type via the TlvMultiple and&#10;&#10; TlvList interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TlvPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="TlvP" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
      <documentation loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor. </short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor.  This component&#10;&#10; does not assume any ordering by type among the TLV types in a&#10;&#10; block of types.  If at most one instance of a type is allowed,&#10;&#10; access the type via the TlvSingle interface.  If any number of&#10;&#10; instances are allowed, access the type via the TlvMultiple and&#10;&#10; TlvList interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketEngineP" loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <documentation loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
        <short>&#10;&#10; Queues packets sent, received, and overheard for a multihop routing&#10;&#10; protocol. </short>
        <long>&#10;&#10; Queues packets sent, received, and overheard for a multihop routing&#10;&#10; protocol.  This &#34;packet engine&#34; is intended to be flexible enough to&#10;&#10; support a wide array of possible protocols.&#10;&#10;&#10;&#10; A control component using the PacketEngine interfaces provided here&#10;&#10; is notified of and can control all of the above packets, while not&#10;&#10; having to deal with packet management issues itself.&#10;&#10;&#10;&#10; At any time after being notified of a packet's reception, the control&#10;&#10; component can modify the packet (if needed) and then instruct this engine&#10;&#10; to take one of the following actions:&#10;&#10;   - Send (pass to lower layer)&#10;&#10;   - Send with Intercept (pass to lower layer if upper layer approves)&#10;&#10;   - Receive (pass to upper layer)&#10;&#10;   - Drop (silently remove)&#10;&#10;&#10;&#10; Note that this allows for some unusual actions to take place, such as&#10;&#10; forcing a receive on a packet the upper layer has sent (which also&#10;&#10; means it won't go on the radio anymore).&#10;&#10;&#10;&#10; The control component is responsible for ensuring the packet is valid&#10;&#10; if it makes any modifications.  For example, it must update the payload&#10;&#10; length if the size of the payload changes.&#10;&#10;&#10;&#10; This component does not request acknowledgements or use any kind of&#10;&#10; automatic retry scheme.  However, the return value of the&#10;&#10; PacketEngine.sendDone event allows the control component to request&#10;&#10; a retry for any packet that failed to send.  The control component or&#10;&#10; the upper layer is certainly free to request acknowledgments on its own.&#10;&#10;&#10;&#10; When disabled, no new packets are accepted into the buffer and the&#10;&#10; packets already in the buffer are not processed but do remain in&#10;&#10; the buffer.  Processing resumes when enabled again.&#10;&#10;&#10;&#10; The AM type of packets sent from the upper layer is copied into the&#10;&#10; packet payload for storage so that multihop protocols can use AM types&#10;&#10; of their own without collisions.&#10;&#10;&#10;&#10; Based on TransceiverM by David Moss, CtpForwardingEngineP by Phil Levis,&#10;&#10; Kyle Jamieson, Omprakash Gnawali, and Rodrigo Fonseca, and&#10;&#10; ForwardingEngineM by Roamin Thouvenin.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10;</short>
        <long>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10; @author  Barbara Hohlt&#10; @author  Philip Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgP" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers. </short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;		S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrP.DsrControlP" loc="84(DsrP.DsrControlP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <instance number="0">
        <component-ref qname="DsrControlP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC" loc="40(DsrP.DsrRouteCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
      <documentation loc="40(DsrP.DsrRouteCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
        <short>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DsrRouteCacheC"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC" loc="42(DsrP.DsrRouteCacheC.SimpleLinkCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
      <instance number="0">
        <component-ref qname="SimpleLinkCacheC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e556080"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleLinkCacheP" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
        <short>&#10;&#10; A simple link cache that does not automatically remove links and&#10;&#10; assigns a weight of 1 to all links.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A simple link cache that does not automatically remove links and&#10;&#10; assigns a weight of 1 to all links.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC" loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <documentation loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
        <short>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single&#10;&#10; source shortest path.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single&#10;&#10; source shortest path.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GraphWeightedC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e556080"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7e3d9200"/></typename>
          </type-int>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC" loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
      <documentation loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any GraphSparseP. </short>
        <long>&#10;&#10; Wires supporting modules needed by any GraphSparseP.  This should be&#10;&#10; combined with a weight module and any processing modules.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GraphSparseC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC" loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocC.nc">
      <instance number="0">
        <component-ref qname="IndexedAllocC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits" loc="39(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc">
      <documentation loc="39(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc">
        <short>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IndexedAllocBitsC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e38b938"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits" loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e38b938"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits" loc="42(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <documentation loc="42(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
        <short>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements. </short>
        <long>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements.  While this is surely slower than a pointer-based system, it uses&#10;&#10; much less memory.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IndexedAllocBitsP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e38b938"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP" loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <documentation loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
        <short>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GraphSparseP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC" loc="38(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <documentation loc="38(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SourceShortestPathC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </value>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7e3a6478"/></type-var>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC" loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueC.nc">
      <instance number="0">
        <component-ref qname="PriorityQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP" loc="44(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
      <documentation loc="44(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
        <short>&#10;&#10; Implements a priority queue sitting on top of an index heap. </short>
        <long>&#10;&#10; Implements a priority queue sitting on top of an index heap.  It be either a&#10;&#10; min or max heap depending on the implementation of the Compare.test command.&#10;&#10; Since this is an index heap, none of the priorities are actually stored here.&#10;&#10; Instead, a component needs only to answer calls of Compare.test (which would&#10;&#10; typically be based on the priorities in some array owned by that component).&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PriorityQueueP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP" loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <documentation loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
        <short>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path. </short>
        <long>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path.  All weights are assumed to be&#10;&#10; non-negative.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SourceShortestPathP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </value>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7e32bc00"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.TrackC" loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.TrackC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.TrackC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialC" loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="GraphEdgeUnitWeightC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeUnitWeightC.nc">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeUnitWeightC.nc">
        <short>&#10;&#10; All edges are fixed at unit weight.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; All edges are fixed at unit weight.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="47:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision: 1.8 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.8 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7f080b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10;</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.4 2006/12/12 18:23:44 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.&#10;</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.5 2007/04/30 17:31:08 rincon Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/system/StateImplC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/system/StateImplP.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.&#10;&#10;</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller. </short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.6 2007/02/28 17:33:59 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10;</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.&#10;&#10;</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10;</short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10;</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(UniqueSendC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10;</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10;</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks. </short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10;</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10;</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(DummyLplC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10;</short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10;</short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestInCacheC" loc="30(DsrP.RouteRequestInCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <documentation loc="30(DsrP.RouteRequestInCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruDataCacheC"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7e7f75c0"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7e7f78e0"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestInCacheC.CacheP" loc="67(DsrP.RouteRequestInCacheC.CacheP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <documentation loc="67(DsrP.RouteRequestInCacheC.CacheP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruDataCacheP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7da7a010"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestOutCacheC" loc="30(DsrP.RouteRequestOutCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <documentation loc="30(DsrP.RouteRequestOutCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LruDataCacheC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7e7f8ce0"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7e7f7058"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestOutCacheC.CacheP" loc="67(DsrP.RouteRequestOutCacheC.CacheP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <documentation loc="67(DsrP.RouteRequestOutCacheC.CacheP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LruDataCacheP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7da7a010"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestOutTimerC" loc="39(DsrP.RouteRequestOutTimerC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
      <documentation loc="39(DsrP.RouteRequestOutTimerC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DataTimerC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
          </type-int>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestOutTimerC.TimerMilliC" loc="36(DsrP.RouteRequestOutTimerC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(DsrP.RouteRequestOutTimerC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestOutTimerC.DataTimerP" loc="44(DsrP.RouteRequestOutTimerC.DataTimerP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
      <documentation loc="44(DsrP.RouteRequestOutTimerC.DataTimerP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.  Uses the Equal interface to allow complex data types, but&#10;&#10; the default supplied works for primitive types.&#10;&#10;&#10;&#10; TODO: Change to use a &#34;first&#34;.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DataTimerP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_timer_data_t" scoped="" ref="0x7da47438"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.ComposeC" loc="33(DsrP.ComposeC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.ComposeC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.SalvageC" loc="33(DsrP.SalvageC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.SalvageC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrC.DsrTransceiverC" loc="42(DsrC.DsrTransceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <documentation loc="42(DsrC.DsrTransceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
        <short>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type. </short>
        <long>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type.  The Packet&#10;&#10; interface used by this component should be provided by the protocol.&#10;&#10; Similarly, the SubPacket interface provided by this component should&#10;&#10; be used by the protocol to complete the chain of Packet interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketTransceiverC"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any PacketEngineP.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Wires supporting modules needed by any PacketEngineP.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketEngineC.SendQueueC" loc="30(PacketEngineC.SendQueueC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <documentation loc="30(PacketEngineC.SendQueueC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="LruDataCacheC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ef52af8"/>
            <typename><typedef-ref name="packet_send_entry_t" ref="0x7ef52d48"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC.SendQueueC.CacheP" loc="67(PacketEngineC.SendQueueC.CacheP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <documentation loc="67(PacketEngineC.SendQueueC.CacheP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="LruDataCacheP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7da7a010"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PacketEngineC.ReceivePoolC" loc="41(PacketEngineC.ReceivePoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="41(PacketEngineC.ReceivePoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.&#10;&#10; </short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
            <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC.ReceivePoolC.PoolP" loc="53(PacketEngineC.ReceivePoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="53(PacketEngineC.ReceivePoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.&#10; </short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7d9f6190"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PacketEngineC.SendPoolC" loc="41(PacketEngineC.SendPoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="41(PacketEngineC.SendPoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.&#10;&#10; </short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
            <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC.SendPoolC.PoolP" loc="53(PacketEngineC.SendPoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="53(PacketEngineC.SendPoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.&#10; </short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7d9f6190"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PacketEngineC.SendStateC" loc="65(PacketEngineC.SendStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(PacketEngineC.SendStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC.SendBackoffC" loc="36(PacketEngineC.SendBackoffC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(PacketEngineC.SendBackoffC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrTransceiverC.AMSenderC" loc="39(DsrC.DsrTransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(DsrC.DsrTransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP" loc="35(DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.&#10;&#10;</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC" loc="36(DsrC.DsrTransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <documentation loc="36(DsrC.DsrTransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
        <short>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10;</short>
        <long>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnoopingReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.SinglePacketProcessorC" loc="39(DsrC.SinglePacketProcessorC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <documentation loc="39(DsrC.SinglePacketProcessorC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
        <short>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketProcessorC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrPacketProcessorC" loc="39(DsrC.DsrPacketProcessorC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <documentation loc="39(DsrC.DsrPacketProcessorC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
        <short>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketProcessorC"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SinglePacketC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
        <short>&#10;&#10; Connects to SinglePacketP to supporting modules.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects to SinglePacketP to supporting modules.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SinglePacketP" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
        <short>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrC.DsrSendC" loc="41(DsrC.DsrSendC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <documentation loc="41(DsrC.DsrSendC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc">
        <short>&#10;&#10; Modified sender for single destination multihop packets of created&#10;&#10; by a PacketEngine processor for a given link layer AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Modified sender for single destination multihop packets of created&#10;&#10; by a PacketEngine processor for a given link layer AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SingleProcessorSenderC"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrSendC.PacketSenderC" loc="39(DsrC.DsrSendC.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <documentation loc="39(DsrC.DsrSendC.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketSenderC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrSendC.PacketSenderC.PacketEngineClientP" loc="40(DsrC.DsrSendC.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <documentation loc="40(DsrC.DsrSendC.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketEngineClientP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SingleProtocolC.TransceiverC" loc="42(SingleProtocolC.TransceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <documentation loc="42(SingleProtocolC.TransceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
        <short>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type. </short>
        <long>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type.  The Packet&#10;&#10; interface used by this component should be provided by the protocol.&#10;&#10; Similarly, the SubPacket interface provided by this component should&#10;&#10; be used by the protocol to complete the chain of Packet interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketTransceiverC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SingleProtocolC.TransceiverC.AMSenderC" loc="39(SingleProtocolC.TransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(SingleProtocolC.TransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP" loc="35(SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC" loc="36(SingleProtocolC.TransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <documentation loc="36(SingleProtocolC.TransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
        <short>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10;</short>
        <long>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSnoopingReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BigPackC.SendHeaderC.PacketSenderC" loc="39(BigPackC.SendHeaderC.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <documentation loc="39(BigPackC.SendHeaderC.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BigPackC.SendHeaderC.PacketSenderC.PacketEngineClientP" loc="40(BigPackC.SendHeaderC.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <documentation loc="40(BigPackC.SendHeaderC.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketEngineClientP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BigPackC.SendDataC" loc="41(BigPackC.SendDataC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <instance number="1">
        <component-ref qname="SingleSenderC"/>
        <arguments>
          <value cst="I:23">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BigPackC.SendDataC.PacketSenderC" loc="39(BigPackC.SendDataC.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <documentation loc="39(BigPackC.SendDataC.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PacketSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BigPackC.SendDataC.PacketSenderC.PacketEngineClientP" loc="40(BigPackC.SendDataC.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <documentation loc="40(BigPackC.SendDataC.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PacketEngineClientP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BigPackC.ReceiveHeaderC" loc="41(BigPackC.ReceiveHeaderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <documentation loc="41(BigPackC.ReceiveHeaderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
        <short>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SingleReceiverC"/>
        <arguments>
          <value cst="I:22">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BigPackC.ReceiveHeaderC.PacketReceiverC" loc="39(BigPackC.ReceiveHeaderC.PacketReceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
      <documentation loc="39(BigPackC.ReceiveHeaderC.PacketReceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
        <short>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BigPackC.ReceiveDataC" loc="41(BigPackC.ReceiveDataC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <documentation loc="41(BigPackC.ReceiveDataC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
        <short>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SingleReceiverC"/>
        <arguments>
          <value cst="I:23">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BigPackC.ReceiveDataC.PacketReceiverC" loc="39(BigPackC.ReceiveDataC.PacketReceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
      <documentation loc="39(BigPackC.ReceiveDataC.PacketReceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
        <short>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7ec83cc0" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7ec83cc0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7ec83e40" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7ec62010" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7ec62010"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7ec62190" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7eb00c48" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7eb00c48"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7eac0698" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7eac0698"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7eac0820" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ea56228" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ea56228"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7e9a1588" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7e9a1718" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7e9a18a8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7e990988" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7e990b28" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7e990cc8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7e990e60" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7e8f3868" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7e8f3a08" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7e8f3ba8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7e8f3d40" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SingleSenderC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc" abstract="">
      <parameters>
        <constant name="upperId" ref="0x7e827650" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
          <component-ref qname="SingleSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TlvPacketC" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketC.nc" abstract="">
      <documentation loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketC.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10;</short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10; This component does not assume any ordering by type among the TLV&#10;&#10; types in a block of types.  If at most one instance of a type is&#10;&#10; allowed, access the type via the TlvSingle interface.  If any number&#10;&#10; of instances are allowed, access the type via the TlvMultiple and&#10;&#10; TlvList interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TlvPacketP" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketP.nc" abstract="">
      <documentation loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketP.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10;</short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10; This component does not assume any ordering by type among the TLV&#10;&#10; types in a block of types.  If at most one instance of a type is&#10;&#10; allowed, access the type via the TlvSingle interface.  If any number&#10;&#10; of instances are allowed, access the type via the TlvMultiple and&#10;&#10; TlvList interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DsrControlP" loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc" abstract="">
      <parameters>
        <constant name="BUFFER_SIZE" ref="0x7e5555f0" loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
          <component-ref qname="DsrControlP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DsrRouteCacheC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc" abstract="">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
        <short>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxNodes" ref="0x7e3e2930" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
          <component-ref qname="DsrRouteCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
          </type-int>
        </constant>
        <constant name="maxLinks" ref="0x7e3e2ae0" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
          <component-ref qname="DsrRouteCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e556080"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleLinkCacheC" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc" abstract="">
      <parameters>
        <constant name="maxNodes" ref="0x7e3d8668" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
          <component-ref qname="SimpleLinkCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
          </type-int>
        </constant>
        <constant name="maxLinks" ref="0x7e3d8818" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
          <component-ref qname="SimpleLinkCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e556080"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="GraphWeightedC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc" abstract="">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
        <short>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single&#10;&#10; source shortest path.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single&#10;&#10; source shortest path.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7e3a7da0" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
          </type-int>
        </constant>
        <constant name="maxEdges" ref="0x7e3a6010" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
          </type-int>
        </constant>
        <constant name="parallelEdges" ref="0x7e3a61b0" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
        </constant>
        <typedef name="graph_edge_weight_t" ref="0x7e3a6478" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7e3a6478"/></type-var>
        </typedef>
      </parameters>
      <configuration/>
    </component>
    <component qname="GraphSparseC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc" abstract="">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any GraphSparseP. </short>
        <long>&#10;&#10; Wires supporting modules needed by any GraphSparseP.  This should be&#10;&#10; combined with a weight module and any processing modules.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7e3934a8" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
          <component-ref qname="GraphSparseC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
          </type-int>
        </constant>
        <constant name="maxEdges" ref="0x7e393650" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
          <component-ref qname="GraphSparseC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
          </type-int>
        </constant>
        <constant name="parallelEdges" ref="0x7e3937f0" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
          <component-ref qname="GraphSparseC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IndexedAllocC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocC.nc" abstract="">
      <parameters>
        <constant name="MAX_SIZE" ref="0x7e38bdd8" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocC.nc">
          <component-ref qname="IndexedAllocC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e38b938"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IndexedAllocBitsC" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc" abstract="">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc">
        <short>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxSize" ref="0x7e37e138" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc">
          <component-ref qname="IndexedAllocBitsC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e38b938"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BitVectorC" loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x7e37dc40" loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="IndexedAllocBitsP" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc" abstract="">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
        <short>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements. </short>
        <long>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements.  While this is surely slower than a pointer-based system, it uses&#10;&#10; much less memory.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxSize" ref="0x7e365010" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
          <component-ref qname="IndexedAllocBitsP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e38b938"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GraphSparseP" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc" abstract="">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
        <short>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7e353418" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
          <component-ref qname="GraphSparseP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
          </type-int>
        </constant>
        <constant name="maxEdges" ref="0x7e3535c0" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
          <component-ref qname="GraphSparseP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
          </type-int>
        </constant>
        <constant name="parallelEdges" ref="0x7e353760" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
          <component-ref qname="GraphSparseP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SourceShortestPathC" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc" abstract="">
      <documentation loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7e32b938" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
          <component-ref qname="SourceShortestPathC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
          </type-int>
        </constant>
        <typedef name="graph_edge_weight_t" ref="0x7e32bc00" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
          <component-ref qname="SourceShortestPathC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7e32bc00"/></type-var>
        </typedef>
      </parameters>
      <configuration/>
    </component>
    <component qname="PriorityQueueC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueC.nc" abstract="">
      <parameters>
        <constant name="maxSize" ref="0x7e320010" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueC.nc">
          <component-ref qname="PriorityQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PriorityQueueP" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc" abstract="">
      <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
        <short>&#10;&#10; Implements a priority queue sitting on top of an index heap. </short>
        <long>&#10;&#10; Implements a priority queue sitting on top of an index heap.  It be either a&#10;&#10; min or max heap depending on the implementation of the Compare.test command.&#10;&#10; Since this is an index heap, none of the priorities are actually stored here.&#10;&#10; Instead, a component needs only to answer calls of Compare.test (which would&#10;&#10; typically be based on the priorities in some array owned by that component).&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxSize" ref="0x7e310e78" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
          <component-ref qname="PriorityQueueP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SourceShortestPathP" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc" abstract="">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
        <short>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path. </short>
        <long>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path.  All weights are assumed to be&#10;&#10; non-negative.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7e2e6210" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
          <component-ref qname="SourceShortestPathP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
          </type-int>
        </constant>
        <typedef name="graph_edge_weight_t" ref="0x7e2e64d8" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
          <component-ref qname="SourceShortestPathP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7e2e64d8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7df6e998" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7df6e998"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7df6eb28" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7df66c78" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7df66c78"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7df63010" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7df63010"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7df631a0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7df24090" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7df24090"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7df24350" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7df24350"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7df0a038" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7df0a038"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7df0a2f8" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7df0a2f8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7df0a4c0" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7df0a4c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7df0a780" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7df0a780"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7df0a920" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7df0abe8" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7df0abe8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="">
      <documentation loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7deee3c0" loc="41:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7deee3c0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7deee680" loc="42:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7deee680"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7deee848" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7deee848"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7deeeb08" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7deeeb08"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7deeeca8" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="">
      <documentation loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7de3d968" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7de3db08" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7de3dca8" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7de3de40" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.x/tos/system/StateC.nc" abstract="">
      <documentation loc="65:/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7dcbd1d8" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7dcb2450" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="LruDataCacheC" loc="30:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc" abstract="">
      <documentation loc="30:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_cache_item_t" ref="0x7da7a010" loc="30:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
          <component-ref qname="LruDataCacheC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7da7a010"/></type-var>
        </typedef>
        <constant name="size" ref="0x7da7a198" loc="30:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
          <component-ref qname="LruDataCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruDataCacheP" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc" abstract="">
      <documentation loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_cache_item_t" ref="0x7da73700" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
          <component-ref qname="LruDataCacheP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7da73700"/></type-var>
        </typedef>
        <constant name="size" ref="0x7da73888" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
          <component-ref qname="LruDataCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DataTimerC" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc" abstract="">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_timer_data_t" ref="0x7da47438" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
          <component-ref qname="DataTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_timer_data_t" scoped="" ref="0x7da47438"/></type-var>
        </typedef>
        <constant name="maxSize" ref="0x7da475c0" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
          <component-ref qname="DataTimerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DataTimerP" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc" abstract="">
      <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.  Uses the Equal interface to allow complex data types, but&#10;&#10; the default supplied works for primitive types.&#10;&#10;&#10;&#10; TODO: Change to use a &#34;first&#34;.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_timer_data_t" ref="0x7da3ec50" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
          <component-ref qname="DataTimerP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_timer_data_t" scoped="" ref="0x7da3ec50"/></type-var>
        </typedef>
        <constant name="maxSize" ref="0x7da3edd8" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
          <component-ref qname="DataTimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketTransceiverC" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc" abstract="">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
        <short>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type. </short>
        <long>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type.  The Packet&#10;&#10; interface used by this component should be provided by the protocol.&#10;&#10; Similarly, the SubPacket interface provided by this component should&#10;&#10; be used by the protocol to complete the chain of Packet interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="lowerId" ref="0x7da105a0" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
          <component-ref qname="PacketTransceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.&#10;&#10; </short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7d9f6190" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7d9f6190"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7d9f6320" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.&#10; </short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7d9f18d8" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7d9f18d8"/></type-var>
        </typedef>
        <constant name="size" ref="0x7d9f1a60" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7d9c9010" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7d9c2440" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7d9b0390" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSnoopingReceiverC" loc="36:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
        <short>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10;</short>
        <long>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7d97d768" loc="36:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
          <component-ref qname="AMSnoopingReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketProcessorC" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc" abstract="">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
        <short>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="lowerId" ref="0x7d9739b8" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
          <component-ref qname="PacketProcessorC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SingleProcessorSenderC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc" abstract="">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc">
        <short>&#10;&#10; Modified sender for single destination multihop packets of created&#10;&#10; by a PacketEngine processor for a given link layer AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Modified sender for single destination multihop packets of created&#10;&#10; by a PacketEngine processor for a given link layer AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="lowerId" ref="0x7d921e98" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc">
          <component-ref qname="SingleProcessorSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketSenderC" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc" abstract="">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7d919180" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
          <component-ref qname="PacketSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </constant>
        <constant name="defLowerId" ref="0x7d919310" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
          <component-ref qname="PacketSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </constant>
        <constant name="clientId" ref="0x7d9194c0" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
          <component-ref qname="PacketSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7ef634d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketEngineClientP" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc" abstract="">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upper" ref="0x7d913b90" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
          <component-ref qname="PacketEngineClientP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </constant>
        <constant name="defLower" ref="0x7d913d20" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
          <component-ref qname="PacketEngineClientP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SingleReceiverC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc" abstract="">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
        <short>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7d8f9ed8" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
          <component-ref qname="SingleReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketReceiverC" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc" abstract="">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
        <short>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7d8f2858" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
          <component-ref qname="PacketReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="1" name="BigPackServer" ref="0x7ef834b8" loc="44:BigPackC.nc">
      <component-ref qname="BigPackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BigPackServer" scoped="" ref="0x7ef834b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigPackServer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="packBuilt" scoped="" ref="0x7ef83690"/>
        <function-ref name="createEnvelope" scoped="" ref="0x7ef83770"/>
        <function-ref name="buildPack" scoped="" ref="0x7ef83850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BigPackClient" ref="0x7ef72680" loc="45:BigPackC.nc">
      <component-ref qname="BigPackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BigPackClient" scoped="" ref="0x7ef72680"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigPackClient"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestDone" scoped="" ref="0x7ef72858"/>
        <function-ref name="registerListener" scoped="" ref="0x7ef72938"/>
        <function-ref name="request" scoped="" ref="0x7ef72a18"/>
        <function-ref name="free" scoped="" ref="0x7ef72af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendHeader" ref="0x7ef41010" loc="45:BigPackP.nc">
      <component-ref qname="BigPackP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendHeader" scoped="" ref="0x7ef41010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ef411e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7ef412c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ef413a8"/>
        <function-ref name="cancel" scoped="" ref="0x7ef41488"/>
        <function-ref name="sendDone" scoped="" ref="0x7ef41568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacket" ref="0x7ee806d8" loc="49:BigPackP.nc">
      <component-ref qname="BigPackP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7ee806d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7ee808b0"/>
        <function-ref name="destination" scoped="" ref="0x7ee80990"/>
        <function-ref name="setSource" scoped="" ref="0x7ee80a70"/>
        <function-ref name="setDestination" scoped="" ref="0x7ee80b50"/>
        <function-ref name="isForMe" scoped="" ref="0x7ee80c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveHeader" ref="0x7ee93c98" loc="47:BigPackP.nc">
      <component-ref qname="BigPackP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveHeader" scoped="" ref="0x7ee93c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7ee93e70"/>
        <function-ref name="receive" scoped="" ref="0x7eea2010"/>
        <function-ref name="getPayload" scoped="" ref="0x7eea20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timeout" ref="0x7ee608e8" loc="50:BigPackP.nc">
      <component-ref qname="BigPackP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timeout" scoped="" ref="0x7ee608e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ee71208"/>
        <function-ref name="fired" scoped="" ref="0x7ee72608"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ee72ba8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ee729c8"/>
        <function-ref name="getdt" scoped="" ref="0x7ee715c8"/>
        <function-ref name="gett0" scoped="" ref="0x7ee713e8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ee727e8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ee60f10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ee72ec8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ee721a8"/>
        <function-ref name="stop" scoped="" ref="0x7ee72428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BigPackServer" ref="0x7ee51178" loc="54:BigPackP.nc">
      <component-ref qname="BigPackP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BigPackServer" scoped="" ref="0x7ee51178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigPackServer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="packBuilt" scoped="" ref="0x7ee51350"/>
        <function-ref name="createEnvelope" scoped="" ref="0x7ee51430"/>
        <function-ref name="buildPack" scoped="" ref="0x7ee51510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ee50b90" loc="53:BigPackP.nc">
      <component-ref qname="BigPackP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ee50b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee50d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveData" ref="0x7eea2268" loc="48:BigPackP.nc">
      <component-ref qname="BigPackP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveData" scoped="" ref="0x7eea2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7eea2440"/>
        <function-ref name="receive" scoped="" ref="0x7eea2520"/>
        <function-ref name="getPayload" scoped="" ref="0x7eea2600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BigPackClient" ref="0x7ee518f0" loc="55:BigPackP.nc">
      <component-ref qname="BigPackP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BigPackClient" scoped="" ref="0x7ee518f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigPackClient"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestDone" scoped="" ref="0x7ee51ac8"/>
        <function-ref name="registerListener" scoped="" ref="0x7ee51ba8"/>
        <function-ref name="request" scoped="" ref="0x7ee51c88"/>
        <function-ref name="free" scoped="" ref="0x7ee51d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendData" ref="0x7ef416e0" loc="46:BigPackP.nc">
      <component-ref qname="BigPackP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendData" scoped="" ref="0x7ef416e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ef418b8"/>
        <function-ref name="getPayload" scoped="" ref="0x7ef41998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ef41a78"/>
        <function-ref name="cancel" scoped="" ref="0x7ef41b58"/>
        <function-ref name="sendDone" scoped="" ref="0x7ef41c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ed11e98" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BigPackC.TimeoutC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7ed11e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ecf3830"/>
        <function-ref name="fired" scoped="" ref="0x7ed10bb8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ecf31f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ecf3010"/>
        <function-ref name="getdt" scoped="" ref="0x7ecf3bf0"/>
        <function-ref name="gett0" scoped="" ref="0x7ecf3a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7ed10d98"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ed104d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ecf3510"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ed10758"/>
        <function-ref name="stop" scoped="" ref="0x7ed109d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7ecf2848" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7ecf2848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ece4170"/>
        <function-ref name="fired" scoped="" ref="0x7ecf1570"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ecf1b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ecf1930"/>
        <function-ref name="getdt" scoped="" ref="0x7ece4530"/>
        <function-ref name="gett0" scoped="" ref="0x7ece4350"/>
        <function-ref name="isRunning" scoped="" ref="0x7ecf1750"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ecf2e70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ecf1e30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ecf1110"/>
        <function-ref name="stop" scoped="" ref="0x7ecf1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7ecd4100" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7ecd4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ecd3a10"/>
        <function-ref name="fired" scoped="" ref="0x7ecd4e08"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ecd33d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ecd31f0"/>
        <function-ref name="getdt" scoped="" ref="0x7ecd3dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7ecd3bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ecd3010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ecd4728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ecd36f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ecd49a8"/>
        <function-ref name="stop" scoped="" ref="0x7ecd4c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ecc29b0" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7ecc29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ecc4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ece0988" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ece0988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ece0b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7ec90b20" loc="29:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7ec90b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ec93308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ec93708"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ec93508"/>
        <function-ref name="overflow" scoped="" ref="0x7ec93908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ecb30d8" loc="27:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ecb30d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ecb32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7eca1d00" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7eca1d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7eca0068"/>
        <function-ref name="fired" scoped="" ref="0x7ecb0918"/>
        <function-ref name="startAt" scoped="" ref="0x7ecb0d18"/>
        <function-ref name="isRunning" scoped="" ref="0x7ecb0b18"/>
        <function-ref name="getAlarm" scoped="" ref="0x7eca0268"/>
        <function-ref name="start" scoped="" ref="0x7ecb0478"/>
        <function-ref name="stop" scoped="" ref="0x7ecb0718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ec81da8" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7ec81da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7eb040f8"/>
        <function-ref name="fired" scoped="" ref="0x7eb109a8"/>
        <function-ref name="startAt" scoped="" ref="0x7eb10da8"/>
        <function-ref name="isRunning" scoped="" ref="0x7eb10ba8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7eb042f8"/>
        <function-ref name="start" scoped="" ref="0x7eb10508"/>
        <function-ref name="stop" scoped="" ref="0x7eb107a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ec81970" loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ec81970"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f252010"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f252010"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec81b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7eb045b0" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7eb045b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7eb04d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7eb03128"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7eb04f00"/>
        <function-ref name="overflow" scoped="" ref="0x7eb03328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7d8da868" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7d8da868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7d8daa40"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7d8dab20"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7d8dac00"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7d8dace0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7d8dadc0"/>
        <function-ref name="setControl" scoped="" ref="0x7d8daea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d8df270" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d8df270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d8de5c8"/>
        <function-ref name="fired" scoped="" ref="0x7d8dfe60"/>
        <function-ref name="startAt" scoped="" ref="0x7d8de288"/>
        <function-ref name="isRunning" scoped="" ref="0x7d8de088"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d8de7c8"/>
        <function-ref name="start" scoped="" ref="0x7d8df9c0"/>
        <function-ref name="stop" scoped="" ref="0x7d8dfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d8e1dd8" loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d8e1dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d8df010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7d8dea80" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d8dea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d8dd200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d8dd600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d8dd400"/>
        <function-ref name="overflow" scoped="" ref="0x7d8dd800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7d8d87c8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7d8d87c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7d8d89a0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7d8d8a80"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7d8d8b60"/>
        <function-ref name="countBusy" scoped="" ref="0x7d8d8c40"/>
        <function-ref name="getAssr" scoped="" ref="0x7d8d8d20"/>
        <function-ref name="setAssr" scoped="" ref="0x7d8d8e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7d8d90c0" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d8d90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d8d8410"/>
        <function-ref name="fired" scoped="" ref="0x7d8d9ba8"/>
        <function-ref name="get" scoped="" ref="0x7d8d9708"/>
        <function-ref name="reset" scoped="" ref="0x7d8d9da8"/>
        <function-ref name="isOn" scoped="" ref="0x7d8d8610"/>
        <function-ref name="set" scoped="" ref="0x7d8d9908"/>
        <function-ref name="start" scoped="" ref="0x7d8d8010"/>
        <function-ref name="stop" scoped="" ref="0x7d8d8210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d8dda78" loc="30:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d8dda78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d8da210"/>
        <function-ref name="test" scoped="" ref="0x7d8dbd78"/>
        <function-ref name="get" scoped="" ref="0x7d8db0d8"/>
        <function-ref name="setScale" scoped="" ref="0x7d8da410"/>
        <function-ref name="getScale" scoped="" ref="0x7d8da6b0"/>
        <function-ref name="reset" scoped="" ref="0x7d8db778"/>
        <function-ref name="overflow" scoped="" ref="0x7d8db578"/>
        <function-ref name="isOn" scoped="" ref="0x7d8da010"/>
        <function-ref name="set" scoped="" ref="0x7d8db2d8"/>
        <function-ref name="start" scoped="" ref="0x7d8db978"/>
        <function-ref name="stop" scoped="" ref="0x7d8dbb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7ebb0690" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7ebb0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7ebb0868"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7ebb0948"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7ebb0a28"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7ebb0b08"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7ebb0be8"/>
        <function-ref name="setControl" scoped="" ref="0x7ebb0cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7eba3628" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7eba3628"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7eba3800"/>
        <function-ref name="compareBusy" scoped="" ref="0x7eba38e0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7eba39c0"/>
        <function-ref name="countBusy" scoped="" ref="0x7eba3aa0"/>
        <function-ref name="getAssr" scoped="" ref="0x7eba3b80"/>
        <function-ref name="setAssr" scoped="" ref="0x7eba3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ebb0ee0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7ebb0ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7eba3248"/>
        <function-ref name="fired" scoped="" ref="0x7eba4a18"/>
        <function-ref name="get" scoped="" ref="0x7eba4578"/>
        <function-ref name="reset" scoped="" ref="0x7eba4c18"/>
        <function-ref name="isOn" scoped="" ref="0x7eba3448"/>
        <function-ref name="set" scoped="" ref="0x7eba4778"/>
        <function-ref name="start" scoped="" ref="0x7eba4e18"/>
        <function-ref name="stop" scoped="" ref="0x7eba3048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ebb28b0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7ebb28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7ebb0010"/>
        <function-ref name="test" scoped="" ref="0x7ebb1bc8"/>
        <function-ref name="get" scoped="" ref="0x7ebb2ef8"/>
        <function-ref name="setScale" scoped="" ref="0x7ebb0210"/>
        <function-ref name="getScale" scoped="" ref="0x7ebb04b0"/>
        <function-ref name="reset" scoped="" ref="0x7ebb15c8"/>
        <function-ref name="overflow" scoped="" ref="0x7ebb13c8"/>
        <function-ref name="isOn" scoped="" ref="0x7ebb1dc8"/>
        <function-ref name="set" scoped="" ref="0x7ebb1128"/>
        <function-ref name="start" scoped="" ref="0x7ebb17c8"/>
        <function-ref name="stop" scoped="" ref="0x7ebb19c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7eb910a8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7eb910a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7eb91280"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7eb91360"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7eb91440"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7eb91520"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7eb91600"/>
        <function-ref name="setControl" scoped="" ref="0x7eb916e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7eb85078" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7eb85078"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7eb85250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7eb853d8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7eb853d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7eb855b0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7eb85690"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7eb85770"/>
        <function-ref name="countBusy" scoped="" ref="0x7eb85850"/>
        <function-ref name="getAssr" scoped="" ref="0x7eb85930"/>
        <function-ref name="setAssr" scoped="" ref="0x7eb85a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7eb918f8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7eb918f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7eb90cb0"/>
        <function-ref name="fired" scoped="" ref="0x7eb904b0"/>
        <function-ref name="get" scoped="" ref="0x7eb90010"/>
        <function-ref name="reset" scoped="" ref="0x7eb906b0"/>
        <function-ref name="isOn" scoped="" ref="0x7eb90eb0"/>
        <function-ref name="set" scoped="" ref="0x7eb90210"/>
        <function-ref name="start" scoped="" ref="0x7eb908b0"/>
        <function-ref name="stop" scoped="" ref="0x7eb90ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7eb942d0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7eb942d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7eb93a10"/>
        <function-ref name="test" scoped="" ref="0x7eb93610"/>
        <function-ref name="get" scoped="" ref="0x7eb94918"/>
        <function-ref name="setScale" scoped="" ref="0x7eb93c10"/>
        <function-ref name="getScale" scoped="" ref="0x7eb93eb0"/>
        <function-ref name="reset" scoped="" ref="0x7eb93010"/>
        <function-ref name="overflow" scoped="" ref="0x7eb94db8"/>
        <function-ref name="isOn" scoped="" ref="0x7eb93810"/>
        <function-ref name="set" scoped="" ref="0x7eb94b18"/>
        <function-ref name="start" scoped="" ref="0x7eb93210"/>
        <function-ref name="stop" scoped="" ref="0x7eb93410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7efe3e38" loc="46:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe3e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7eff1050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f0108c0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f0108c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f010a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7eff2d38" loc="43:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7eff2f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7eac5bf0" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7eac5bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7eac5dc8"/>
        <function-ref name="runTask" scoped="" ref="0x7eac5ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7ead04c8" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7ead04c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7eac5818"/>
        <function-ref name="fired" scoped="" ref="0x7eac50d8"/>
        <function-ref name="startAt" scoped="" ref="0x7eac54d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7eac52d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7eac5a18"/>
        <function-ref name="start" scoped="" ref="0x7ead0c18"/>
        <function-ref name="stop" scoped="" ref="0x7ead0eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ead2440" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7ead2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ead1dd0"/>
        <function-ref name="fired" scoped="" ref="0x7ead11f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ead1790"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ead15b0"/>
        <function-ref name="getdt" scoped="" ref="0x7ead01f0"/>
        <function-ref name="gett0" scoped="" ref="0x7ead0010"/>
        <function-ref name="isRunning" scoped="" ref="0x7ead13d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ead2a68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ead1ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ead2ce8"/>
        <function-ref name="stop" scoped="" ref="0x7ead1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7ea64240" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7ea64240"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ea64418"/>
        <function-ref name="runTask" scoped="" ref="0x7ea644f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7ea70380" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7ea70380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ea65c98"/>
        <function-ref name="fired" scoped="" ref="0x7ea650b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ea65658"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ea65478"/>
        <function-ref name="getdt" scoped="" ref="0x7ea64068"/>
        <function-ref name="gett0" scoped="" ref="0x7ea65e78"/>
        <function-ref name="isRunning" scoped="" ref="0x7ea65298"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ea709a8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ea65978"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ea70c28"/>
        <function-ref name="stop" scoped="" ref="0x7ea70ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7eac1370" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7eac1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ea71d08"/>
        <function-ref name="fired" scoped="" ref="0x7ea710d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ea716a8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ea714b8"/>
        <function-ref name="getdt" scoped="" ref="0x7ea70108"/>
        <function-ref name="gett0" scoped="" ref="0x7ea71ef8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ea712c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7eac19a8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ea719d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7eac1c38"/>
        <function-ref name="stop" scoped="" ref="0x7eac1ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ea61a88" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7ea61a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ea600f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ea603d0" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7ea603d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ea60b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ea60f20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ea60d20"/>
        <function-ref name="overflow" scoped="" ref="0x7ea51138"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7ea36ca0" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7ea36ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ea36e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ea36930" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ea36930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ea36b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ea23b80" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ea23b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ea23d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ea33988" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ea33988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ea33b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7ea23488" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ea23488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7ea23660"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7ea23740"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7ea23820"/>
        <function-ref name="actualMicro" scoped="" ref="0x7ea23900"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7ea239e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7ea20c40" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7ea20c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ea20e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ea208d0" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ea208d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ea20aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7ea16010" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7ea16010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ea161e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ea11978" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ea11978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ea11b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ea11610" loc="17:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ea11610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ea117e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7e9f5c80" loc="22:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7e9f5c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e9f5e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7e9f52f8" loc="21:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7e9f52f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9f54d0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9f55b0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9f5690"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9f5770"/>
        <function-ref name="get" scoped="" ref="0x7e9f5850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9f5930"/>
        <function-ref name="set" scoped="" ref="0x7e9f5a10"/>
        <function-ref name="clr" scoped="" ref="0x7e9f5af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ea06af0" loc="20:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ea06af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ea06cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7e9b2808" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7e9b2808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9b2be0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9b2cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9b2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9b2e80"/>
        <function-ref name="get" scoped="" ref="0x7e9b1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9b10f0"/>
        <function-ref name="set" scoped="" ref="0x7e9b11d0"/>
        <function-ref name="clr" scoped="" ref="0x7e9b12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7e9d0858" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7e9d0858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9d0a30"/>
        <function-ref name="isInput" scoped="" ref="0x7e9d0b10"/>
        <function-ref name="toggle" scoped="" ref="0x7e9d0bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9d0cd0"/>
        <function-ref name="get" scoped="" ref="0x7e9d0db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9d0e90"/>
        <function-ref name="set" scoped="" ref="0x7e9c7010"/>
        <function-ref name="clr" scoped="" ref="0x7e9c70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7e9c29d8" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7e9c29d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9c2bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9c2c90"/>
        <function-ref name="toggle" scoped="" ref="0x7e9c2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9c2e50"/>
        <function-ref name="get" scoped="" ref="0x7e9c1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9c10f0"/>
        <function-ref name="set" scoped="" ref="0x7e9c11d0"/>
        <function-ref name="clr" scoped="" ref="0x7e9c12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7e9b5808" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7e9b5808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9b59e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9b5ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9b5ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9b5c80"/>
        <function-ref name="get" scoped="" ref="0x7e9b5d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9b5e40"/>
        <function-ref name="set" scoped="" ref="0x7e9b5f20"/>
        <function-ref name="clr" scoped="" ref="0x7e9b4018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7e9e5e78" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7e9e5e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9e4070"/>
        <function-ref name="isInput" scoped="" ref="0x7e9e4150"/>
        <function-ref name="toggle" scoped="" ref="0x7e9e4230"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9e4310"/>
        <function-ref name="get" scoped="" ref="0x7e9e43f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9e44d0"/>
        <function-ref name="set" scoped="" ref="0x7e9e45b0"/>
        <function-ref name="clr" scoped="" ref="0x7e9e4690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7e9b6508" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7e9b6508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9b66e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9b67c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9b68a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9b6980"/>
        <function-ref name="get" scoped="" ref="0x7e9b6a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9b6b40"/>
        <function-ref name="set" scoped="" ref="0x7e9b6c20"/>
        <function-ref name="clr" scoped="" ref="0x7e9b6d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7e9e3190" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7e9e3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9e3368"/>
        <function-ref name="isInput" scoped="" ref="0x7e9e3448"/>
        <function-ref name="toggle" scoped="" ref="0x7e9e3528"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9e3608"/>
        <function-ref name="get" scoped="" ref="0x7e9e36e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9e37c8"/>
        <function-ref name="set" scoped="" ref="0x7e9e38a8"/>
        <function-ref name="clr" scoped="" ref="0x7e9e3988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7e9d5348" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7e9d5348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9d5520"/>
        <function-ref name="isInput" scoped="" ref="0x7e9d5600"/>
        <function-ref name="toggle" scoped="" ref="0x7e9d56e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9d57c0"/>
        <function-ref name="get" scoped="" ref="0x7e9d58a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9d5980"/>
        <function-ref name="set" scoped="" ref="0x7e9d5a60"/>
        <function-ref name="clr" scoped="" ref="0x7e9d5b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7e9c65e8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7e9c65e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9c67c0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9c68a0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9c6980"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9c6a60"/>
        <function-ref name="get" scoped="" ref="0x7e9c6b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9c6c20"/>
        <function-ref name="set" scoped="" ref="0x7e9c6d00"/>
        <function-ref name="clr" scoped="" ref="0x7e9c6de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7e9c07a8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7e9c07a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9c0980"/>
        <function-ref name="isInput" scoped="" ref="0x7e9c0a60"/>
        <function-ref name="toggle" scoped="" ref="0x7e9c0b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9c0c20"/>
        <function-ref name="get" scoped="" ref="0x7e9c0d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9c0de0"/>
        <function-ref name="set" scoped="" ref="0x7e9c0ec0"/>
        <function-ref name="clr" scoped="" ref="0x7e9b7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7e9f1e18" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7e9f1e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9f0010"/>
        <function-ref name="isInput" scoped="" ref="0x7e9f00f0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9f01d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9f02b0"/>
        <function-ref name="get" scoped="" ref="0x7e9f0390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9f0470"/>
        <function-ref name="set" scoped="" ref="0x7e9f0550"/>
        <function-ref name="clr" scoped="" ref="0x7e9f0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7e9e2e78" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7e9e2e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9e1070"/>
        <function-ref name="isInput" scoped="" ref="0x7e9e1150"/>
        <function-ref name="toggle" scoped="" ref="0x7e9e1230"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9e1310"/>
        <function-ref name="get" scoped="" ref="0x7e9e13f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9e14d0"/>
        <function-ref name="set" scoped="" ref="0x7e9e15b0"/>
        <function-ref name="clr" scoped="" ref="0x7e9e1690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7e9d2068" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7e9d2068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9d2240"/>
        <function-ref name="isInput" scoped="" ref="0x7e9d2320"/>
        <function-ref name="toggle" scoped="" ref="0x7e9d2400"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9d24e0"/>
        <function-ref name="get" scoped="" ref="0x7e9d25c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9d26a0"/>
        <function-ref name="set" scoped="" ref="0x7e9d2780"/>
        <function-ref name="clr" scoped="" ref="0x7e9d2860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7e9c4348" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7e9c4348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9c4520"/>
        <function-ref name="isInput" scoped="" ref="0x7e9c4600"/>
        <function-ref name="toggle" scoped="" ref="0x7e9c46e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9c47c0"/>
        <function-ref name="get" scoped="" ref="0x7e9c48a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9c4980"/>
        <function-ref name="set" scoped="" ref="0x7e9c4a60"/>
        <function-ref name="clr" scoped="" ref="0x7e9c4b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7e9b3508" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7e9b3508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9b36e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9b37c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9b38a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9b3980"/>
        <function-ref name="get" scoped="" ref="0x7e9b3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9b3b40"/>
        <function-ref name="set" scoped="" ref="0x7e9b3c20"/>
        <function-ref name="clr" scoped="" ref="0x7e9b3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7e9b07a8" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7e9b07a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9b0980"/>
        <function-ref name="isInput" scoped="" ref="0x7e9b0a60"/>
        <function-ref name="toggle" scoped="" ref="0x7e9b0b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9b0c20"/>
        <function-ref name="get" scoped="" ref="0x7e9b0d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9b0de0"/>
        <function-ref name="set" scoped="" ref="0x7e9b0ec0"/>
        <function-ref name="clr" scoped="" ref="0x7e9a7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7e9c36c8" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7e9c36c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9c38a0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9c3980"/>
        <function-ref name="toggle" scoped="" ref="0x7e9c3a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9c3b40"/>
        <function-ref name="get" scoped="" ref="0x7e9c3c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9c3d00"/>
        <function-ref name="set" scoped="" ref="0x7e9c3de0"/>
        <function-ref name="clr" scoped="" ref="0x7e9c3ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7e9e6af8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7e9e6af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9e6cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9e6db0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9e6e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9e5010"/>
        <function-ref name="get" scoped="" ref="0x7e9e50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9e51d0"/>
        <function-ref name="set" scoped="" ref="0x7e9e52b0"/>
        <function-ref name="clr" scoped="" ref="0x7e9e5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7e9e0bd8" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7e9e0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9e0db0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9e0e90"/>
        <function-ref name="toggle" scoped="" ref="0x7e9d7010"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9d70f0"/>
        <function-ref name="get" scoped="" ref="0x7e9d71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9d72b0"/>
        <function-ref name="set" scoped="" ref="0x7e9d7390"/>
        <function-ref name="clr" scoped="" ref="0x7e9d7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7e9b1428" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7e9b1428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9b1600"/>
        <function-ref name="isInput" scoped="" ref="0x7e9b16e0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9b17c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9b18a0"/>
        <function-ref name="get" scoped="" ref="0x7e9b1980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9b1a60"/>
        <function-ref name="set" scoped="" ref="0x7e9b1b40"/>
        <function-ref name="clr" scoped="" ref="0x7e9b1c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7e9d6010" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7e9d6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9d61e8"/>
        <function-ref name="isInput" scoped="" ref="0x7e9d62c8"/>
        <function-ref name="toggle" scoped="" ref="0x7e9d63a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9d6488"/>
        <function-ref name="get" scoped="" ref="0x7e9d6568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9d6648"/>
        <function-ref name="set" scoped="" ref="0x7e9d6728"/>
        <function-ref name="clr" scoped="" ref="0x7e9d6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7e9c7268" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7e9c7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9c7440"/>
        <function-ref name="isInput" scoped="" ref="0x7e9c7520"/>
        <function-ref name="toggle" scoped="" ref="0x7e9c7600"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9c76e0"/>
        <function-ref name="get" scoped="" ref="0x7e9c77c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9c78a0"/>
        <function-ref name="set" scoped="" ref="0x7e9c7980"/>
        <function-ref name="clr" scoped="" ref="0x7e9c7a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7e9c1428" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7e9c1428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9c1600"/>
        <function-ref name="isInput" scoped="" ref="0x7e9c16e0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9c17c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9c18a0"/>
        <function-ref name="get" scoped="" ref="0x7e9c1980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9c1a60"/>
        <function-ref name="set" scoped="" ref="0x7e9c1b40"/>
        <function-ref name="clr" scoped="" ref="0x7e9c1c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7e9b4190" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7e9b4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9b4368"/>
        <function-ref name="isInput" scoped="" ref="0x7e9b4448"/>
        <function-ref name="toggle" scoped="" ref="0x7e9b4528"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9b4608"/>
        <function-ref name="get" scoped="" ref="0x7e9b46e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9b47c8"/>
        <function-ref name="set" scoped="" ref="0x7e9b48a8"/>
        <function-ref name="clr" scoped="" ref="0x7e9b4988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7e9e4808" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7e9e4808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9e49e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9e4ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9e4ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9e4c80"/>
        <function-ref name="get" scoped="" ref="0x7e9e4d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9e4e40"/>
        <function-ref name="set" scoped="" ref="0x7e9e4f20"/>
        <function-ref name="clr" scoped="" ref="0x7e9e3018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7e9e3b00" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7e9e3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9e3cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7e9e3db8"/>
        <function-ref name="toggle" scoped="" ref="0x7e9e3e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9e2010"/>
        <function-ref name="get" scoped="" ref="0x7e9e20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9e21d0"/>
        <function-ref name="set" scoped="" ref="0x7e9e22b0"/>
        <function-ref name="clr" scoped="" ref="0x7e9e2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7e9d5cb8" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7e9d5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9d5e90"/>
        <function-ref name="isInput" scoped="" ref="0x7e9d3010"/>
        <function-ref name="toggle" scoped="" ref="0x7e9d30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9d31d0"/>
        <function-ref name="get" scoped="" ref="0x7e9d32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9d3390"/>
        <function-ref name="set" scoped="" ref="0x7e9d3470"/>
        <function-ref name="clr" scoped="" ref="0x7e9d3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7e9c5010" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7e9c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9c51e8"/>
        <function-ref name="isInput" scoped="" ref="0x7e9c52c8"/>
        <function-ref name="toggle" scoped="" ref="0x7e9c53a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9c5488"/>
        <function-ref name="get" scoped="" ref="0x7e9c5568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9c5648"/>
        <function-ref name="set" scoped="" ref="0x7e9c5728"/>
        <function-ref name="clr" scoped="" ref="0x7e9c5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7e9b7188" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7e9b7188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9b7360"/>
        <function-ref name="isInput" scoped="" ref="0x7e9b7440"/>
        <function-ref name="toggle" scoped="" ref="0x7e9b7520"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9b7600"/>
        <function-ref name="get" scoped="" ref="0x7e9b76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9b77c0"/>
        <function-ref name="set" scoped="" ref="0x7e9b78a0"/>
        <function-ref name="clr" scoped="" ref="0x7e9b7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7e9f07a8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7e9f07a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9f0980"/>
        <function-ref name="isInput" scoped="" ref="0x7e9f0a60"/>
        <function-ref name="toggle" scoped="" ref="0x7e9f0b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9f0c20"/>
        <function-ref name="get" scoped="" ref="0x7e9f0d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9f0de0"/>
        <function-ref name="set" scoped="" ref="0x7e9f0ec0"/>
        <function-ref name="clr" scoped="" ref="0x7e9e6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7e9e1808" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7e9e1808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9e1a60"/>
        <function-ref name="isInput" scoped="" ref="0x7e9e1b40"/>
        <function-ref name="toggle" scoped="" ref="0x7e9e1c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9e1d00"/>
        <function-ref name="get" scoped="" ref="0x7e9e1de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9e1ec0"/>
        <function-ref name="set" scoped="" ref="0x7e9e0010"/>
        <function-ref name="clr" scoped="" ref="0x7e9e00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7e9d29d8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7e9d29d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9d2bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9d2c90"/>
        <function-ref name="toggle" scoped="" ref="0x7e9d2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9d2e50"/>
        <function-ref name="get" scoped="" ref="0x7e9d1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9d10f0"/>
        <function-ref name="set" scoped="" ref="0x7e9d11d0"/>
        <function-ref name="clr" scoped="" ref="0x7e9d12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7e9b3e78" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7e9b3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9b2070"/>
        <function-ref name="isInput" scoped="" ref="0x7e9b2150"/>
        <function-ref name="toggle" scoped="" ref="0x7e9b2230"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9b2310"/>
        <function-ref name="get" scoped="" ref="0x7e9b23f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9b24d0"/>
        <function-ref name="set" scoped="" ref="0x7e9b25b0"/>
        <function-ref name="clr" scoped="" ref="0x7e9b2690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7e9d1d98" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7e9d1d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9d00c0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9d01a0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9d0280"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9d0360"/>
        <function-ref name="get" scoped="" ref="0x7e9d0440"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9d0520"/>
        <function-ref name="set" scoped="" ref="0x7e9d0600"/>
        <function-ref name="clr" scoped="" ref="0x7e9d06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7e9c2068" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7e9c2068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9c2240"/>
        <function-ref name="isInput" scoped="" ref="0x7e9c2320"/>
        <function-ref name="toggle" scoped="" ref="0x7e9c2400"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9c24e0"/>
        <function-ref name="get" scoped="" ref="0x7e9c25c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9c26a0"/>
        <function-ref name="set" scoped="" ref="0x7e9c2780"/>
        <function-ref name="clr" scoped="" ref="0x7e9c2860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7e9b6e78" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7e9b6e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9b5070"/>
        <function-ref name="isInput" scoped="" ref="0x7e9b5150"/>
        <function-ref name="toggle" scoped="" ref="0x7e9b5230"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9b5310"/>
        <function-ref name="get" scoped="" ref="0x7e9b53f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9b54d0"/>
        <function-ref name="set" scoped="" ref="0x7e9b55b0"/>
        <function-ref name="clr" scoped="" ref="0x7e9b5690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7e9a7188" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7e9a7188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9a7360"/>
        <function-ref name="isInput" scoped="" ref="0x7e9a7440"/>
        <function-ref name="toggle" scoped="" ref="0x7e9a7520"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9a7600"/>
        <function-ref name="get" scoped="" ref="0x7e9a76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9a77c0"/>
        <function-ref name="set" scoped="" ref="0x7e9a78a0"/>
        <function-ref name="clr" scoped="" ref="0x7e9a7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7e9e5508" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7e9e5508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9e56e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9e57c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9e58a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9e5980"/>
        <function-ref name="get" scoped="" ref="0x7e9e5a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9e5b40"/>
        <function-ref name="set" scoped="" ref="0x7e9e5c20"/>
        <function-ref name="clr" scoped="" ref="0x7e9e5d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7e9d75e8" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7e9d75e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9d77c0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9d78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9d7980"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9d7a60"/>
        <function-ref name="get" scoped="" ref="0x7e9d7b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9d7c20"/>
        <function-ref name="set" scoped="" ref="0x7e9d7d00"/>
        <function-ref name="clr" scoped="" ref="0x7e9d7de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7e9b7af8" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7e9b7af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9b7cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9b7db0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9b7e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9b6010"/>
        <function-ref name="get" scoped="" ref="0x7e9b60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9b61d0"/>
        <function-ref name="set" scoped="" ref="0x7e9b62b0"/>
        <function-ref name="clr" scoped="" ref="0x7e9b6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7e9d6980" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7e9d6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9d6b58"/>
        <function-ref name="isInput" scoped="" ref="0x7e9d6c38"/>
        <function-ref name="toggle" scoped="" ref="0x7e9d6d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9d6df8"/>
        <function-ref name="get" scoped="" ref="0x7e9d6ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9d5010"/>
        <function-ref name="set" scoped="" ref="0x7e9d50f0"/>
        <function-ref name="clr" scoped="" ref="0x7e9d51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7e9c7bd8" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7e9c7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9c7db0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9c7e90"/>
        <function-ref name="toggle" scoped="" ref="0x7e9c6010"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9c60f0"/>
        <function-ref name="get" scoped="" ref="0x7e9c61d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9c62b0"/>
        <function-ref name="set" scoped="" ref="0x7e9c6390"/>
        <function-ref name="clr" scoped="" ref="0x7e9c6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7e9c1d98" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7e9c1d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9c0010"/>
        <function-ref name="isInput" scoped="" ref="0x7e9c00f0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9c01d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9c02b0"/>
        <function-ref name="get" scoped="" ref="0x7e9c0390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9c0470"/>
        <function-ref name="set" scoped="" ref="0x7e9c0550"/>
        <function-ref name="clr" scoped="" ref="0x7e9c0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7e9b4b00" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7e9b4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9b4cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7e9b4db8"/>
        <function-ref name="toggle" scoped="" ref="0x7e9b4e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9b3010"/>
        <function-ref name="get" scoped="" ref="0x7e9b30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9b31d0"/>
        <function-ref name="set" scoped="" ref="0x7e9b32b0"/>
        <function-ref name="clr" scoped="" ref="0x7e9b3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7e9f14a8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7e9f14a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9f1680"/>
        <function-ref name="isInput" scoped="" ref="0x7e9f1760"/>
        <function-ref name="toggle" scoped="" ref="0x7e9f1840"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9f1920"/>
        <function-ref name="get" scoped="" ref="0x7e9f1a00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9f1ae0"/>
        <function-ref name="set" scoped="" ref="0x7e9f1bc0"/>
        <function-ref name="clr" scoped="" ref="0x7e9f1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7e9e2508" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7e9e2508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9e26e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9e27c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9e28a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9e2980"/>
        <function-ref name="get" scoped="" ref="0x7e9e2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9e2b40"/>
        <function-ref name="set" scoped="" ref="0x7e9e2c20"/>
        <function-ref name="clr" scoped="" ref="0x7e9e2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7e9d36c8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7e9d36c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9d38a0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9d3980"/>
        <function-ref name="toggle" scoped="" ref="0x7e9d3a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9d3b40"/>
        <function-ref name="get" scoped="" ref="0x7e9d3c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9d3d00"/>
        <function-ref name="set" scoped="" ref="0x7e9d3de0"/>
        <function-ref name="clr" scoped="" ref="0x7e9d3ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7e9c5980" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7e9c5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9c5b58"/>
        <function-ref name="isInput" scoped="" ref="0x7e9c5c38"/>
        <function-ref name="toggle" scoped="" ref="0x7e9c5d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9c5df8"/>
        <function-ref name="get" scoped="" ref="0x7e9c5ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9c4010"/>
        <function-ref name="set" scoped="" ref="0x7e9c40f0"/>
        <function-ref name="clr" scoped="" ref="0x7e9c41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7e9b1d98" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7e9b1d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9b0010"/>
        <function-ref name="isInput" scoped="" ref="0x7e9b00f0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9b01d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9b02b0"/>
        <function-ref name="get" scoped="" ref="0x7e9b0390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9b0470"/>
        <function-ref name="set" scoped="" ref="0x7e9b0550"/>
        <function-ref name="clr" scoped="" ref="0x7e9b0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7e9c4cb8" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7e9c4cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9c4e90"/>
        <function-ref name="isInput" scoped="" ref="0x7e9c3010"/>
        <function-ref name="toggle" scoped="" ref="0x7e9c30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9c31d0"/>
        <function-ref name="get" scoped="" ref="0x7e9c32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9c3390"/>
        <function-ref name="set" scoped="" ref="0x7e9c3470"/>
        <function-ref name="clr" scoped="" ref="0x7e9c3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7e9d1428" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7e9d1428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9d1600"/>
        <function-ref name="isInput" scoped="" ref="0x7e9d16e0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9d17c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9d18a0"/>
        <function-ref name="get" scoped="" ref="0x7e9d1980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9d1a60"/>
        <function-ref name="set" scoped="" ref="0x7e9d1b40"/>
        <function-ref name="clr" scoped="" ref="0x7e9d1c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7e9e6188" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7e9e6188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9e6360"/>
        <function-ref name="isInput" scoped="" ref="0x7e9e6440"/>
        <function-ref name="toggle" scoped="" ref="0x7e9e6520"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9e6600"/>
        <function-ref name="get" scoped="" ref="0x7e9e66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9e67c0"/>
        <function-ref name="set" scoped="" ref="0x7e9e68a0"/>
        <function-ref name="clr" scoped="" ref="0x7e9e6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7e9e0268" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7e9e0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9e0440"/>
        <function-ref name="isInput" scoped="" ref="0x7e9e0520"/>
        <function-ref name="toggle" scoped="" ref="0x7e9e0600"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9e06e0"/>
        <function-ref name="get" scoped="" ref="0x7e9e07c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9e08a0"/>
        <function-ref name="set" scoped="" ref="0x7e9e0980"/>
        <function-ref name="clr" scoped="" ref="0x7e9e0a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7e956030" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7e956030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e956208"/>
        <function-ref name="isInput" scoped="" ref="0x7e9562e8"/>
        <function-ref name="toggle" scoped="" ref="0x7e9563c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9564a8"/>
        <function-ref name="get" scoped="" ref="0x7e956588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e956668"/>
        <function-ref name="set" scoped="" ref="0x7e956748"/>
        <function-ref name="clr" scoped="" ref="0x7e956828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7e954c88" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7e954c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e954e60"/>
        <function-ref name="isInput" scoped="" ref="0x7e953010"/>
        <function-ref name="toggle" scoped="" ref="0x7e9530f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9531d0"/>
        <function-ref name="get" scoped="" ref="0x7e9532b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e953390"/>
        <function-ref name="set" scoped="" ref="0x7e953470"/>
        <function-ref name="clr" scoped="" ref="0x7e953550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7e960d18" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7e960d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e960ef0"/>
        <function-ref name="isInput" scoped="" ref="0x7e957010"/>
        <function-ref name="toggle" scoped="" ref="0x7e9570f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9571d0"/>
        <function-ref name="get" scoped="" ref="0x7e9572b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e957390"/>
        <function-ref name="set" scoped="" ref="0x7e957470"/>
        <function-ref name="clr" scoped="" ref="0x7e957550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7e956988" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7e956988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e956b60"/>
        <function-ref name="isInput" scoped="" ref="0x7e956c40"/>
        <function-ref name="toggle" scoped="" ref="0x7e956d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7e956e00"/>
        <function-ref name="get" scoped="" ref="0x7e956ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e954010"/>
        <function-ref name="set" scoped="" ref="0x7e9540f0"/>
        <function-ref name="clr" scoped="" ref="0x7e9541d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7e9536b0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7e9536b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e953888"/>
        <function-ref name="isInput" scoped="" ref="0x7e953968"/>
        <function-ref name="toggle" scoped="" ref="0x7e953a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7e953b28"/>
        <function-ref name="get" scoped="" ref="0x7e953c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e953ce8"/>
        <function-ref name="set" scoped="" ref="0x7e953dc8"/>
        <function-ref name="clr" scoped="" ref="0x7e953ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7e9576b0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7e9576b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e957888"/>
        <function-ref name="isInput" scoped="" ref="0x7e957968"/>
        <function-ref name="toggle" scoped="" ref="0x7e957a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7e957b28"/>
        <function-ref name="get" scoped="" ref="0x7e957c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e957ce8"/>
        <function-ref name="set" scoped="" ref="0x7e957dc8"/>
        <function-ref name="clr" scoped="" ref="0x7e957ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7e954330" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7e954330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e954508"/>
        <function-ref name="isInput" scoped="" ref="0x7e9545e8"/>
        <function-ref name="toggle" scoped="" ref="0x7e9546c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9547a8"/>
        <function-ref name="get" scoped="" ref="0x7e954888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e954968"/>
        <function-ref name="set" scoped="" ref="0x7e954a48"/>
        <function-ref name="clr" scoped="" ref="0x7e954b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7e952030" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7e952030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e952208"/>
        <function-ref name="isInput" scoped="" ref="0x7e9522e8"/>
        <function-ref name="toggle" scoped="" ref="0x7e9523c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9524a8"/>
        <function-ref name="get" scoped="" ref="0x7e952588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e952668"/>
        <function-ref name="set" scoped="" ref="0x7e952748"/>
        <function-ref name="clr" scoped="" ref="0x7e952828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d86c050" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d86c050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d86c228"/>
        <function-ref name="isInput" scoped="" ref="0x7d86c308"/>
        <function-ref name="toggle" scoped="" ref="0x7d86c3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d86c4c8"/>
        <function-ref name="get" scoped="" ref="0x7d86c5a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d86c688"/>
        <function-ref name="set" scoped="" ref="0x7d86c768"/>
        <function-ref name="clr" scoped="" ref="0x7d86c848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d86ba08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d86ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d86bbe0"/>
        <function-ref name="isInput" scoped="" ref="0x7d86bcc0"/>
        <function-ref name="toggle" scoped="" ref="0x7d86bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d86be80"/>
        <function-ref name="get" scoped="" ref="0x7d86a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d86a0f0"/>
        <function-ref name="set" scoped="" ref="0x7d86a1d0"/>
        <function-ref name="clr" scoped="" ref="0x7d86a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d869538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d869538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d869710"/>
        <function-ref name="isInput" scoped="" ref="0x7d8697f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8698d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8699b0"/>
        <function-ref name="get" scoped="" ref="0x7d869a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d869b70"/>
        <function-ref name="set" scoped="" ref="0x7d869c50"/>
        <function-ref name="clr" scoped="" ref="0x7d869d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d867010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d867010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8671e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d8672c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d8673a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d867488"/>
        <function-ref name="get" scoped="" ref="0x7d867568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d867648"/>
        <function-ref name="set" scoped="" ref="0x7d867728"/>
        <function-ref name="clr" scoped="" ref="0x7d867808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8669e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8669e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d866bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d866ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d866d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d866e60"/>
        <function-ref name="get" scoped="" ref="0x7d865010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8650f0"/>
        <function-ref name="set" scoped="" ref="0x7d8651d0"/>
        <function-ref name="clr" scoped="" ref="0x7d8652b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d864538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d864538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d864710"/>
        <function-ref name="isInput" scoped="" ref="0x7d8647f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8648d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8649b0"/>
        <function-ref name="get" scoped="" ref="0x7d864a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d864b70"/>
        <function-ref name="set" scoped="" ref="0x7d864c50"/>
        <function-ref name="clr" scoped="" ref="0x7d864d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d862010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d862010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8621e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d8622c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d8623a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d862488"/>
        <function-ref name="get" scoped="" ref="0x7d862568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d862648"/>
        <function-ref name="set" scoped="" ref="0x7d862728"/>
        <function-ref name="clr" scoped="" ref="0x7d862808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8619e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8619e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d861bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d861ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d861d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d861e60"/>
        <function-ref name="get" scoped="" ref="0x7d860010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8600f0"/>
        <function-ref name="set" scoped="" ref="0x7d8601d0"/>
        <function-ref name="clr" scoped="" ref="0x7d8602b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7e9466b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7e9466b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e946888"/>
        <function-ref name="isInput" scoped="" ref="0x7e946968"/>
        <function-ref name="toggle" scoped="" ref="0x7e946a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7e946b28"/>
        <function-ref name="get" scoped="" ref="0x7e946c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e946ce8"/>
        <function-ref name="set" scoped="" ref="0x7e946dc8"/>
        <function-ref name="clr" scoped="" ref="0x7e946ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7e944330" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7e944330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e944508"/>
        <function-ref name="isInput" scoped="" ref="0x7e9445e8"/>
        <function-ref name="toggle" scoped="" ref="0x7e9446c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9447a8"/>
        <function-ref name="get" scoped="" ref="0x7e944888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e944968"/>
        <function-ref name="set" scoped="" ref="0x7e944a48"/>
        <function-ref name="clr" scoped="" ref="0x7e944b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7e9473a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7e9473a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e947578"/>
        <function-ref name="isInput" scoped="" ref="0x7e947658"/>
        <function-ref name="toggle" scoped="" ref="0x7e947738"/>
        <function-ref name="isOutput" scoped="" ref="0x7e947818"/>
        <function-ref name="get" scoped="" ref="0x7e9478f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9479d8"/>
        <function-ref name="set" scoped="" ref="0x7e947ab8"/>
        <function-ref name="clr" scoped="" ref="0x7e947b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7e945030" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7e945030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e945208"/>
        <function-ref name="isInput" scoped="" ref="0x7e9452e8"/>
        <function-ref name="toggle" scoped="" ref="0x7e9453c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9454a8"/>
        <function-ref name="get" scoped="" ref="0x7e945588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e945668"/>
        <function-ref name="set" scoped="" ref="0x7e945748"/>
        <function-ref name="clr" scoped="" ref="0x7e945828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7e944c88" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7e944c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e944e60"/>
        <function-ref name="isInput" scoped="" ref="0x7e943010"/>
        <function-ref name="toggle" scoped="" ref="0x7e9430f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9431d0"/>
        <function-ref name="get" scoped="" ref="0x7e9432b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e943390"/>
        <function-ref name="set" scoped="" ref="0x7e943470"/>
        <function-ref name="clr" scoped="" ref="0x7e943550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7e947cf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7e947cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e947ed0"/>
        <function-ref name="isInput" scoped="" ref="0x7e946010"/>
        <function-ref name="toggle" scoped="" ref="0x7e9460f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9461d0"/>
        <function-ref name="get" scoped="" ref="0x7e9462b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e946390"/>
        <function-ref name="set" scoped="" ref="0x7e946470"/>
        <function-ref name="clr" scoped="" ref="0x7e946550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7e945988" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7e945988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e945b60"/>
        <function-ref name="isInput" scoped="" ref="0x7e945c40"/>
        <function-ref name="toggle" scoped="" ref="0x7e945d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7e945e00"/>
        <function-ref name="get" scoped="" ref="0x7e945ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e944010"/>
        <function-ref name="set" scoped="" ref="0x7e9440f0"/>
        <function-ref name="clr" scoped="" ref="0x7e9441d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7e9436b0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7e9436b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e943888"/>
        <function-ref name="isInput" scoped="" ref="0x7e943968"/>
        <function-ref name="toggle" scoped="" ref="0x7e943a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7e943b28"/>
        <function-ref name="get" scoped="" ref="0x7e943c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e943ce8"/>
        <function-ref name="set" scoped="" ref="0x7e943dc8"/>
        <function-ref name="clr" scoped="" ref="0x7e943ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8387f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8387f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8389d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d838ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7d838b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7d838c70"/>
        <function-ref name="get" scoped="" ref="0x7d838d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d838e30"/>
        <function-ref name="set" scoped="" ref="0x7d838f10"/>
        <function-ref name="clr" scoped="" ref="0x7d837010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d836228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d836228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d836400"/>
        <function-ref name="isInput" scoped="" ref="0x7d8364e0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8365c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8366a0"/>
        <function-ref name="get" scoped="" ref="0x7d836780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d836860"/>
        <function-ref name="set" scoped="" ref="0x7d836940"/>
        <function-ref name="clr" scoped="" ref="0x7d836a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d835c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d835c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d835de0"/>
        <function-ref name="isInput" scoped="" ref="0x7d835ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7d834010"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8340f0"/>
        <function-ref name="get" scoped="" ref="0x7d8341d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8342b0"/>
        <function-ref name="set" scoped="" ref="0x7d834390"/>
        <function-ref name="clr" scoped="" ref="0x7d834470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8336c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8336c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d833898"/>
        <function-ref name="isInput" scoped="" ref="0x7d833978"/>
        <function-ref name="toggle" scoped="" ref="0x7d833a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7d833b38"/>
        <function-ref name="get" scoped="" ref="0x7d833c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d833cf8"/>
        <function-ref name="set" scoped="" ref="0x7d833dd8"/>
        <function-ref name="clr" scoped="" ref="0x7d833eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8310b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8310b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d831288"/>
        <function-ref name="isInput" scoped="" ref="0x7d831368"/>
        <function-ref name="toggle" scoped="" ref="0x7d831448"/>
        <function-ref name="isOutput" scoped="" ref="0x7d831528"/>
        <function-ref name="get" scoped="" ref="0x7d831608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8316e8"/>
        <function-ref name="set" scoped="" ref="0x7d8317c8"/>
        <function-ref name="clr" scoped="" ref="0x7d8318a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d830a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d830a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d830c60"/>
        <function-ref name="isInput" scoped="" ref="0x7d830d40"/>
        <function-ref name="toggle" scoped="" ref="0x7d830e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7d830f00"/>
        <function-ref name="get" scoped="" ref="0x7d82f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d82f0f0"/>
        <function-ref name="set" scoped="" ref="0x7d82f1d0"/>
        <function-ref name="clr" scoped="" ref="0x7d82f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d82e538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d82e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d82e710"/>
        <function-ref name="isInput" scoped="" ref="0x7d82e7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d82e8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d82e9b0"/>
        <function-ref name="get" scoped="" ref="0x7d82ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d82eb70"/>
        <function-ref name="set" scoped="" ref="0x7d82ec50"/>
        <function-ref name="clr" scoped="" ref="0x7d82ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d82c010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d82c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d82c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d82c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d82c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d82c488"/>
        <function-ref name="get" scoped="" ref="0x7d82c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d82c648"/>
        <function-ref name="set" scoped="" ref="0x7d82c728"/>
        <function-ref name="clr" scoped="" ref="0x7d82c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7e936f28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7e936f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e935110"/>
        <function-ref name="isInput" scoped="" ref="0x7e9351f0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9352d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9353b0"/>
        <function-ref name="get" scoped="" ref="0x7e935490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e935570"/>
        <function-ref name="set" scoped="" ref="0x7e935650"/>
        <function-ref name="clr" scoped="" ref="0x7e935730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7e934ba8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7e934ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e934d80"/>
        <function-ref name="isInput" scoped="" ref="0x7e934e60"/>
        <function-ref name="toggle" scoped="" ref="0x7e933010"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9330f0"/>
        <function-ref name="get" scoped="" ref="0x7e9331d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9332b0"/>
        <function-ref name="set" scoped="" ref="0x7e933390"/>
        <function-ref name="clr" scoped="" ref="0x7e933470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7e937bc0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7e937bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e937d98"/>
        <function-ref name="isInput" scoped="" ref="0x7e937e78"/>
        <function-ref name="toggle" scoped="" ref="0x7e936010"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9360f0"/>
        <function-ref name="get" scoped="" ref="0x7e9361d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9362b0"/>
        <function-ref name="set" scoped="" ref="0x7e936390"/>
        <function-ref name="clr" scoped="" ref="0x7e936470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7e935890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7e935890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e935a68"/>
        <function-ref name="isInput" scoped="" ref="0x7e935b48"/>
        <function-ref name="toggle" scoped="" ref="0x7e935c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7e935d08"/>
        <function-ref name="get" scoped="" ref="0x7e935de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e935ec8"/>
        <function-ref name="set" scoped="" ref="0x7e934010"/>
        <function-ref name="clr" scoped="" ref="0x7e9340f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7e9335d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7e9335d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9337a8"/>
        <function-ref name="isInput" scoped="" ref="0x7e933888"/>
        <function-ref name="toggle" scoped="" ref="0x7e933968"/>
        <function-ref name="isOutput" scoped="" ref="0x7e933a48"/>
        <function-ref name="get" scoped="" ref="0x7e933b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e933c08"/>
        <function-ref name="set" scoped="" ref="0x7e933ce8"/>
        <function-ref name="clr" scoped="" ref="0x7e933dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7e9365d0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7e9365d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9367a8"/>
        <function-ref name="isInput" scoped="" ref="0x7e936888"/>
        <function-ref name="toggle" scoped="" ref="0x7e936968"/>
        <function-ref name="isOutput" scoped="" ref="0x7e936a48"/>
        <function-ref name="get" scoped="" ref="0x7e936b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e936c08"/>
        <function-ref name="set" scoped="" ref="0x7e936ce8"/>
        <function-ref name="clr" scoped="" ref="0x7e936dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7e934250" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7e934250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e934428"/>
        <function-ref name="isInput" scoped="" ref="0x7e934508"/>
        <function-ref name="toggle" scoped="" ref="0x7e9345e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9346c8"/>
        <function-ref name="get" scoped="" ref="0x7e9347a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e934888"/>
        <function-ref name="set" scoped="" ref="0x7e934968"/>
        <function-ref name="clr" scoped="" ref="0x7e934a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7e933f28" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7e933f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e932110"/>
        <function-ref name="isInput" scoped="" ref="0x7e9321f0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9322d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9323b0"/>
        <function-ref name="get" scoped="" ref="0x7e932490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e932570"/>
        <function-ref name="set" scoped="" ref="0x7e932650"/>
        <function-ref name="clr" scoped="" ref="0x7e932730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8045e0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8045e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8047b8"/>
        <function-ref name="isInput" scoped="" ref="0x7d804898"/>
        <function-ref name="toggle" scoped="" ref="0x7d804978"/>
        <function-ref name="isOutput" scoped="" ref="0x7d804a58"/>
        <function-ref name="get" scoped="" ref="0x7d804b38"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d804c18"/>
        <function-ref name="set" scoped="" ref="0x7d804cf8"/>
        <function-ref name="clr" scoped="" ref="0x7d804dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8020b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8020b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d802288"/>
        <function-ref name="isInput" scoped="" ref="0x7d802368"/>
        <function-ref name="toggle" scoped="" ref="0x7d802448"/>
        <function-ref name="isOutput" scoped="" ref="0x7d802528"/>
        <function-ref name="get" scoped="" ref="0x7d802608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8026e8"/>
        <function-ref name="set" scoped="" ref="0x7d8027c8"/>
        <function-ref name="clr" scoped="" ref="0x7d8028a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d801a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d801a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d801c60"/>
        <function-ref name="isInput" scoped="" ref="0x7d801d40"/>
        <function-ref name="toggle" scoped="" ref="0x7d801e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7d801f00"/>
        <function-ref name="get" scoped="" ref="0x7d800010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8000f0"/>
        <function-ref name="set" scoped="" ref="0x7d8001d0"/>
        <function-ref name="clr" scoped="" ref="0x7d8002b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7ff538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7ff538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7ff710"/>
        <function-ref name="isInput" scoped="" ref="0x7d7ff7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d7ff8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7ff9b0"/>
        <function-ref name="get" scoped="" ref="0x7d7ffa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7ffb70"/>
        <function-ref name="set" scoped="" ref="0x7d7ffc50"/>
        <function-ref name="clr" scoped="" ref="0x7d7ffd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7fd010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7fd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7fd1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d7fd2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d7fd3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7fd488"/>
        <function-ref name="get" scoped="" ref="0x7d7fd568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7fd648"/>
        <function-ref name="set" scoped="" ref="0x7d7fd728"/>
        <function-ref name="clr" scoped="" ref="0x7d7fd808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7fc9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7fc9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7fcbc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d7fcca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d7fcd80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7fce60"/>
        <function-ref name="get" scoped="" ref="0x7d7fa010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7fa0f0"/>
        <function-ref name="set" scoped="" ref="0x7d7fa1d0"/>
        <function-ref name="clr" scoped="" ref="0x7d7fa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7f9538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7f9538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7f9710"/>
        <function-ref name="isInput" scoped="" ref="0x7d7f97f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d7f98d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7f99b0"/>
        <function-ref name="get" scoped="" ref="0x7d7f9a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7f9b70"/>
        <function-ref name="set" scoped="" ref="0x7d7f9c50"/>
        <function-ref name="clr" scoped="" ref="0x7d7f9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7f7010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7f71e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d7f72c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d7f73a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7f7488"/>
        <function-ref name="get" scoped="" ref="0x7d7f7568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7f7648"/>
        <function-ref name="set" scoped="" ref="0x7d7f7728"/>
        <function-ref name="clr" scoped="" ref="0x7d7f7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7e9255d0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7e9255d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9257a8"/>
        <function-ref name="isInput" scoped="" ref="0x7e925888"/>
        <function-ref name="toggle" scoped="" ref="0x7e925968"/>
        <function-ref name="isOutput" scoped="" ref="0x7e925a48"/>
        <function-ref name="get" scoped="" ref="0x7e925b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e925c08"/>
        <function-ref name="set" scoped="" ref="0x7e925ce8"/>
        <function-ref name="clr" scoped="" ref="0x7e925dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7e923250" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7e923250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e923428"/>
        <function-ref name="isInput" scoped="" ref="0x7e923508"/>
        <function-ref name="toggle" scoped="" ref="0x7e9235e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9236c8"/>
        <function-ref name="get" scoped="" ref="0x7e9237a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e923888"/>
        <function-ref name="set" scoped="" ref="0x7e923968"/>
        <function-ref name="clr" scoped="" ref="0x7e923a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7e9262a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7e9262a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e926478"/>
        <function-ref name="isInput" scoped="" ref="0x7e926558"/>
        <function-ref name="toggle" scoped="" ref="0x7e926638"/>
        <function-ref name="isOutput" scoped="" ref="0x7e926718"/>
        <function-ref name="get" scoped="" ref="0x7e9267f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9268d8"/>
        <function-ref name="set" scoped="" ref="0x7e9269b8"/>
        <function-ref name="clr" scoped="" ref="0x7e926a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7e925f28" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7e925f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e924110"/>
        <function-ref name="isInput" scoped="" ref="0x7e9241f0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9242d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9243b0"/>
        <function-ref name="get" scoped="" ref="0x7e924490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e924570"/>
        <function-ref name="set" scoped="" ref="0x7e924650"/>
        <function-ref name="clr" scoped="" ref="0x7e924730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7e923ba8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7e923ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e923d80"/>
        <function-ref name="isInput" scoped="" ref="0x7e923e60"/>
        <function-ref name="toggle" scoped="" ref="0x7e922010"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9220f0"/>
        <function-ref name="get" scoped="" ref="0x7e9221d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9222b0"/>
        <function-ref name="set" scoped="" ref="0x7e922390"/>
        <function-ref name="clr" scoped="" ref="0x7e922470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7e926bf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7e926bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e926dd0"/>
        <function-ref name="isInput" scoped="" ref="0x7e926eb0"/>
        <function-ref name="toggle" scoped="" ref="0x7e925010"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9250f0"/>
        <function-ref name="get" scoped="" ref="0x7e9251d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9252b0"/>
        <function-ref name="set" scoped="" ref="0x7e925390"/>
        <function-ref name="clr" scoped="" ref="0x7e925470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7e924890" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7e924890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e924a68"/>
        <function-ref name="isInput" scoped="" ref="0x7e924b48"/>
        <function-ref name="toggle" scoped="" ref="0x7e924c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7e924d08"/>
        <function-ref name="get" scoped="" ref="0x7e924de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e924ec8"/>
        <function-ref name="set" scoped="" ref="0x7e923010"/>
        <function-ref name="clr" scoped="" ref="0x7e9230f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7e9225d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7e9225d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9227a8"/>
        <function-ref name="isInput" scoped="" ref="0x7e922888"/>
        <function-ref name="toggle" scoped="" ref="0x7e922968"/>
        <function-ref name="isOutput" scoped="" ref="0x7e922a48"/>
        <function-ref name="get" scoped="" ref="0x7e922b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e922c08"/>
        <function-ref name="set" scoped="" ref="0x7e922ce8"/>
        <function-ref name="clr" scoped="" ref="0x7e922dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7d2d08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7d2d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7d2ee0"/>
        <function-ref name="isInput" scoped="" ref="0x7d7c0010"/>
        <function-ref name="toggle" scoped="" ref="0x7d7c00f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7c01d0"/>
        <function-ref name="get" scoped="" ref="0x7d7c02b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7c0390"/>
        <function-ref name="set" scoped="" ref="0x7d7c0470"/>
        <function-ref name="clr" scoped="" ref="0x7d7c0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7bf718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7bf718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7bf8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d7bf9d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d7bfab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7bfb90"/>
        <function-ref name="get" scoped="" ref="0x7d7bfc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7bfd50"/>
        <function-ref name="set" scoped="" ref="0x7d7bfe30"/>
        <function-ref name="clr" scoped="" ref="0x7d7bff10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7bd0f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7bd0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7bd2d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d7bd3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7d7bd490"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7bd570"/>
        <function-ref name="get" scoped="" ref="0x7d7bd650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7bd730"/>
        <function-ref name="set" scoped="" ref="0x7d7bd810"/>
        <function-ref name="clr" scoped="" ref="0x7d7bd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7bcac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7bcac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7bcca0"/>
        <function-ref name="isInput" scoped="" ref="0x7d7bcd80"/>
        <function-ref name="toggle" scoped="" ref="0x7d7bce60"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7bb010"/>
        <function-ref name="get" scoped="" ref="0x7d7bb0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7bb1d0"/>
        <function-ref name="set" scoped="" ref="0x7d7bb2b0"/>
        <function-ref name="clr" scoped="" ref="0x7d7bb390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7ba570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7ba570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7ba748"/>
        <function-ref name="isInput" scoped="" ref="0x7d7ba828"/>
        <function-ref name="toggle" scoped="" ref="0x7d7ba908"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7ba9e8"/>
        <function-ref name="get" scoped="" ref="0x7d7baac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7baba8"/>
        <function-ref name="set" scoped="" ref="0x7d7bac88"/>
        <function-ref name="clr" scoped="" ref="0x7d7bad68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7b8010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7b81e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d7b82c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d7b83a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7b8488"/>
        <function-ref name="get" scoped="" ref="0x7d7b8568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7b8648"/>
        <function-ref name="set" scoped="" ref="0x7d7b8728"/>
        <function-ref name="clr" scoped="" ref="0x7d7b8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7b79e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7b79e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7b7bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d7b7ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d7b7d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7b7e60"/>
        <function-ref name="get" scoped="" ref="0x7d7b6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7b60f0"/>
        <function-ref name="set" scoped="" ref="0x7d7b61d0"/>
        <function-ref name="clr" scoped="" ref="0x7d7b62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7b5538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7b5538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7b5710"/>
        <function-ref name="isInput" scoped="" ref="0x7d7b57f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d7b58d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7b59b0"/>
        <function-ref name="get" scoped="" ref="0x7d7b5a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7b5b70"/>
        <function-ref name="set" scoped="" ref="0x7d7b5c50"/>
        <function-ref name="clr" scoped="" ref="0x7d7b5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7e915c88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7e915c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e915e60"/>
        <function-ref name="isInput" scoped="" ref="0x7e914010"/>
        <function-ref name="toggle" scoped="" ref="0x7e9140f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9141d0"/>
        <function-ref name="get" scoped="" ref="0x7e9142b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e914390"/>
        <function-ref name="set" scoped="" ref="0x7e914470"/>
        <function-ref name="clr" scoped="" ref="0x7e914550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7e913988" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7e913988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e913b60"/>
        <function-ref name="isInput" scoped="" ref="0x7e913c40"/>
        <function-ref name="toggle" scoped="" ref="0x7e913d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7e913e00"/>
        <function-ref name="get" scoped="" ref="0x7e913ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e912010"/>
        <function-ref name="set" scoped="" ref="0x7e9120f0"/>
        <function-ref name="clr" scoped="" ref="0x7e9121d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7e9169c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7e9169c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e916b98"/>
        <function-ref name="isInput" scoped="" ref="0x7e916c78"/>
        <function-ref name="toggle" scoped="" ref="0x7e916d58"/>
        <function-ref name="isOutput" scoped="" ref="0x7e916e38"/>
        <function-ref name="get" scoped="" ref="0x7e916f18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e915010"/>
        <function-ref name="set" scoped="" ref="0x7e9150f0"/>
        <function-ref name="clr" scoped="" ref="0x7e9151d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7e9146b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7e9146b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e914888"/>
        <function-ref name="isInput" scoped="" ref="0x7e914968"/>
        <function-ref name="toggle" scoped="" ref="0x7e914a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7e914b28"/>
        <function-ref name="get" scoped="" ref="0x7e914c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e914ce8"/>
        <function-ref name="set" scoped="" ref="0x7e914dc8"/>
        <function-ref name="clr" scoped="" ref="0x7e914ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7e912330" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7e912330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e912508"/>
        <function-ref name="isInput" scoped="" ref="0x7e9125e8"/>
        <function-ref name="toggle" scoped="" ref="0x7e9126c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9127a8"/>
        <function-ref name="get" scoped="" ref="0x7e912888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e912968"/>
        <function-ref name="set" scoped="" ref="0x7e912a48"/>
        <function-ref name="clr" scoped="" ref="0x7e912b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7e915330" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7e915330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e915508"/>
        <function-ref name="isInput" scoped="" ref="0x7e9155e8"/>
        <function-ref name="toggle" scoped="" ref="0x7e9156c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9157a8"/>
        <function-ref name="get" scoped="" ref="0x7e915888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e915968"/>
        <function-ref name="set" scoped="" ref="0x7e915a48"/>
        <function-ref name="clr" scoped="" ref="0x7e915b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7e913030" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7e913030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e913208"/>
        <function-ref name="isInput" scoped="" ref="0x7e9132e8"/>
        <function-ref name="toggle" scoped="" ref="0x7e9133c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9134a8"/>
        <function-ref name="get" scoped="" ref="0x7e913588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e913668"/>
        <function-ref name="set" scoped="" ref="0x7e913748"/>
        <function-ref name="clr" scoped="" ref="0x7e913828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7e912c88" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7e912c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e912e60"/>
        <function-ref name="isInput" scoped="" ref="0x7e911010"/>
        <function-ref name="toggle" scoped="" ref="0x7e9110f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9111d0"/>
        <function-ref name="get" scoped="" ref="0x7e9112b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e911390"/>
        <function-ref name="set" scoped="" ref="0x7e911470"/>
        <function-ref name="clr" scoped="" ref="0x7e911550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d77d2b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d77d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d77d488"/>
        <function-ref name="isInput" scoped="" ref="0x7d77d568"/>
        <function-ref name="toggle" scoped="" ref="0x7d77d648"/>
        <function-ref name="isOutput" scoped="" ref="0x7d77d728"/>
        <function-ref name="get" scoped="" ref="0x7d77d808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d77d8e8"/>
        <function-ref name="set" scoped="" ref="0x7d77d9c8"/>
        <function-ref name="clr" scoped="" ref="0x7d77daa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d77cc78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d77cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d77ce50"/>
        <function-ref name="isInput" scoped="" ref="0x7d77b010"/>
        <function-ref name="toggle" scoped="" ref="0x7d77b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d77b1d0"/>
        <function-ref name="get" scoped="" ref="0x7d77b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d77b390"/>
        <function-ref name="set" scoped="" ref="0x7d77b470"/>
        <function-ref name="clr" scoped="" ref="0x7d77b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d77a718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d77a718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d77a8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d77a9d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d77aab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d77ab90"/>
        <function-ref name="get" scoped="" ref="0x7d77ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d77ad50"/>
        <function-ref name="set" scoped="" ref="0x7d77ae30"/>
        <function-ref name="clr" scoped="" ref="0x7d77af10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7780f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7780f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7782d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d7783b0"/>
        <function-ref name="toggle" scoped="" ref="0x7d778490"/>
        <function-ref name="isOutput" scoped="" ref="0x7d778570"/>
        <function-ref name="get" scoped="" ref="0x7d778650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d778730"/>
        <function-ref name="set" scoped="" ref="0x7d778810"/>
        <function-ref name="clr" scoped="" ref="0x7d7788f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d777ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d777ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d777ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7d777d80"/>
        <function-ref name="toggle" scoped="" ref="0x7d777e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7d776010"/>
        <function-ref name="get" scoped="" ref="0x7d7760f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7761d0"/>
        <function-ref name="set" scoped="" ref="0x7d7762b0"/>
        <function-ref name="clr" scoped="" ref="0x7d776390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d775570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d775570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d775748"/>
        <function-ref name="isInput" scoped="" ref="0x7d775828"/>
        <function-ref name="toggle" scoped="" ref="0x7d775908"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7759e8"/>
        <function-ref name="get" scoped="" ref="0x7d775ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d775ba8"/>
        <function-ref name="set" scoped="" ref="0x7d775c88"/>
        <function-ref name="clr" scoped="" ref="0x7d775d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d773010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d773010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7731e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d7732c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d7733a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d773488"/>
        <function-ref name="get" scoped="" ref="0x7d773568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d773648"/>
        <function-ref name="set" scoped="" ref="0x7d773728"/>
        <function-ref name="clr" scoped="" ref="0x7d773808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7729e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7729e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d772bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d772ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d772d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d772e60"/>
        <function-ref name="get" scoped="" ref="0x7d771010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7710f0"/>
        <function-ref name="set" scoped="" ref="0x7d7711d0"/>
        <function-ref name="clr" scoped="" ref="0x7d7712b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7e905250" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7e905250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e905428"/>
        <function-ref name="isInput" scoped="" ref="0x7e905508"/>
        <function-ref name="toggle" scoped="" ref="0x7e9055e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9056c8"/>
        <function-ref name="get" scoped="" ref="0x7e9057a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e905888"/>
        <function-ref name="set" scoped="" ref="0x7e905968"/>
        <function-ref name="clr" scoped="" ref="0x7e905a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7e903f28" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7e903f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e902110"/>
        <function-ref name="isInput" scoped="" ref="0x7e9021f0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9022d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9023b0"/>
        <function-ref name="get" scoped="" ref="0x7e902490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e902570"/>
        <function-ref name="set" scoped="" ref="0x7e902650"/>
        <function-ref name="clr" scoped="" ref="0x7e902730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7e907eb0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7e907eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9060c0"/>
        <function-ref name="isInput" scoped="" ref="0x7e9061a0"/>
        <function-ref name="toggle" scoped="" ref="0x7e906280"/>
        <function-ref name="isOutput" scoped="" ref="0x7e906360"/>
        <function-ref name="get" scoped="" ref="0x7e906440"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e906520"/>
        <function-ref name="set" scoped="" ref="0x7e906600"/>
        <function-ref name="clr" scoped="" ref="0x7e9066e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7e905ba8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7e905ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e905d80"/>
        <function-ref name="isInput" scoped="" ref="0x7e905e60"/>
        <function-ref name="toggle" scoped="" ref="0x7e903010"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9030f0"/>
        <function-ref name="get" scoped="" ref="0x7e9031d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e9032b0"/>
        <function-ref name="set" scoped="" ref="0x7e903390"/>
        <function-ref name="clr" scoped="" ref="0x7e903470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7e902890" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7e902890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e902a68"/>
        <function-ref name="isInput" scoped="" ref="0x7e902b48"/>
        <function-ref name="toggle" scoped="" ref="0x7e902c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7e902d08"/>
        <function-ref name="get" scoped="" ref="0x7e902de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e902ec8"/>
        <function-ref name="set" scoped="" ref="0x7e901010"/>
        <function-ref name="clr" scoped="" ref="0x7e9010f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7e906840" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7e906840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e906a18"/>
        <function-ref name="isInput" scoped="" ref="0x7e906af8"/>
        <function-ref name="toggle" scoped="" ref="0x7e906bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e906cb8"/>
        <function-ref name="get" scoped="" ref="0x7e906d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e906e78"/>
        <function-ref name="set" scoped="" ref="0x7e905010"/>
        <function-ref name="clr" scoped="" ref="0x7e9050f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7e9035d0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7e9035d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9037a8"/>
        <function-ref name="isInput" scoped="" ref="0x7e903888"/>
        <function-ref name="toggle" scoped="" ref="0x7e903968"/>
        <function-ref name="isOutput" scoped="" ref="0x7e903a48"/>
        <function-ref name="get" scoped="" ref="0x7e903b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e903c08"/>
        <function-ref name="set" scoped="" ref="0x7e903ce8"/>
        <function-ref name="clr" scoped="" ref="0x7e903dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7e901250" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7e901250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e901428"/>
        <function-ref name="isInput" scoped="" ref="0x7e901508"/>
        <function-ref name="toggle" scoped="" ref="0x7e9015e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9016c8"/>
        <function-ref name="get" scoped="" ref="0x7e9017a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e901888"/>
        <function-ref name="set" scoped="" ref="0x7e901968"/>
        <function-ref name="clr" scoped="" ref="0x7e901a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d72c7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d72c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d72c9d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d72cab0"/>
        <function-ref name="toggle" scoped="" ref="0x7d72cb90"/>
        <function-ref name="isOutput" scoped="" ref="0x7d72cc70"/>
        <function-ref name="get" scoped="" ref="0x7d72cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d72ce30"/>
        <function-ref name="set" scoped="" ref="0x7d72cf10"/>
        <function-ref name="clr" scoped="" ref="0x7d72b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d72a228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d72a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d72a400"/>
        <function-ref name="isInput" scoped="" ref="0x7d72a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7d72a5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d72a6a0"/>
        <function-ref name="get" scoped="" ref="0x7d72a780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d72a860"/>
        <function-ref name="set" scoped="" ref="0x7d72a940"/>
        <function-ref name="clr" scoped="" ref="0x7d72aa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d729c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d729c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d729de0"/>
        <function-ref name="isInput" scoped="" ref="0x7d729ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7d728010"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7280f0"/>
        <function-ref name="get" scoped="" ref="0x7d7281d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7282b0"/>
        <function-ref name="set" scoped="" ref="0x7d728390"/>
        <function-ref name="clr" scoped="" ref="0x7d728470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7276c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7276c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d727898"/>
        <function-ref name="isInput" scoped="" ref="0x7d727978"/>
        <function-ref name="toggle" scoped="" ref="0x7d727a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7d727b38"/>
        <function-ref name="get" scoped="" ref="0x7d727c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d727cf8"/>
        <function-ref name="set" scoped="" ref="0x7d727dd8"/>
        <function-ref name="clr" scoped="" ref="0x7d727eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7250b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7250b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d725288"/>
        <function-ref name="isInput" scoped="" ref="0x7d725368"/>
        <function-ref name="toggle" scoped="" ref="0x7d725448"/>
        <function-ref name="isOutput" scoped="" ref="0x7d725528"/>
        <function-ref name="get" scoped="" ref="0x7d725608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7256e8"/>
        <function-ref name="set" scoped="" ref="0x7d7257c8"/>
        <function-ref name="clr" scoped="" ref="0x7d7258a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d724a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d724a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d724c60"/>
        <function-ref name="isInput" scoped="" ref="0x7d724d40"/>
        <function-ref name="toggle" scoped="" ref="0x7d724e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7d724f00"/>
        <function-ref name="get" scoped="" ref="0x7d722010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7220f0"/>
        <function-ref name="set" scoped="" ref="0x7d7221d0"/>
        <function-ref name="clr" scoped="" ref="0x7d7222b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d721538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d721538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d721710"/>
        <function-ref name="isInput" scoped="" ref="0x7d7217f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d7218d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7219b0"/>
        <function-ref name="get" scoped="" ref="0x7d721a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d721b70"/>
        <function-ref name="set" scoped="" ref="0x7d721c50"/>
        <function-ref name="clr" scoped="" ref="0x7d721d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d71f010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d71f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d71f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d71f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d71f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d71f488"/>
        <function-ref name="get" scoped="" ref="0x7d71f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d71f648"/>
        <function-ref name="set" scoped="" ref="0x7d71f728"/>
        <function-ref name="clr" scoped="" ref="0x7d71f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7e8f58f0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7e8f58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e8f5ac8"/>
        <function-ref name="isInput" scoped="" ref="0x7e8f5ba8"/>
        <function-ref name="toggle" scoped="" ref="0x7e8f5c88"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8f5d68"/>
        <function-ref name="get" scoped="" ref="0x7e8f5e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8f5f28"/>
        <function-ref name="set" scoped="" ref="0x7e8f4018"/>
        <function-ref name="clr" scoped="" ref="0x7e8f40f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7e8e0cb8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7e8e0cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e8e0e90"/>
        <function-ref name="isInput" scoped="" ref="0x7e8d8010"/>
        <function-ref name="toggle" scoped="" ref="0x7e8d80f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8d81d0"/>
        <function-ref name="get" scoped="" ref="0x7e8d82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8d8390"/>
        <function-ref name="set" scoped="" ref="0x7e8d8470"/>
        <function-ref name="clr" scoped="" ref="0x7e8d8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7e8d6148" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7e8d6148"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e8d6320"/>
        <function-ref name="isInput" scoped="" ref="0x7e8d6400"/>
        <function-ref name="toggle" scoped="" ref="0x7e8d64e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8d65c0"/>
        <function-ref name="get" scoped="" ref="0x7e8d66a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8d6780"/>
        <function-ref name="set" scoped="" ref="0x7e8d6860"/>
        <function-ref name="clr" scoped="" ref="0x7e8d6940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7e8d3538" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7e8d3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e8d3710"/>
        <function-ref name="isInput" scoped="" ref="0x7e8d37f0"/>
        <function-ref name="toggle" scoped="" ref="0x7e8d38d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8d39b0"/>
        <function-ref name="get" scoped="" ref="0x7e8d3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8d3b70"/>
        <function-ref name="set" scoped="" ref="0x7e8d3c50"/>
        <function-ref name="clr" scoped="" ref="0x7e8d3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7e8d1978" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7e8d1978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e8d1b50"/>
        <function-ref name="isInput" scoped="" ref="0x7e8d1c30"/>
        <function-ref name="toggle" scoped="" ref="0x7e8d1d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8d1df0"/>
        <function-ref name="get" scoped="" ref="0x7e8d1ed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8d0010"/>
        <function-ref name="set" scoped="" ref="0x7e8d00f0"/>
        <function-ref name="clr" scoped="" ref="0x7e8d01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7e8c7d70" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7e8c7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e8c6010"/>
        <function-ref name="isInput" scoped="" ref="0x7e8c60f0"/>
        <function-ref name="toggle" scoped="" ref="0x7e8c61d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8c62b0"/>
        <function-ref name="get" scoped="" ref="0x7e8c6390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8c6470"/>
        <function-ref name="set" scoped="" ref="0x7e8c6550"/>
        <function-ref name="clr" scoped="" ref="0x7e8c6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7e8c42b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7e8c42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e8c4488"/>
        <function-ref name="isInput" scoped="" ref="0x7e8c4568"/>
        <function-ref name="toggle" scoped="" ref="0x7e8c4648"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8c4728"/>
        <function-ref name="get" scoped="" ref="0x7e8c4808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8c48e8"/>
        <function-ref name="set" scoped="" ref="0x7e8c49c8"/>
        <function-ref name="clr" scoped="" ref="0x7e8c4aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7e8c16c0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7e8c16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e8c1898"/>
        <function-ref name="isInput" scoped="" ref="0x7e8c1978"/>
        <function-ref name="toggle" scoped="" ref="0x7e8c1a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8c1b38"/>
        <function-ref name="get" scoped="" ref="0x7e8c1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8c1cf8"/>
        <function-ref name="set" scoped="" ref="0x7e8c1dd8"/>
        <function-ref name="clr" scoped="" ref="0x7e8c1eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7e8b8998" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7e8b8998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e8b8b70"/>
        <function-ref name="isInput" scoped="" ref="0x7e8b8c50"/>
        <function-ref name="toggle" scoped="" ref="0x7e8b8d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8b8e10"/>
        <function-ref name="get" scoped="" ref="0x7e8b8ef0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8b7010"/>
        <function-ref name="set" scoped="" ref="0x7e8b70f0"/>
        <function-ref name="clr" scoped="" ref="0x7e8b71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7e8b6cb8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7e8b6cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e8b6e90"/>
        <function-ref name="isInput" scoped="" ref="0x7e8b5010"/>
        <function-ref name="toggle" scoped="" ref="0x7e8b50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8b51d0"/>
        <function-ref name="get" scoped="" ref="0x7e8b52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8b5390"/>
        <function-ref name="set" scoped="" ref="0x7e8b5470"/>
        <function-ref name="clr" scoped="" ref="0x7e8b5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7e8b2050" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7e8b2050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e8b2228"/>
        <function-ref name="isInput" scoped="" ref="0x7e8b2308"/>
        <function-ref name="toggle" scoped="" ref="0x7e8b23e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8b24c8"/>
        <function-ref name="get" scoped="" ref="0x7e8b25a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8b2688"/>
        <function-ref name="set" scoped="" ref="0x7e8b2768"/>
        <function-ref name="clr" scoped="" ref="0x7e8b2848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7e8b03b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7e8b03b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e8b0588"/>
        <function-ref name="isInput" scoped="" ref="0x7e8b0668"/>
        <function-ref name="toggle" scoped="" ref="0x7e8b0748"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8b0828"/>
        <function-ref name="get" scoped="" ref="0x7e8b0908"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8b09e8"/>
        <function-ref name="set" scoped="" ref="0x7e8b0ac8"/>
        <function-ref name="clr" scoped="" ref="0x7e8b0ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7e8a66c0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7e8a66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e8a6898"/>
        <function-ref name="isInput" scoped="" ref="0x7e8a6978"/>
        <function-ref name="toggle" scoped="" ref="0x7e8a6a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8a6b38"/>
        <function-ref name="get" scoped="" ref="0x7e8a6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8a6cf8"/>
        <function-ref name="set" scoped="" ref="0x7e8a6dd8"/>
        <function-ref name="clr" scoped="" ref="0x7e8a6eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e858d58" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e858d58"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f252238"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f252238"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e857010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7e857160" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7e857160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7e857338"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7e857418"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7e8574f8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7e8575d8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7e8576b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7e8371a8" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7e8371a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e837380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7e8384f0" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7e8384f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7e8386c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7e838d68" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7e838d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e837010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7e838838" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7e838838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e838a10"/>
        <function-ref name="taskLoop" scoped="" ref="0x7e838af0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7e838bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f212e58" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f230050"/>
        <function-ref name="runTask" scoped="" ref="0x7f230130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f232c50" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f232c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f232e28"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f232f08"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f241010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f071d30" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f071d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f071f08"/>
        <function-ref name="runTask" scoped="" ref="0x7f070010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f052188" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f052188"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f052360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f071598" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f071598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f071770"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f071850"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f071930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d902310" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="BigPackC.SendHeaderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d902310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d9024e8"/>
        <function-ref name="destination" scoped="" ref="0x7d9025c8"/>
        <function-ref name="setSource" scoped="" ref="0x7d9026a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7d902788"/>
        <function-ref name="isForMe" scoped="" ref="0x7d902868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d9015b0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="BigPackC.SendHeaderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d9015b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d901788"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d901868"/>
        <function-ref name="getPayload" scoped="" ref="0x7d901948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d901a28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d901b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e831c60" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="BigPackC.SendHeaderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e831c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e831e38"/>
        <function-ref name="getPayload" scoped="" ref="0x7e831f18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d902010"/>
        <function-ref name="cancel" scoped="" ref="0x7d9020f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d9021d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d9029a8" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="BigPackC.SendHeaderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d9029a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d902b80"/>
        <function-ref name="source" scoped="" ref="0x7d902c60"/>
        <function-ref name="address" scoped="" ref="0x7d902d40"/>
        <function-ref name="destination" scoped="" ref="0x7d902e20"/>
        <function-ref name="setSource" scoped="" ref="0x7d902f00"/>
        <function-ref name="setDestination" scoped="" ref="0x7d901010"/>
        <function-ref name="type" scoped="" ref="0x7d9010f0"/>
        <function-ref name="setType" scoped="" ref="0x7d9011d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9012b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7d901390"/>
        <function-ref name="localGroup" scoped="" ref="0x7d901470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketWaitList" ref="0x7e7c7aa8" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7e7c7aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e7d2380"/>
        <function-ref name="next" scoped="" ref="0x7e7d2100"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacket" ref="0x7e7c06a8" loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7e7c06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e7c0880"/>
        <function-ref name="destination" scoped="" ref="0x7e7c0960"/>
        <function-ref name="setSource" scoped="" ref="0x7e7c0a40"/>
        <function-ref name="setDestination" scoped="" ref="0x7e7c0b20"/>
        <function-ref name="isForMe" scoped="" ref="0x7e7c0c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e7f1450" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e7f1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e7f1628"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e7f1708"/>
        <function-ref name="getPayload" scoped="" ref="0x7e7f17e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e7f18c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e7f19a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketEngine" ref="0x7e7d5170" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7e7d5170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e7d5348"/>
        <function-ref name="send" scoped="" ref="0x7e7d5428"/>
        <function-ref name="receive" scoped="" ref="0x7e7d5508"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7e7d55e8"/>
        <function-ref name="sendAdded" scoped="" ref="0x7e7d56c8"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7e7d57a8"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7e7d5888"/>
        <function-ref name="packet" scoped="" ref="0x7e7d5968"/>
        <function-ref name="sendDone" scoped="" ref="0x7e7d5a48"/>
        <function-ref name="drop" scoped="" ref="0x7e7d5b28"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7e7d5c08"/>
        <function-ref name="waitList" scoped="" ref="0x7e7d5ce8"/>
        <function-ref name="setUpperType" scoped="" ref="0x7e7d5dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketEngine" ref="0x7e7e7010" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketEngine" scoped="" ref="0x7e7e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e7e71e8"/>
        <function-ref name="send" scoped="" ref="0x7e7e72c8"/>
        <function-ref name="receive" scoped="" ref="0x7e7e73a8"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7e7e7488"/>
        <function-ref name="sendAdded" scoped="" ref="0x7e7e7568"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7e7e7648"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7e7e7728"/>
        <function-ref name="packet" scoped="" ref="0x7e7e7808"/>
        <function-ref name="sendDone" scoped="" ref="0x7e7e78e8"/>
        <function-ref name="drop" scoped="" ref="0x7e7e79c8"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7e7e7aa8"/>
        <function-ref name="waitList" scoped="" ref="0x7e7e7b88"/>
        <function-ref name="setUpperType" scoped="" ref="0x7e7e7c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7e7b9738" loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e7b9738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e7b9990"/>
        <function-ref name="getPayload" scoped="" ref="0x7e7b9a70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e7b9b50"/>
        <function-ref name="cancel" scoped="" ref="0x7e7b9c30"/>
        <function-ref name="sendDone" scoped="" ref="0x7e7b9d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ComposePacket" ref="0x7e7c2970" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ComposePacket" scoped="" ref="0x7e7c2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e7c2b48"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e7c2c28"/>
        <function-ref name="getPayload" scoped="" ref="0x7e7c2d08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e7c2de8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e7c2ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7e7b9070" loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7e7b9070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e7b9248"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e7b9328"/>
        <function-ref name="getPayload" scoped="" ref="0x7e7b9408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e7b94e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e7b95c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketEngine" ref="0x7e7e7e68" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketEngine" scoped="" ref="0x7e7e7e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e7e6050"/>
        <function-ref name="send" scoped="" ref="0x7e7e6130"/>
        <function-ref name="receive" scoped="" ref="0x7e7e6210"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7e7e62f0"/>
        <function-ref name="sendAdded" scoped="" ref="0x7e7e63d0"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7e7e64b0"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7e7e6590"/>
        <function-ref name="packet" scoped="" ref="0x7e7e6670"/>
        <function-ref name="sendDone" scoped="" ref="0x7e7e6750"/>
        <function-ref name="drop" scoped="" ref="0x7e7e6830"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7e7e6910"/>
        <function-ref name="waitList" scoped="" ref="0x7e7e69f0"/>
        <function-ref name="setUpperType" scoped="" ref="0x7e7e6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketWaitList" ref="0x7e7d26a0" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7e7d26a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e7c6010"/>
        <function-ref name="next" scoped="" ref="0x7e7d2cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketWaitList" ref="0x7e7c6330" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7e7c6330"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e7c6bd8"/>
        <function-ref name="next" scoped="" ref="0x7e7c6958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e7c0d50" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e7c0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e7c0f28"/>
        <function-ref name="source" scoped="" ref="0x7e7c2018"/>
        <function-ref name="address" scoped="" ref="0x7e7c20f8"/>
        <function-ref name="destination" scoped="" ref="0x7e7c21d8"/>
        <function-ref name="setSource" scoped="" ref="0x7e7c22b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e7c2398"/>
        <function-ref name="type" scoped="" ref="0x7e7c2478"/>
        <function-ref name="setType" scoped="" ref="0x7e7c2558"/>
        <function-ref name="isForMe" scoped="" ref="0x7e7c2638"/>
        <function-ref name="setGroup" scoped="" ref="0x7e7c2718"/>
        <function-ref name="localGroup" scoped="" ref="0x7e7c27f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Acks" ref="0x7e7c01c0" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7e7c01c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e7c0398"/>
        <function-ref name="noAck" scoped="" ref="0x7e7c0478"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e7c0558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteErrorList" ref="0x7e780180" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteErrorList" scoped="" ref="0x7e780180"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
            <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e780bf0"/>
        <function-ref name="next" scoped="" ref="0x7e7808b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AckList" ref="0x7e779f08" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckList" scoped="" ref="0x7e779f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
            <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e7789a0"/>
        <function-ref name="next" scoped="" ref="0x7e778660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteRequest" ref="0x7e794420" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequest" scoped="" ref="0x7e794420"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e7945f8"/>
        <function-ref name="remove" scoped="" ref="0x7e7946d8"/>
        <function-ref name="length" scoped="" ref="0x7e7947b8"/>
        <function-ref name="setLength" scoped="" ref="0x7e794898"/>
        <function-ref name="add" scoped="" ref="0x7e794978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteReplyList" ref="0x7e781a98" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteReplyList" scoped="" ref="0x7e781a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
            <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e792520"/>
        <function-ref name="next" scoped="" ref="0x7e7921e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e7763f8" loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e7763f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e7765d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e7766b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e776790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e776870"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e776950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DsrHeader" ref="0x7e7a2810" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrHeader" scoped="" ref="0x7e7a2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlockPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e7a29e8"/>
        <function-ref name="length" scoped="" ref="0x7e7a2ac8"/>
        <function-ref name="add" scoped="" ref="0x7e7a2ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceRoute" ref="0x7e778cd8" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceRoute" scoped="" ref="0x7e778cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e778eb0"/>
        <function-ref name="remove" scoped="" ref="0x7e776010"/>
        <function-ref name="length" scoped="" ref="0x7e7760f0"/>
        <function-ref name="setLength" scoped="" ref="0x7e7761d0"/>
        <function-ref name="add" scoped="" ref="0x7e7762b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteError" ref="0x7e792860" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteError" scoped="" ref="0x7e792860"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e792a38"/>
        <function-ref name="list" scoped="" ref="0x7e792b18"/>
        <function-ref name="remove" scoped="" ref="0x7e792bf8"/>
        <function-ref name="length" scoped="" ref="0x7e792cd8"/>
        <function-ref name="setLength" scoped="" ref="0x7e792db8"/>
        <function-ref name="add" scoped="" ref="0x7e792e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AckRequest" ref="0x7e780f28" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckRequest" scoped="" ref="0x7e780f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e779110"/>
        <function-ref name="remove" scoped="" ref="0x7e7791f0"/>
        <function-ref name="length" scoped="" ref="0x7e7792d0"/>
        <function-ref name="setLength" scoped="" ref="0x7e7793b0"/>
        <function-ref name="add" scoped="" ref="0x7e779490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteReply" ref="0x7e7853c8" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteReply" scoped="" ref="0x7e7853c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e7855a0"/>
        <function-ref name="list" scoped="" ref="0x7e785680"/>
        <function-ref name="remove" scoped="" ref="0x7e785760"/>
        <function-ref name="length" scoped="" ref="0x7e785840"/>
        <function-ref name="setLength" scoped="" ref="0x7e785920"/>
        <function-ref name="add" scoped="" ref="0x7e785a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ack" ref="0x7e779610" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ack" scoped="" ref="0x7e779610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e7797e8"/>
        <function-ref name="list" scoped="" ref="0x7e7798c8"/>
        <function-ref name="remove" scoped="" ref="0x7e7799a8"/>
        <function-ref name="length" scoped="" ref="0x7e779a88"/>
        <function-ref name="setLength" scoped="" ref="0x7e779b68"/>
        <function-ref name="add" scoped="" ref="0x7e779c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7e776af8" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7e776af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e776cd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e776db0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e776e90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e775010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e7750f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvListPacket" ref="0x7e684010" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvListPacket" scoped="" ref="0x7e684010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
            <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e684aa0"/>
        <function-ref name="next" scoped="" ref="0x7e684750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e684da8" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e684da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e682010"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e6820f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6821d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6822b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e682390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiplePacket" ref="0x7e685678" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7e685678"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e685860"/>
        <function-ref name="list" scoped="" ref="0x7e685940"/>
        <function-ref name="remove" scoped="" ref="0x7e685a20"/>
        <function-ref name="length" scoped="" ref="0x7e685b00"/>
        <function-ref name="setLength" scoped="" ref="0x7e685be0"/>
        <function-ref name="add" scoped="" ref="0x7e685cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7e682520" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7e682520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6826f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e6827d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6828b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e682998"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e682a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlockPacket" ref="0x7e6d49b8" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlockPacket" scoped="" ref="0x7e6d49b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlockPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e6d4b90"/>
        <function-ref name="length" scoped="" ref="0x7e6d4c70"/>
        <function-ref name="add" scoped="" ref="0x7e6d4d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvSinglePacket" ref="0x7e6d4f28" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvSinglePacket" scoped="" ref="0x7e6d4f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e685120"/>
        <function-ref name="remove" scoped="" ref="0x7e685200"/>
        <function-ref name="length" scoped="" ref="0x7e6852e0"/>
        <function-ref name="setLength" scoped="" ref="0x7e6853c0"/>
        <function-ref name="add" scoped="" ref="0x7e6854a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvListPacket" ref="0x7d676c28" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvListPacket" scoped="" ref="0x7d676c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
            <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d6756d0"/>
        <function-ref name="next" scoped="" ref="0x7d675380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d6759d8" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d6759d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d675bb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d675c90"/>
        <function-ref name="getPayload" scoped="" ref="0x7d675d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d675e50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d674010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TlvMultiple" ref="0x7d674e30" loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiple" scoped="" ref="0x7d674e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7d672050"/>
        <function-ref name="list" scoped="" ref="0x7d672130"/>
        <function-ref name="remove" scoped="" ref="0x7d672210"/>
        <function-ref name="length" scoped="" ref="0x7d6722f0"/>
        <function-ref name="setLength" scoped="" ref="0x7d6723d0"/>
        <function-ref name="add" scoped="" ref="0x7d6724b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TlvList" ref="0x7d672738" loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvList" scoped="" ref="0x7d672738"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticVoidIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d6710d8"/>
        <function-ref name="next" scoped="" ref="0x7d672d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiplePacket" ref="0x7d6762c8" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7d6762c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7d6764b0"/>
        <function-ref name="list" scoped="" ref="0x7d676590"/>
        <function-ref name="remove" scoped="" ref="0x7d676670"/>
        <function-ref name="length" scoped="" ref="0x7d676750"/>
        <function-ref name="setLength" scoped="" ref="0x7d676830"/>
        <function-ref name="add" scoped="" ref="0x7d676910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7d671400" loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7d671400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d6715d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d6716b8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d671798"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d671878"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d671958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlockPacket" ref="0x7d677570" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlockPacket" scoped="" ref="0x7d677570"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlockPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7d677748"/>
        <function-ref name="length" scoped="" ref="0x7d677828"/>
        <function-ref name="add" scoped="" ref="0x7d677908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvSinglePacket" ref="0x7d677ae0" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvSinglePacket" scoped="" ref="0x7d677ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7d677cc8"/>
        <function-ref name="remove" scoped="" ref="0x7d677da8"/>
        <function-ref name="length" scoped="" ref="0x7d677e88"/>
        <function-ref name="setLength" scoped="" ref="0x7d676010"/>
        <function-ref name="add" scoped="" ref="0x7d6760f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TlvBlock" ref="0x7d674180" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7d674180"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7d674358"/>
        <function-ref name="length" scoped="" ref="0x7d674438"/>
        <function-ref name="add" scoped="" ref="0x7d674518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TlvSingle" ref="0x7d6746f0" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvSingle" scoped="" ref="0x7d6746f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSingle"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7d6748d8"/>
        <function-ref name="remove" scoped="" ref="0x7d6749b8"/>
        <function-ref name="length" scoped="" ref="0x7d674a98"/>
        <function-ref name="setLength" scoped="" ref="0x7d674b78"/>
        <function-ref name="add" scoped="" ref="0x7d674c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiple" ref="0x7e6d1a38" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiple" scoped="" ref="0x7e6d1a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e6d1c10"/>
        <function-ref name="list" scoped="" ref="0x7e6d1cf0"/>
        <function-ref name="remove" scoped="" ref="0x7e6d1dd0"/>
        <function-ref name="length" scoped="" ref="0x7e6d1eb0"/>
        <function-ref name="setLength" scoped="" ref="0x7e6d0010"/>
        <function-ref name="add" scoped="" ref="0x7e6d00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvList" ref="0x7e6d05a8" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvList" scoped="" ref="0x7e6d05a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticVoidIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e6d0f10"/>
        <function-ref name="next" scoped="" ref="0x7e6d0bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7e6d3908" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7e6d3908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e6d3ae0"/>
        <function-ref name="length" scoped="" ref="0x7e6d3bc0"/>
        <function-ref name="add" scoped="" ref="0x7e6d3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvSingle" ref="0x7e6d1100" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvSingle" scoped="" ref="0x7e6d1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSingle"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e6d12d8"/>
        <function-ref name="remove" scoped="" ref="0x7e6d13b8"/>
        <function-ref name="length" scoped="" ref="0x7e6d1498"/>
        <function-ref name="setLength" scoped="" ref="0x7e6d1578"/>
        <function-ref name="add" scoped="" ref="0x7e6d1658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7e662970" loc="94:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7e662970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e662b48"/>
        <function-ref name="receive" scoped="" ref="0x7e662c28"/>
        <function-ref name="getPayload" scoped="" ref="0x7e662d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7e662010" loc="93:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7e662010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e6621e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6622c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6623a8"/>
        <function-ref name="cancel" scoped="" ref="0x7e662488"/>
        <function-ref name="sendDone" scoped="" ref="0x7e662568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendPool" ref="0x7e644508" loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendPool" scoped="" ref="0x7e644508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
            <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e6463a8"/>
        <function-ref name="maxSize" scoped="" ref="0x7e644ef0"/>
        <function-ref name="empty" scoped="" ref="0x7e644b30"/>
        <function-ref name="put" scoped="" ref="0x7e646108"/>
        <function-ref name="size" scoped="" ref="0x7e644d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketEngineClient" ref="0x7e654910" loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7e654910"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7ef634d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e654b68"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7e654c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceivePool" ref="0x7e646638" loc="100:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceivePool" scoped="" ref="0x7e646638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
            <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e6434c8"/>
        <function-ref name="maxSize" scoped="" ref="0x7e643048"/>
        <function-ref name="empty" scoped="" ref="0x7e646c60"/>
        <function-ref name="put" scoped="" ref="0x7e643228"/>
        <function-ref name="size" scoped="" ref="0x7e646e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7e666cf8" loc="86:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7e666cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7e666ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e669040" loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e669040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e669218"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e6692f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6693d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6694b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e669598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7e636768" loc="102:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e636768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e636940"/>
        <function-ref name="rand32" scoped="" ref="0x7e636a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e670dd8" loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e670dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7ef634d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e672010"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6720f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6721d0"/>
        <function-ref name="cancel" scoped="" ref="0x7e6722b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e672390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7e639bd8" loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7e639bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e639db0"/>
        <function-ref name="toIdle" scoped="" ref="0x7e639e90"/>
        <function-ref name="isState" scoped="" ref="0x7e641010"/>
        <function-ref name="isIdle" scoped="" ref="0x7e6410f0"/>
        <function-ref name="requestState" scoped="" ref="0x7e6411d0"/>
        <function-ref name="forceState" scoped="" ref="0x7e6412b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7e668b60" loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7e668b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e664460"/>
        <function-ref name="next" scoped="" ref="0x7e6641e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7e64a930" loc="98:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x7e64a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ef52af8"/>
            <typename><typedef-ref name="packet_send_entry_t" ref="0x7ef52d48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e653a10"/>
        <function-ref name="evicted" scoped="" ref="0x7e6534b0"/>
        <function-ref name="insert" scoped="" ref="0x7e6531f0"/>
        <function-ref name="flush" scoped="" ref="0x7e653cb0"/>
        <function-ref name="lookup" scoped="" ref="0x7e653750"/>
        <function-ref name="size" scoped="" ref="0x7e653010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7e659120" loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7e659120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6592f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e6593d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6594b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e659598"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e659678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e675d00" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e675d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e675ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7e669978" loc="88:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7e669978"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e669b50"/>
        <function-ref name="send" scoped="" ref="0x7e669c30"/>
        <function-ref name="receive" scoped="" ref="0x7e669d10"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7e669df0"/>
        <function-ref name="sendAdded" scoped="" ref="0x7e669ed0"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7e668010"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7e6680f0"/>
        <function-ref name="packet" scoped="" ref="0x7e6681d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e6682b0"/>
        <function-ref name="drop" scoped="" ref="0x7e668390"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7e668470"/>
        <function-ref name="waitList" scoped="" ref="0x7e668550"/>
        <function-ref name="setUpperType" scoped="" ref="0x7e668630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="msgAction" ref="0x7e626618" loc="190:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="msgAction" scoped="" ref="0x7e626618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e6267f0"/>
        <function-ref name="runTask" scoped="" ref="0x7e6268d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e672768" loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e672768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e672940"/>
        <function-ref name="receive" scoped="" ref="0x7e672a20"/>
        <function-ref name="getPayload" scoped="" ref="0x7e672b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="msgAdded" ref="0x7e627ea0" loc="189:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="msgAdded" scoped="" ref="0x7e627ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e6260c0"/>
        <function-ref name="runTask" scoped="" ref="0x7e6261a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendQueueEqual" ref="0x7e65a390" loc="90:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueueEqual" scoped="" ref="0x7e65a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ef52af8"/>
              <typename><typedef-ref name="packet_send_entry_t" ref="0x7ef52d48"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e65a9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBackoff" ref="0x7e636c30" loc="103:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBackoff" scoped="" ref="0x7e636c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e635558"/>
        <function-ref name="fired" scoped="" ref="0x7e638958"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e638ef8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e638d18"/>
        <function-ref name="getdt" scoped="" ref="0x7e635918"/>
        <function-ref name="gett0" scoped="" ref="0x7e635738"/>
        <function-ref name="isRunning" scoped="" ref="0x7e638b38"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e638278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e635238"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e6384f8"/>
        <function-ref name="stop" scoped="" ref="0x7e638778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e654d98" loc="97:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e654d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e657010"/>
        <function-ref name="source" scoped="" ref="0x7e6570f0"/>
        <function-ref name="address" scoped="" ref="0x7e6571d0"/>
        <function-ref name="destination" scoped="" ref="0x7e6572b0"/>
        <function-ref name="setSource" scoped="" ref="0x7e657390"/>
        <function-ref name="setDestination" scoped="" ref="0x7e657470"/>
        <function-ref name="type" scoped="" ref="0x7e657550"/>
        <function-ref name="setType" scoped="" ref="0x7e657630"/>
        <function-ref name="isForMe" scoped="" ref="0x7e657710"/>
        <function-ref name="setGroup" scoped="" ref="0x7e6577f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7e6578d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e670708" loc="83:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e670708"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e6708e0"/>
        <function-ref name="stop" scoped="" ref="0x7e6709c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e56bf08" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e56bf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e5700f0"/>
        <function-ref name="rand32" scoped="" ref="0x7e5701d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e56b658" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e56b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e56bc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e575998" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e575998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e575b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e567e50" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e567e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e566050"/>
        <function-ref name="rand32" scoped="" ref="0x7e566130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e5675a0" loc="33:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e5675a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e567bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e567188" loc="32:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e567188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e567360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e562db8" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e562db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e561010"/>
        <function-ref name="rand32" scoped="" ref="0x7e5610f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e562508" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e562508"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e562b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e5620f0" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e5620f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e5622c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequestOutCache" ref="0x7e3f3ab0" loc="109:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestOutCache" scoped="" ref="0x7e3f3ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7e7f8ce0"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7e7f7058"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e3f1b00"/>
        <function-ref name="evicted" scoped="" ref="0x7e3f15a0"/>
        <function-ref name="insert" scoped="" ref="0x7e3f12e0"/>
        <function-ref name="flush" scoped="" ref="0x7e3f1da0"/>
        <function-ref name="lookup" scoped="" ref="0x7e3f1840"/>
        <function-ref name="size" scoped="" ref="0x7e3f1100"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequestOutTimer" ref="0x7e3ee010" loc="110:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestOutTimer" scoped="" ref="0x7e3ee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataTimer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="expired" scoped="" ref="0x7e3eebd8"/>
        <function-ref name="start" scoped="" ref="0x7e3ee638"/>
        <function-ref name="stop" scoped="" ref="0x7e3ee958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteRequestInEqual" ref="0x7e403b48" loc="86:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestInEqual" scoped="" ref="0x7e403b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7e7f75c0"/>
              <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7e7f78e0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e4021e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteErrorList" ref="0x7e3fd6f0" loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteErrorList" scoped="" ref="0x7e3fd6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
            <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e3fc170"/>
        <function-ref name="next" scoped="" ref="0x7e3fde20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketWaitList" ref="0x7e3f97c0" loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7e3f97c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e3f8088"/>
        <function-ref name="next" scoped="" ref="0x7e3f9de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacket" ref="0x7e3ed350" loc="113:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7e3ed350"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e3ed528"/>
        <function-ref name="destination" scoped="" ref="0x7e3ed608"/>
        <function-ref name="setSource" scoped="" ref="0x7e3ed6e8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e3ed7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7e3ed8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7e402eb8" loc="90:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7e402eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7e4000c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketEngine" ref="0x7e3fcb40" loc="98:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7e3fcb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e3fcd18"/>
        <function-ref name="send" scoped="" ref="0x7e3fcdf8"/>
        <function-ref name="receive" scoped="" ref="0x7e3fced8"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7e3fb010"/>
        <function-ref name="sendAdded" scoped="" ref="0x7e3fb0f0"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7e3fb1d0"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7e3fb2b0"/>
        <function-ref name="packet" scoped="" ref="0x7e3fb390"/>
        <function-ref name="sendDone" scoped="" ref="0x7e3fb470"/>
        <function-ref name="drop" scoped="" ref="0x7e3fb550"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7e3fb630"/>
        <function-ref name="waitList" scoped="" ref="0x7e3fb710"/>
        <function-ref name="setUpperType" scoped="" ref="0x7e3fb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequestInCache" ref="0x7e3f4578" loc="108:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestInCache" scoped="" ref="0x7e3f4578"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7e7f75c0"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7e7f78e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e3f35c8"/>
        <function-ref name="evicted" scoped="" ref="0x7e3f3068"/>
        <function-ref name="insert" scoped="" ref="0x7e3f4d80"/>
        <function-ref name="flush" scoped="" ref="0x7e3f3868"/>
        <function-ref name="lookup" scoped="" ref="0x7e3f3308"/>
        <function-ref name="size" scoped="" ref="0x7e3f4ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketEngine" ref="0x7e3fb9d0" loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketEngine" scoped="" ref="0x7e3fb9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e3fbba8"/>
        <function-ref name="send" scoped="" ref="0x7e3fbc88"/>
        <function-ref name="receive" scoped="" ref="0x7e3fbd68"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7e3fbe48"/>
        <function-ref name="sendAdded" scoped="" ref="0x7e3fbf28"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7e3fa018"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7e3fa0f8"/>
        <function-ref name="packet" scoped="" ref="0x7e3fa1d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e3fa2b8"/>
        <function-ref name="drop" scoped="" ref="0x7e3fa398"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7e3fa478"/>
        <function-ref name="waitList" scoped="" ref="0x7e3fa558"/>
        <function-ref name="setUpperType" scoped="" ref="0x7e3fa638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7e3ea808" loc="121:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e3ea808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e3ea9e0"/>
        <function-ref name="rand32" scoped="" ref="0x7e3eaac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequest" ref="0x7e400718" loc="93:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequest" scoped="" ref="0x7e400718"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e4008f0"/>
        <function-ref name="remove" scoped="" ref="0x7e4009d0"/>
        <function-ref name="length" scoped="" ref="0x7e400ab0"/>
        <function-ref name="setLength" scoped="" ref="0x7e400b90"/>
        <function-ref name="add" scoped="" ref="0x7e400c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7e3ea170" loc="119:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e3ea170"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e3ea348"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3ea428"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3ea508"/>
        <function-ref name="cancel" scoped="" ref="0x7e3ea5e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e3ea6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="composePkt" ref="0x7e3eac40" loc="146:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="composePkt" scoped="" ref="0x7e3eac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e3eae18"/>
        <function-ref name="runTask" scoped="" ref="0x7e3eaef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ComposePacket" ref="0x7e3ec6b0" loc="115:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ComposePacket" scoped="" ref="0x7e3ec6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e3ec888"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e3ec968"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3eca48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3ecb28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e3ecc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrHeader" ref="0x7e400220" loc="92:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrHeader" scoped="" ref="0x7e400220"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlockPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e4003f8"/>
        <function-ref name="length" scoped="" ref="0x7e4004d8"/>
        <function-ref name="add" scoped="" ref="0x7e4005b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SourceRoute" ref="0x7e3fc488" loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceRoute" scoped="" ref="0x7e3fc488"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e3fc660"/>
        <function-ref name="remove" scoped="" ref="0x7e3fc740"/>
        <function-ref name="length" scoped="" ref="0x7e3fc820"/>
        <function-ref name="setLength" scoped="" ref="0x7e3fc900"/>
        <function-ref name="add" scoped="" ref="0x7e3fc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketEngine" ref="0x7e3fa818" loc="100:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketEngine" scoped="" ref="0x7e3fa818"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e3fa9f0"/>
        <function-ref name="send" scoped="" ref="0x7e3faad0"/>
        <function-ref name="receive" scoped="" ref="0x7e3fabb0"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7e3fac90"/>
        <function-ref name="sendAdded" scoped="" ref="0x7e3fad70"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7e3fae50"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7e3f9010"/>
        <function-ref name="packet" scoped="" ref="0x7e3f90f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e3f91d0"/>
        <function-ref name="drop" scoped="" ref="0x7e3f92b0"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7e3f9390"/>
        <function-ref name="waitList" scoped="" ref="0x7e3f9470"/>
        <function-ref name="setUpperType" scoped="" ref="0x7e3f9550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketWaitList" ref="0x7e3f8370" loc="102:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7e3f8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e3f8c98"/>
        <function-ref name="next" scoped="" ref="0x7e3f8a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SalvageRouteCache" ref="0x7e3f5250" loc="106:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SalvageRouteCache" scoped="" ref="0x7e3f5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7e3f5428"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7e3f5508"/>
        <function-ref name="addPath" scoped="" ref="0x7e3f55e8"/>
        <function-ref name="trackRoute" scoped="" ref="0x7e3f56c8"/>
        <function-ref name="checkRoute" scoped="" ref="0x7e3f57a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compose" ref="0x7e3ecd68" loc="117:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compose" scoped="" ref="0x7e3ecd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7e3eb050"/>
        <function-ref name="clear" scoped="" ref="0x7e3eb130"/>
        <function-ref name="toggle" scoped="" ref="0x7e3eb210"/>
        <function-ref name="get" scoped="" ref="0x7e3eb2f0"/>
        <function-ref name="assign" scoped="" ref="0x7e3eb3d0"/>
        <function-ref name="setAll" scoped="" ref="0x7e3eb4b0"/>
        <function-ref name="set" scoped="" ref="0x7e3eb590"/>
        <function-ref name="size" scoped="" ref="0x7e3eb670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteError" ref="0x7e400dd0" loc="94:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteError" scoped="" ref="0x7e400dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e3fd010"/>
        <function-ref name="list" scoped="" ref="0x7e3fd0f0"/>
        <function-ref name="remove" scoped="" ref="0x7e3fd1d0"/>
        <function-ref name="length" scoped="" ref="0x7e3fd2b0"/>
        <function-ref name="setLength" scoped="" ref="0x7e3fd390"/>
        <function-ref name="add" scoped="" ref="0x7e3fd470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteNodeList" ref="0x7e3f5998" loc="107:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteNodeList" scoped="" ref="0x7e3f5998"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e3f4290"/>
        <function-ref name="next" scoped="" ref="0x7e3f4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteCache" ref="0x7e3f6af0" loc="105:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7e3f6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7e3f6cc8"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7e3f6da8"/>
        <function-ref name="addPath" scoped="" ref="0x7e3f6e88"/>
        <function-ref name="trackRoute" scoped="" ref="0x7e3f5010"/>
        <function-ref name="checkRoute" scoped="" ref="0x7e3f50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketWaitList" ref="0x7e3f6010" loc="103:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7e3f6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e3f68b8"/>
        <function-ref name="next" scoped="" ref="0x7e3f6638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Salvage" ref="0x7e3eb7d0" loc="118:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Salvage" scoped="" ref="0x7e3eb7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7e3eb9a8"/>
        <function-ref name="clear" scoped="" ref="0x7e3eba88"/>
        <function-ref name="toggle" scoped="" ref="0x7e3ebb68"/>
        <function-ref name="get" scoped="" ref="0x7e3ebc48"/>
        <function-ref name="assign" scoped="" ref="0x7e3ebd28"/>
        <function-ref name="setAll" scoped="" ref="0x7e3ebe08"/>
        <function-ref name="set" scoped="" ref="0x7e3ebee8"/>
        <function-ref name="size" scoped="" ref="0x7e3ea010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteRequestOutEqual" ref="0x7e402588" loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestOutEqual" scoped="" ref="0x7e402588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7e7f8ce0"/>
              <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7e7f7058"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e402bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e3ed9e8" loc="114:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e3ed9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e3edbc0"/>
        <function-ref name="source" scoped="" ref="0x7e3edca0"/>
        <function-ref name="address" scoped="" ref="0x7e3edd80"/>
        <function-ref name="destination" scoped="" ref="0x7e3ede60"/>
        <function-ref name="setSource" scoped="" ref="0x7e3ec010"/>
        <function-ref name="setDestination" scoped="" ref="0x7e3ec0f0"/>
        <function-ref name="type" scoped="" ref="0x7e3ec1d0"/>
        <function-ref name="setType" scoped="" ref="0x7e3ec2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7e3ec390"/>
        <function-ref name="setGroup" scoped="" ref="0x7e3ec470"/>
        <function-ref name="localGroup" scoped="" ref="0x7e3ec550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Acks" ref="0x7e3eee30" loc="112:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7e3eee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e3ed050"/>
        <function-ref name="noAck" scoped="" ref="0x7e3ed130"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e3ed210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteCache" ref="0x7e3e49b8" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7e3e49b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7e3e4b90"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7e3e4c70"/>
        <function-ref name="addPath" scoped="" ref="0x7e3e4d50"/>
        <function-ref name="trackRoute" scoped="" ref="0x7e3e4e30"/>
        <function-ref name="checkRoute" scoped="" ref="0x7e3e4f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteNodeList" ref="0x7e3e3120" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteNodeList" scoped="" ref="0x7e3e3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e3e39c8"/>
        <function-ref name="next" scoped="" ref="0x7e3e3748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteCache" ref="0x7d55a298" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7d55a298"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7d55a470"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7d55a550"/>
        <function-ref name="addPath" scoped="" ref="0x7d55a630"/>
        <function-ref name="trackRoute" scoped="" ref="0x7d55a710"/>
        <function-ref name="checkRoute" scoped="" ref="0x7d55a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteNodeList" ref="0x7d55a9e0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteNodeList" scoped="" ref="0x7d55a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d5592c8"/>
        <function-ref name="next" scoped="" ref="0x7d559048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Initial" ref="0x7e3d09a0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Initial" scoped="" ref="0x7e3d09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7e3d0b78"/>
        <function-ref name="clear" scoped="" ref="0x7e3d0c58"/>
        <function-ref name="toggle" scoped="" ref="0x7e3d0d38"/>
        <function-ref name="get" scoped="" ref="0x7e3d0e18"/>
        <function-ref name="assign" scoped="" ref="0x7e3d0ef8"/>
        <function-ref name="setAll" scoped="" ref="0x7e3ce010"/>
        <function-ref name="set" scoped="" ref="0x7e3ce0f0"/>
        <function-ref name="size" scoped="" ref="0x7e3ce1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7e3d2cd0" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7e3d2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7e3d2ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Graph" ref="0x7e3c2050" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7e3c2050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7e3c2228"/>
        <function-ref name="removed" scoped="" ref="0x7e3c2308"/>
        <function-ref name="remove" scoped="" ref="0x7e3c23e8"/>
        <function-ref name="edge" scoped="" ref="0x7e3c24c8"/>
        <function-ref name="directed" scoped="" ref="0x7e3c25a8"/>
        <function-ref name="vertices" scoped="" ref="0x7e3c2688"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7e3c2768"/>
        <function-ref name="maxVertices" scoped="" ref="0x7e3c2848"/>
        <function-ref name="insert" scoped="" ref="0x7e3c2928"/>
        <function-ref name="inserted" scoped="" ref="0x7e3c2a08"/>
        <function-ref name="edgeList" scoped="" ref="0x7e3c2ae8"/>
        <function-ref name="edges" scoped="" ref="0x7e3c2bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SourceShortestPath" ref="0x7e3baa30" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7e3baa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7e3bac08"/>
        <function-ref name="buildTree" scoped="" ref="0x7e3bace8"/>
        <function-ref name="builtTree" scoped="" ref="0x7e3badc8"/>
        <function-ref name="buildingTree" scoped="" ref="0x7e3baea8"/>
        <function-ref name="edgeCount" scoped="" ref="0x7e3c1010"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7e3c10f0"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7e3c11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteCache" ref="0x7e3d2600" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7e3d2600"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7e3d27d8"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7e3d28b8"/>
        <function-ref name="addPath" scoped="" ref="0x7e3d2998"/>
        <function-ref name="trackRoute" scoped="" ref="0x7e3d2a78"/>
        <function-ref name="checkRoute" scoped="" ref="0x7e3d2b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Track" ref="0x7e3d0030" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Track" scoped="" ref="0x7e3d0030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7e3d0208"/>
        <function-ref name="clear" scoped="" ref="0x7e3d02e8"/>
        <function-ref name="toggle" scoped="" ref="0x7e3d03c8"/>
        <function-ref name="get" scoped="" ref="0x7e3d04a8"/>
        <function-ref name="assign" scoped="" ref="0x7e3d0588"/>
        <function-ref name="setAll" scoped="" ref="0x7e3d0668"/>
        <function-ref name="set" scoped="" ref="0x7e3d0748"/>
        <function-ref name="size" scoped="" ref="0x7e3d0828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e3ce320" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e3ce320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e3ce4f8"/>
        <function-ref name="source" scoped="" ref="0x7e3ce5d8"/>
        <function-ref name="address" scoped="" ref="0x7e3ce6b8"/>
        <function-ref name="destination" scoped="" ref="0x7e3ce798"/>
        <function-ref name="setSource" scoped="" ref="0x7e3ce878"/>
        <function-ref name="setDestination" scoped="" ref="0x7e3ce958"/>
        <function-ref name="type" scoped="" ref="0x7e3cea38"/>
        <function-ref name="setType" scoped="" ref="0x7e3ceb18"/>
        <function-ref name="isForMe" scoped="" ref="0x7e3cebf8"/>
        <function-ref name="setGroup" scoped="" ref="0x7e3cecd8"/>
        <function-ref name="localGroup" scoped="" ref="0x7e3cedb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Graph" ref="0x7d558e28" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d558e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d557050"/>
        <function-ref name="removed" scoped="" ref="0x7d557130"/>
        <function-ref name="remove" scoped="" ref="0x7d557210"/>
        <function-ref name="edge" scoped="" ref="0x7d5572f0"/>
        <function-ref name="directed" scoped="" ref="0x7d5573d0"/>
        <function-ref name="vertices" scoped="" ref="0x7d5574b0"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d557590"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d557670"/>
        <function-ref name="insert" scoped="" ref="0x7d557750"/>
        <function-ref name="inserted" scoped="" ref="0x7d557830"/>
        <function-ref name="edgeList" scoped="" ref="0x7d557910"/>
        <function-ref name="edges" scoped="" ref="0x7d5579f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PathEdgeList" ref="0x7d5544a0" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathEdgeList" scoped="" ref="0x7d5544a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d554d48"/>
        <function-ref name="next" scoped="" ref="0x7d554ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceShortestPath" ref="0x7d556af0" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7d556af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7d556cc8"/>
        <function-ref name="buildTree" scoped="" ref="0x7d556da8"/>
        <function-ref name="builtTree" scoped="" ref="0x7d556e88"/>
        <function-ref name="buildingTree" scoped="" ref="0x7d554010"/>
        <function-ref name="edgeCount" scoped="" ref="0x7d5540f0"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7d5541d0"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7d5542b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdge" ref="0x7d557b30" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d557b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d557d08"/>
        <function-ref name="dest" scoped="" ref="0x7d557de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeList" ref="0x7d556010" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d556010"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d5568b8"/>
        <function-ref name="next" scoped="" ref="0x7d556638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeWeight" ref="0x7d553058" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d553058"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7e3d9200"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7d553680"/>
        <function-ref name="weightChanged" scoped="" ref="0x7d553e00"/>
        <function-ref name="setWeight" scoped="" ref="0x7d553ae0"/>
        <function-ref name="weight" scoped="" ref="0x7d553860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Graph" ref="0x7d5477d0" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d5477d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d5479a8"/>
        <function-ref name="removed" scoped="" ref="0x7d547a88"/>
        <function-ref name="remove" scoped="" ref="0x7d547b68"/>
        <function-ref name="edge" scoped="" ref="0x7d547c48"/>
        <function-ref name="directed" scoped="" ref="0x7d547d28"/>
        <function-ref name="vertices" scoped="" ref="0x7d547e08"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d547ee8"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d546010"/>
        <function-ref name="insert" scoped="" ref="0x7d5460f0"/>
        <function-ref name="inserted" scoped="" ref="0x7d5461d0"/>
        <function-ref name="edgeList" scoped="" ref="0x7d5462b0"/>
        <function-ref name="edges" scoped="" ref="0x7d546390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdge" ref="0x7d5464d0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d5464d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d5466a8"/>
        <function-ref name="dest" scoped="" ref="0x7d546788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeList" ref="0x7d546978" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d546978"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d545290"/>
        <function-ref name="next" scoped="" ref="0x7d545010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IndexedAlloc" ref="0x7d52f820" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7d52f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7d52d010"/>
        <function-ref name="allocated" scoped="" ref="0x7d52fad8"/>
        <function-ref name="maxSize" scoped="" ref="0x7d52fbb8"/>
        <function-ref name="alloc" scoped="" ref="0x7d52fc98"/>
        <function-ref name="none" scoped="" ref="0x7d52fd78"/>
        <function-ref name="free" scoped="" ref="0x7d52fe58"/>
        <function-ref name="size" scoped="" ref="0x7d52f9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IndexedAlloc" ref="0x7d526440" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7d526440"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7d526b58"/>
        <function-ref name="allocated" scoped="" ref="0x7d5266f8"/>
        <function-ref name="maxSize" scoped="" ref="0x7d5267d8"/>
        <function-ref name="alloc" scoped="" ref="0x7d5268b8"/>
        <function-ref name="none" scoped="" ref="0x7d526998"/>
        <function-ref name="free" scoped="" ref="0x7d526a78"/>
        <function-ref name="size" scoped="" ref="0x7d526618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d524010" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d524010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d5241e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7d524348" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7d524348"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7d524520"/>
        <function-ref name="clear" scoped="" ref="0x7d524600"/>
        <function-ref name="toggle" scoped="" ref="0x7d5246e0"/>
        <function-ref name="get" scoped="" ref="0x7d5247c0"/>
        <function-ref name="assign" scoped="" ref="0x7d5248a0"/>
        <function-ref name="setAll" scoped="" ref="0x7d524980"/>
        <function-ref name="set" scoped="" ref="0x7d524a60"/>
        <function-ref name="size" scoped="" ref="0x7d524b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7d522070" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7d522070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7d522248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IndexedAlloc" ref="0x7d5237b0" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7d5237b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7d523ec8"/>
        <function-ref name="allocated" scoped="" ref="0x7d523a68"/>
        <function-ref name="maxSize" scoped="" ref="0x7d523b48"/>
        <function-ref name="alloc" scoped="" ref="0x7d523c28"/>
        <function-ref name="none" scoped="" ref="0x7d523d08"/>
        <function-ref name="free" scoped="" ref="0x7d523de8"/>
        <function-ref name="size" scoped="" ref="0x7d523988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BitVector" ref="0x7d522388" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7d522388"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7d522560"/>
        <function-ref name="clear" scoped="" ref="0x7d522640"/>
        <function-ref name="toggle" scoped="" ref="0x7d522720"/>
        <function-ref name="get" scoped="" ref="0x7d522800"/>
        <function-ref name="assign" scoped="" ref="0x7d5228e0"/>
        <function-ref name="setAll" scoped="" ref="0x7d5229c0"/>
        <function-ref name="set" scoped="" ref="0x7d522aa0"/>
        <function-ref name="size" scoped="" ref="0x7d522b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Graph" ref="0x7d52c200" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d52c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d52c3d8"/>
        <function-ref name="removed" scoped="" ref="0x7d52c4b8"/>
        <function-ref name="remove" scoped="" ref="0x7d52c598"/>
        <function-ref name="edge" scoped="" ref="0x7d52c678"/>
        <function-ref name="directed" scoped="" ref="0x7d52c758"/>
        <function-ref name="vertices" scoped="" ref="0x7d52c838"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d52c918"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d52c9f8"/>
        <function-ref name="insert" scoped="" ref="0x7d52cad8"/>
        <function-ref name="inserted" scoped="" ref="0x7d52cbb8"/>
        <function-ref name="edgeList" scoped="" ref="0x7d52cc98"/>
        <function-ref name="edges" scoped="" ref="0x7d52cd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d52ded0" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d52ded0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d52c0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IndexedAlloc" ref="0x7d52be90" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7d52be90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7d52a5c0"/>
        <function-ref name="allocated" scoped="" ref="0x7d52a160"/>
        <function-ref name="maxSize" scoped="" ref="0x7d52a240"/>
        <function-ref name="alloc" scoped="" ref="0x7d52a320"/>
        <function-ref name="none" scoped="" ref="0x7d52a400"/>
        <function-ref name="free" scoped="" ref="0x7d52a4e0"/>
        <function-ref name="size" scoped="" ref="0x7d52a080"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdge" ref="0x7d52ceb8" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d52ceb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d52b0c0"/>
        <function-ref name="dest" scoped="" ref="0x7d52b1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeList" ref="0x7d52b390" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d52b390"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d52bc38"/>
        <function-ref name="next" scoped="" ref="0x7d52b9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Graph" ref="0x7d5437b0" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d5437b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d543988"/>
        <function-ref name="removed" scoped="" ref="0x7d543a68"/>
        <function-ref name="remove" scoped="" ref="0x7d543b48"/>
        <function-ref name="edge" scoped="" ref="0x7d543c28"/>
        <function-ref name="directed" scoped="" ref="0x7d543d08"/>
        <function-ref name="vertices" scoped="" ref="0x7d543de8"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d543ec8"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d542010"/>
        <function-ref name="insert" scoped="" ref="0x7d5420f0"/>
        <function-ref name="inserted" scoped="" ref="0x7d5421d0"/>
        <function-ref name="edgeList" scoped="" ref="0x7d5422b0"/>
        <function-ref name="edges" scoped="" ref="0x7d542390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PathEdgeList" ref="0x7d544c88" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathEdgeList" scoped="" ref="0x7d544c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d543548"/>
        <function-ref name="next" scoped="" ref="0x7d5432c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceShortestPath" ref="0x7d544380" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7d544380"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7d544558"/>
        <function-ref name="buildTree" scoped="" ref="0x7d544638"/>
        <function-ref name="builtTree" scoped="" ref="0x7d544718"/>
        <function-ref name="buildingTree" scoped="" ref="0x7d5447f8"/>
        <function-ref name="edgeCount" scoped="" ref="0x7d5448d8"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7d5449b8"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7d544a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdge" ref="0x7d5424d0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d5424d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d5426a8"/>
        <function-ref name="dest" scoped="" ref="0x7d542788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeWeight" ref="0x7d542958" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d542958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7e3d9200"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7d540010"/>
        <function-ref name="weightChanged" scoped="" ref="0x7d540790"/>
        <function-ref name="setWeight" scoped="" ref="0x7d540470"/>
        <function-ref name="weight" scoped="" ref="0x7d5401f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeList" ref="0x7d540a78" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d540a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d533338"/>
        <function-ref name="next" scoped="" ref="0x7d5330b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PriorityQueue" ref="0x7d4faba0" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PriorityQueue" scoped="" ref="0x7d4faba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PriorityQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d4fad78"/>
        <function-ref name="findBest" scoped="" ref="0x7d4fae58"/>
        <function-ref name="maxSize" scoped="" ref="0x7d4f8010"/>
        <function-ref name="insert" scoped="" ref="0x7d4f80f0"/>
        <function-ref name="moveUp" scoped="" ref="0x7d4f81d0"/>
        <function-ref name="move" scoped="" ref="0x7d4f82b0"/>
        <function-ref name="inserted" scoped="" ref="0x7d4f8390"/>
        <function-ref name="moveDown" scoped="" ref="0x7d4f8470"/>
        <function-ref name="empty" scoped="" ref="0x7d4f8550"/>
        <function-ref name="removeBest" scoped="" ref="0x7d4f8630"/>
        <function-ref name="size" scoped="" ref="0x7d4f8710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7d4f8900" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d4f8900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d4f8f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d4ea760" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d4ea760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d4ea938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PriorityQueue" ref="0x7d4eaa78" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PriorityQueue" scoped="" ref="0x7d4eaa78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PriorityQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d4eac50"/>
        <function-ref name="findBest" scoped="" ref="0x7d4ead30"/>
        <function-ref name="maxSize" scoped="" ref="0x7d4eae10"/>
        <function-ref name="insert" scoped="" ref="0x7d4eaef0"/>
        <function-ref name="moveUp" scoped="" ref="0x7d4e8010"/>
        <function-ref name="move" scoped="" ref="0x7d4e80f0"/>
        <function-ref name="inserted" scoped="" ref="0x7d4e81d0"/>
        <function-ref name="moveDown" scoped="" ref="0x7d4e82b0"/>
        <function-ref name="empty" scoped="" ref="0x7d4e8390"/>
        <function-ref name="removeBest" scoped="" ref="0x7d4e8470"/>
        <function-ref name="size" scoped="" ref="0x7d4e8550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7d4e8740" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d4e8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d4e8d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeList" ref="0x7d4f1e58" loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d4f1e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d4ef738"/>
        <function-ref name="next" scoped="" ref="0x7d4ef4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="buildTreeTask" ref="0x7d4ef9b0" loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="buildTreeTask" scoped="" ref="0x7d4ef9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d4efb88"/>
        <function-ref name="runTask" scoped="" ref="0x7d4efc68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Graph" ref="0x7d4f3c48" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d4f3c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d4f3e20"/>
        <function-ref name="removed" scoped="" ref="0x7d4f3f00"/>
        <function-ref name="remove" scoped="" ref="0x7d4f2010"/>
        <function-ref name="edge" scoped="" ref="0x7d4f20f0"/>
        <function-ref name="directed" scoped="" ref="0x7d4f21d0"/>
        <function-ref name="vertices" scoped="" ref="0x7d4f22b0"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d4f2390"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d4f2470"/>
        <function-ref name="insert" scoped="" ref="0x7d4f2550"/>
        <function-ref name="inserted" scoped="" ref="0x7d4f2630"/>
        <function-ref name="edgeList" scoped="" ref="0x7d4f2710"/>
        <function-ref name="edges" scoped="" ref="0x7d4f27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PathEdgeList" ref="0x7d4f5b28" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathEdgeList" scoped="" ref="0x7d4f5b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d4f4460"/>
        <function-ref name="next" scoped="" ref="0x7d4f41e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d4f7ef0" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d4f7ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d4f50e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceShortestPath" ref="0x7d4f5220" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7d4f5220"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7d4f53f8"/>
        <function-ref name="buildTree" scoped="" ref="0x7d4f54d8"/>
        <function-ref name="builtTree" scoped="" ref="0x7d4f55b8"/>
        <function-ref name="buildingTree" scoped="" ref="0x7d4f5698"/>
        <function-ref name="edgeCount" scoped="" ref="0x7d4f5778"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7d4f5858"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7d4f5938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdge" ref="0x7d4f2930" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d4f2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d4f2b08"/>
        <function-ref name="dest" scoped="" ref="0x7d4f2be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PriorityQueue" ref="0x7d4f3070" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PriorityQueue" scoped="" ref="0x7d4f3070"/></type-interface>
      <instance>
        <interfacedef-ref qname="PriorityQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d4f3248"/>
        <function-ref name="findBest" scoped="" ref="0x7d4f3328"/>
        <function-ref name="maxSize" scoped="" ref="0x7d4f3408"/>
        <function-ref name="insert" scoped="" ref="0x7d4f34e8"/>
        <function-ref name="moveUp" scoped="" ref="0x7d4f35c8"/>
        <function-ref name="move" scoped="" ref="0x7d4f36a8"/>
        <function-ref name="inserted" scoped="" ref="0x7d4f3788"/>
        <function-ref name="moveDown" scoped="" ref="0x7d4f3868"/>
        <function-ref name="empty" scoped="" ref="0x7d4f3948"/>
        <function-ref name="removeBest" scoped="" ref="0x7d4f3a28"/>
        <function-ref name="size" scoped="" ref="0x7d4f3b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7d4f4728" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d4f4728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d4f4d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeWeight" ref="0x7d4f2db8" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d4f2db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7e3d9200"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7d4f13f0"/>
        <function-ref name="weightChanged" scoped="" ref="0x7d4f1b70"/>
        <function-ref name="setWeight" scoped="" ref="0x7d4f1850"/>
        <function-ref name="weight" scoped="" ref="0x7d4f15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d5511e8" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.TrackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d5511e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d5513c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7d551520" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.TrackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7d551520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7d5516f8"/>
        <function-ref name="clear" scoped="" ref="0x7d5517d8"/>
        <function-ref name="toggle" scoped="" ref="0x7d5518b8"/>
        <function-ref name="get" scoped="" ref="0x7d551998"/>
        <function-ref name="assign" scoped="" ref="0x7d551a78"/>
        <function-ref name="setAll" scoped="" ref="0x7d551b58"/>
        <function-ref name="set" scoped="" ref="0x7d551c38"/>
        <function-ref name="size" scoped="" ref="0x7d551d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d5509f8" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d5509f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d550bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7d550d30" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7d550d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7d550f08"/>
        <function-ref name="clear" scoped="" ref="0x7d54f010"/>
        <function-ref name="toggle" scoped="" ref="0x7d54f0f0"/>
        <function-ref name="get" scoped="" ref="0x7d54f1d0"/>
        <function-ref name="assign" scoped="" ref="0x7d54f2b0"/>
        <function-ref name="setAll" scoped="" ref="0x7d54f390"/>
        <function-ref name="set" scoped="" ref="0x7d54f470"/>
        <function-ref name="size" scoped="" ref="0x7d54f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeWeight" ref="0x7e264e18" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeUnitWeightC.nc">
      <component-ref qname="GraphEdgeUnitWeightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7e264e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7e3d9200"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7e263468"/>
        <function-ref name="weightChanged" scoped="" ref="0x7e263be8"/>
        <function-ref name="setWeight" scoped="" ref="0x7e2638c8"/>
        <function-ref name="weight" scoped="" ref="0x7e263648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e249ce8" loc="49:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e249ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e249ec0"/>
        <function-ref name="stopDone" scoped="" ref="0x7e24c010"/>
        <function-ref name="start" scoped="" ref="0x7e24c0f0"/>
        <function-ref name="stop" scoped="" ref="0x7e24c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e24c5a8" loc="51:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e24c5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e24c780"/>
        <function-ref name="getPayload" scoped="" ref="0x7e24c860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e24c940"/>
        <function-ref name="cancel" scoped="" ref="0x7e24ca20"/>
        <function-ref name="sendDone" scoped="" ref="0x7e24cb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e24b680" loc="53:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e24b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e24b858"/>
        <function-ref name="receive" scoped="" ref="0x7e24b938"/>
        <function-ref name="getPayload" scoped="" ref="0x7e24ba18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e24bb60" loc="55:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e24bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e24bd38"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e24be18"/>
        <function-ref name="getPayload" scoped="" ref="0x7e24bef8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e247010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e2470f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e24ced8" loc="52:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e24ced8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e24b0c0"/>
        <function-ref name="receive" scoped="" ref="0x7e24b1a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e24b280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e247e30" loc="57:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e247e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e246050"/>
        <function-ref name="noAck" scoped="" ref="0x7e246130"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e246210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e247240" loc="56:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e247240"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e247418"/>
        <function-ref name="source" scoped="" ref="0x7e2474f8"/>
        <function-ref name="address" scoped="" ref="0x7e2475d8"/>
        <function-ref name="destination" scoped="" ref="0x7e2476b8"/>
        <function-ref name="setSource" scoped="" ref="0x7e247798"/>
        <function-ref name="setDestination" scoped="" ref="0x7e247878"/>
        <function-ref name="type" scoped="" ref="0x7e247958"/>
        <function-ref name="setType" scoped="" ref="0x7e247a38"/>
        <function-ref name="isForMe" scoped="" ref="0x7e247b18"/>
        <function-ref name="setGroup" scoped="" ref="0x7e247bf8"/>
        <function-ref name="localGroup" scoped="" ref="0x7e247cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e242c60" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e242c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e242e38"/>
        <function-ref name="stopDone" scoped="" ref="0x7e242f18"/>
        <function-ref name="start" scoped="" ref="0x7e241010"/>
        <function-ref name="stop" scoped="" ref="0x7e2410f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e2238f0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e2238f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e223ac8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e223ba8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e223c88"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e223d68"/>
        <function-ref name="setCca" scoped="" ref="0x7e223e48"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e223f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e2414c8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e2414c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e2416a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e241780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e241860"/>
        <function-ref name="cancel" scoped="" ref="0x7e241940"/>
        <function-ref name="sendDone" scoped="" ref="0x7e241a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e2305d0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e2305d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e2307a8"/>
        <function-ref name="receive" scoped="" ref="0x7e230888"/>
        <function-ref name="getPayload" scoped="" ref="0x7e230968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e22f778" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e22f778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e22f950"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e22fa30"/>
        <function-ref name="getPayload" scoped="" ref="0x7e22fb10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e22fbf0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e22fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7e229768" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e229768"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e229940"/>
        <function-ref name="getRssi" scoped="" ref="0x7e229a20"/>
        <function-ref name="getPower" scoped="" ref="0x7e229b00"/>
        <function-ref name="getLqi" scoped="" ref="0x7e229be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7e20db98" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7e20db98"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x7e20dd70"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x7e20de50"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x7e222010"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x7e2220f0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x7e2221d0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x7e2222b0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x7e222390"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x7e222470"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x7e222550"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x7e222630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e241df8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e241df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e230010"/>
        <function-ref name="receive" scoped="" ref="0x7e2300f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e2301d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e229d38" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e229d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e229f10"/>
        <function-ref name="noAck" scoped="" ref="0x7e22c010"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e22c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7e2070b0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7e2070b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7e207288"/>
        <function-ref name="setRetries" scoped="" ref="0x7e207368"/>
        <function-ref name="getRetries" scoped="" ref="0x7e207448"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7e207528"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7e207608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e230ab8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e230ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e230c90"/>
        <function-ref name="source" scoped="" ref="0x7e230d70"/>
        <function-ref name="address" scoped="" ref="0x7e230e50"/>
        <function-ref name="destination" scoped="" ref="0x7e22f010"/>
        <function-ref name="setSource" scoped="" ref="0x7e22f0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e22f1d0"/>
        <function-ref name="type" scoped="" ref="0x7e22f2b0"/>
        <function-ref name="setType" scoped="" ref="0x7e22f390"/>
        <function-ref name="isForMe" scoped="" ref="0x7e22f470"/>
        <function-ref name="setGroup" scoped="" ref="0x7e22f550"/>
        <function-ref name="localGroup" scoped="" ref="0x7e22f630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7e1f0010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7e1f0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e1f01e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e1f02c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e1f03a8"/>
        <function-ref name="cancel" scoped="" ref="0x7e1f0488"/>
        <function-ref name="sendDone" scoped="" ref="0x7e1f0568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7e1f06e0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7e1f06e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e1f08b8"/>
        <function-ref name="receive" scoped="" ref="0x7e1f0998"/>
        <function-ref name="getPayload" scoped="" ref="0x7e1f0a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7e1e03f0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e1e03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e1e05c8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e1e06a8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e1e0788"/>
        <function-ref name="syncDone" scoped="" ref="0x7e1e0868"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e1e0948"/>
        <function-ref name="setChannel" scoped="" ref="0x7e1e0a28"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e1e0b08"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e1e0be8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e1e0cc8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e1e0da8"/>
        <function-ref name="sync" scoped="" ref="0x7e1e0e88"/>
        <function-ref name="getChannel" scoped="" ref="0x7e1e6010"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e1e60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e205dd0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e205dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e204010"/>
        <function-ref name="getPayload" scoped="" ref="0x7e2040f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e2041d0"/>
        <function-ref name="cancel" scoped="" ref="0x7e2042b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e204390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e204f00" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e204f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e2020f0"/>
        <function-ref name="receive" scoped="" ref="0x7e2021d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e2022b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e201010" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e201010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e2011e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e2012c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e2013a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e201488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e201568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7e1f0bc8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e1f0bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e1f0da0"/>
        <function-ref name="getRssi" scoped="" ref="0x7e1f0e80"/>
        <function-ref name="getPower" scoped="" ref="0x7e1ef010"/>
        <function-ref name="getLqi" scoped="" ref="0x7e1ef0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7e1e79c0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e1e79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7e1e7b98"/>
        <function-ref name="getMetadata" scoped="" ref="0x7e1e7c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e204768" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e204768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e204940"/>
        <function-ref name="receive" scoped="" ref="0x7e204a20"/>
        <function-ref name="getPayload" scoped="" ref="0x7e204b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7e1d1010" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e1d1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7e1d11e8"/>
        <function-ref name="changed" scoped="" ref="0x7e1d12c8"/>
        <function-ref name="amGroup" scoped="" ref="0x7e1d13a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7e1d1488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e202400" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e202400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e2025d8"/>
        <function-ref name="source" scoped="" ref="0x7e2026b8"/>
        <function-ref name="address" scoped="" ref="0x7e202798"/>
        <function-ref name="destination" scoped="" ref="0x7e202878"/>
        <function-ref name="setSource" scoped="" ref="0x7e202958"/>
        <function-ref name="setDestination" scoped="" ref="0x7e202a38"/>
        <function-ref name="type" scoped="" ref="0x7e202b18"/>
        <function-ref name="setType" scoped="" ref="0x7e202bf8"/>
        <function-ref name="isForMe" scoped="" ref="0x7e202cd8"/>
        <function-ref name="setGroup" scoped="" ref="0x7e202db8"/>
        <function-ref name="localGroup" scoped="" ref="0x7e202e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e1830c8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e1830c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e1832a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7e183380"/>
        <function-ref name="start" scoped="" ref="0x7e183460"/>
        <function-ref name="stop" scoped="" ref="0x7e183540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e1825d0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e1825d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e1827a8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e182888"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e182968"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e182a48"/>
        <function-ref name="setCca" scoped="" ref="0x7e182b28"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e182c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e1836a8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e1836a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e183880"/>
        <function-ref name="getPayload" scoped="" ref="0x7e183960"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e183a40"/>
        <function-ref name="cancel" scoped="" ref="0x7e183b20"/>
        <function-ref name="sendDone" scoped="" ref="0x7e183c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e183d68" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e183d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e182010"/>
        <function-ref name="receive" scoped="" ref="0x7e1820f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e1821d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e180b20" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e180b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e180cf8"/>
        <function-ref name="stopDone" scoped="" ref="0x7e180dd8"/>
        <function-ref name="start" scoped="" ref="0x7e180eb8"/>
        <function-ref name="stop" scoped="" ref="0x7e16e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e16ead0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e16ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e16eca8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e16ed88"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e16ee68"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e16d010"/>
        <function-ref name="setCca" scoped="" ref="0x7e16d0f0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e16d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7e162290" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7e162290"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e162468"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e162548"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e162628"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e162708"/>
        <function-ref name="setCca" scoped="" ref="0x7e1627e8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e1628c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7e14da40" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e14da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e14dc18"/>
        <function-ref name="getRssi" scoped="" ref="0x7e14dcf8"/>
        <function-ref name="getPower" scoped="" ref="0x7e14ddd8"/>
        <function-ref name="getLqi" scoped="" ref="0x7e14deb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7e150b18" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7e150b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e150cf0"/>
        <function-ref name="cancel" scoped="" ref="0x7e150dd0"/>
        <function-ref name="modify" scoped="" ref="0x7e150eb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e162010"/>
        <function-ref name="resend" scoped="" ref="0x7e1620f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e16e178" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e16e178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e16e350"/>
        <function-ref name="getPayload" scoped="" ref="0x7e16e430"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e16e510"/>
        <function-ref name="cancel" scoped="" ref="0x7e16e5f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e16e6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7e162a30" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e162a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e162c08"/>
        <function-ref name="rand32" scoped="" ref="0x7e162ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7e167450" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7e167450"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e167628"/>
        <function-ref name="stop" scoped="" ref="0x7e167708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7e14c060" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e14c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7e14c2b8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7e14c398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7e163a80" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e163a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e163c58"/>
        <function-ref name="rfOff" scoped="" ref="0x7e163d38"/>
        <function-ref name="rxOn" scoped="" ref="0x7e163e18"/>
        <function-ref name="startVReg" scoped="" ref="0x7e163ef8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e167010"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e1670f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e1671d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e1672b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e146da8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e146da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e14d010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e14d0f0"/>
        <function-ref name="led1On" scoped="" ref="0x7e14d1d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e14d2b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e14d390"/>
        <function-ref name="get" scoped="" ref="0x7e14d470"/>
        <function-ref name="led1Off" scoped="" ref="0x7e14d550"/>
        <function-ref name="led2Off" scoped="" ref="0x7e14d8d0"/>
        <function-ref name="set" scoped="" ref="0x7e14d630"/>
        <function-ref name="led0On" scoped="" ref="0x7e14d710"/>
        <function-ref name="led2On" scoped="" ref="0x7e14d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7e1688b0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e1688b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e168a88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e168b68"/>
        <function-ref name="request" scoped="" ref="0x7e168c48"/>
        <function-ref name="granted" scoped="" ref="0x7e168d28"/>
        <function-ref name="isOwner" scoped="" ref="0x7e168e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7e14c538" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x7e14c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e14c710"/>
        <function-ref name="toIdle" scoped="" ref="0x7e14c7f0"/>
        <function-ref name="isState" scoped="" ref="0x7e14c8d0"/>
        <function-ref name="isIdle" scoped="" ref="0x7e14c9b0"/>
        <function-ref name="requestState" scoped="" ref="0x7e14ca90"/>
        <function-ref name="forceState" scoped="" ref="0x7e14cb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e162e58" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e162e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e161050"/>
        <function-ref name="source" scoped="" ref="0x7e161130"/>
        <function-ref name="address" scoped="" ref="0x7e161210"/>
        <function-ref name="destination" scoped="" ref="0x7e1612f0"/>
        <function-ref name="setSource" scoped="" ref="0x7e1613d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e1614b0"/>
        <function-ref name="type" scoped="" ref="0x7e161590"/>
        <function-ref name="setType" scoped="" ref="0x7e161670"/>
        <function-ref name="isForMe" scoped="" ref="0x7e161750"/>
        <function-ref name="setGroup" scoped="" ref="0x7e161830"/>
        <function-ref name="localGroup" scoped="" ref="0x7e161910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7e143170" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7e143170"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e143348"/>
        <function-ref name="runTask" scoped="" ref="0x7e143428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7e144960" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7e144960"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e144b38"/>
        <function-ref name="runTask" scoped="" ref="0x7e144c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7e144010" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7e144010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e1441e8"/>
        <function-ref name="runTask" scoped="" ref="0x7e1442c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e0ef340" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e0ef340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e0ef518"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e0ef5f8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e0ef6d8"/>
        <function-ref name="syncDone" scoped="" ref="0x7e0ef7b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e0ef898"/>
        <function-ref name="setChannel" scoped="" ref="0x7e0ef978"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e0efa58"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e0efb38"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e0efc18"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e0efcf8"/>
        <function-ref name="sync" scoped="" ref="0x7e0efdd8"/>
        <function-ref name="getChannel" scoped="" ref="0x7e0efeb8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e0ee010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7e0e9670" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7e0e9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0e9c98"/>
        <function-ref name="readDone" scoped="" ref="0x7e0e9e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e0ee200" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e0ee200"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e0ee3d8"/>
        <function-ref name="rfOff" scoped="" ref="0x7e0ee4b8"/>
        <function-ref name="rxOn" scoped="" ref="0x7e0ee598"/>
        <function-ref name="startVReg" scoped="" ref="0x7e0ee678"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e0ee758"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e0ee838"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e0ee918"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e0ee9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e0f0bb8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e0f0bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e0f0d90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e0f0e70"/>
        <function-ref name="request" scoped="" ref="0x7e0ef010"/>
        <function-ref name="granted" scoped="" ref="0x7e0ef0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e0ef1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e0e6e00" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e0e6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e0e5010"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e0e50f0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e0e51d0"/>
        <function-ref name="syncDone" scoped="" ref="0x7e0e52b0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e0e5390"/>
        <function-ref name="setChannel" scoped="" ref="0x7e0e5470"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e0e5550"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e0e5630"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e0e5710"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e0e57f0"/>
        <function-ref name="sync" scoped="" ref="0x7e0e58d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7e0e59b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e0e5a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7e0caea8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7e0caea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0c70c0"/>
        <function-ref name="write" scoped="" ref="0x7e0c71a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7e0e3478" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7e0e3478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e0e17c8"/>
        <function-ref name="fired" scoped="" ref="0x7e0e1088"/>
        <function-ref name="startAt" scoped="" ref="0x7e0e1488"/>
        <function-ref name="isRunning" scoped="" ref="0x7e0e1288"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e0e19c8"/>
        <function-ref name="start" scoped="" ref="0x7e0e3bc8"/>
        <function-ref name="stop" scoped="" ref="0x7e0e3e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7e0ca600" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e0ca600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0ca7d8"/>
        <function-ref name="write" scoped="" ref="0x7e0ca8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7e0e0608" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7e0e0608"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0e07e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e0e08c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e0e09a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e0e0a80"/>
        <function-ref name="get" scoped="" ref="0x7e0e0b60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0e0c40"/>
        <function-ref name="set" scoped="" ref="0x7e0e0d20"/>
        <function-ref name="clr" scoped="" ref="0x7e0e0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7e0e4788" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7e0e4788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0e4db0"/>
        <function-ref name="readDone" scoped="" ref="0x7e0e3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7e0ae9c8" loc="113:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x7e0ae9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e0aeba0"/>
        <function-ref name="runTask" scoped="" ref="0x7e0aec80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7e0c7338" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7e0c7338"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0c7510"/>
        <function-ref name="write" scoped="" ref="0x7e0c75f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7e0c5cd0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e0c5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0c5ea8"/>
        <function-ref name="write" scoped="" ref="0x7e0ca010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7e0ccb60" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e0ccb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7e0ccd38"/>
        <function-ref name="changed" scoped="" ref="0x7e0cce18"/>
        <function-ref name="amGroup" scoped="" ref="0x7e0ccef8"/>
        <function-ref name="setAddress" scoped="" ref="0x7e0d0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7e0e1bb8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e0e1bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0e1d90"/>
        <function-ref name="isInput" scoped="" ref="0x7e0e1e70"/>
        <function-ref name="toggle" scoped="" ref="0x7e0e0010"/>
        <function-ref name="isOutput" scoped="" ref="0x7e0e00f0"/>
        <function-ref name="get" scoped="" ref="0x7e0e01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0e02b0"/>
        <function-ref name="set" scoped="" ref="0x7e0e0390"/>
        <function-ref name="clr" scoped="" ref="0x7e0e0470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7e0c2520" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e0c2520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0c26f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7e0d2010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7e0d2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0d21e8"/>
        <function-ref name="isInput" scoped="" ref="0x7e0d22c8"/>
        <function-ref name="toggle" scoped="" ref="0x7e0d23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e0d2488"/>
        <function-ref name="get" scoped="" ref="0x7e0d2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0d2648"/>
        <function-ref name="set" scoped="" ref="0x7e0d2728"/>
        <function-ref name="clr" scoped="" ref="0x7e0d2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e0e63f0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e0e63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e0e65c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7e0caa58" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e0caa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0cac30"/>
        <function-ref name="write" scoped="" ref="0x7e0cad10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7e0c2890" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e0c2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0c2a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e0c18b0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e0c18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e0c1b88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e0c1c68"/>
        <function-ref name="request" scoped="" ref="0x7e0c1d48"/>
        <function-ref name="granted" scoped="" ref="0x7e0c1e28"/>
        <function-ref name="isOwner" scoped="" ref="0x7e0c1f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7e0b27c8" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7e0b27c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e0b29a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e0b2a80"/>
        <function-ref name="request" scoped="" ref="0x7e0b2b60"/>
        <function-ref name="granted" scoped="" ref="0x7e0b2c40"/>
        <function-ref name="isOwner" scoped="" ref="0x7e0b2d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e0e5c80" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e0e5c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e0e5e58"/>
        <function-ref name="rfOff" scoped="" ref="0x7e0e4010"/>
        <function-ref name="rxOn" scoped="" ref="0x7e0e40f0"/>
        <function-ref name="startVReg" scoped="" ref="0x7e0e41d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e0e42b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e0e4390"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e0e4470"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e0e4550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7e0ca1a8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e0ca1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0ca380"/>
        <function-ref name="write" scoped="" ref="0x7e0ca460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7e0c5800" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e0c5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0c5a58"/>
        <function-ref name="write" scoped="" ref="0x7e0c5b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7e0c0d78" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e0c0d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0c2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e0b2e88" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e0b2e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e0b1070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e0b1150"/>
        <function-ref name="led1On" scoped="" ref="0x7e0b1230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e0b1310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e0b13f0"/>
        <function-ref name="get" scoped="" ref="0x7e0b14d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e0b15b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7e0b1930"/>
        <function-ref name="set" scoped="" ref="0x7e0b1690"/>
        <function-ref name="led0On" scoped="" ref="0x7e0b1770"/>
        <function-ref name="led2On" scoped="" ref="0x7e0b1850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7e0ae298" loc="112:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x7e0ae298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e0ae470"/>
        <function-ref name="runTask" scoped="" ref="0x7e0ae550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e0e6738" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e0e6738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e0e6910"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e0e69f0"/>
        <function-ref name="request" scoped="" ref="0x7e0e6ad0"/>
        <function-ref name="granted" scoped="" ref="0x7e0e6bb0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e0e6c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7e0c85e0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e0c85e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0c87b8"/>
        <function-ref name="write" scoped="" ref="0x7e0c8898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7e0cc570" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7e0cc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e0cc748"/>
        <function-ref name="disable" scoped="" ref="0x7e0cc828"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e0cc908"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e0cc9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e0c2bd8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e0c2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e0c2db0"/>
        <function-ref name="source" scoped="" ref="0x7e0c2e90"/>
        <function-ref name="address" scoped="" ref="0x7e0c1010"/>
        <function-ref name="destination" scoped="" ref="0x7e0c10f0"/>
        <function-ref name="setSource" scoped="" ref="0x7e0c11d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e0c12b0"/>
        <function-ref name="type" scoped="" ref="0x7e0c1390"/>
        <function-ref name="setType" scoped="" ref="0x7e0c1470"/>
        <function-ref name="isForMe" scoped="" ref="0x7e0c1550"/>
        <function-ref name="setGroup" scoped="" ref="0x7e0c1630"/>
        <function-ref name="localGroup" scoped="" ref="0x7e0c1710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7e0b20d0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x7e0b20d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e0b22a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e0b2388"/>
        <function-ref name="request" scoped="" ref="0x7e0b2468"/>
        <function-ref name="granted" scoped="" ref="0x7e0b2548"/>
        <function-ref name="isOwner" scoped="" ref="0x7e0b2628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7e0c21a8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e0c21a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0c2380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e04f060" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e04f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e04f238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7e04f508" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7e04f508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e04d868"/>
        <function-ref name="fired" scoped="" ref="0x7e04d128"/>
        <function-ref name="startAt" scoped="" ref="0x7e04d528"/>
        <function-ref name="isRunning" scoped="" ref="0x7e04d328"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e04da68"/>
        <function-ref name="start" scoped="" ref="0x7e04fc58"/>
        <function-ref name="stop" scoped="" ref="0x7e04fef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e04ac90" loc="67:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e04ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dec4010"/>
        <function-ref name="fired" scoped="" ref="0x7e049890"/>
        <function-ref name="startAt" scoped="" ref="0x7e049c90"/>
        <function-ref name="isRunning" scoped="" ref="0x7e049a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dec4210"/>
        <function-ref name="start" scoped="" ref="0x7e0493f0"/>
        <function-ref name="stop" scoped="" ref="0x7e049690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dec43c8" loc="68:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dec43c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dec45a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d492010" loc="28:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d492010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d491350"/>
        <function-ref name="fired" scoped="" ref="0x7d492c00"/>
        <function-ref name="startAt" scoped="" ref="0x7d491010"/>
        <function-ref name="isRunning" scoped="" ref="0x7d492e00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d491550"/>
        <function-ref name="start" scoped="" ref="0x7d492760"/>
        <function-ref name="stop" scoped="" ref="0x7d492a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d48fad8" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d48fad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d48eee8"/>
        <function-ref name="fired" scoped="" ref="0x7d48e7a8"/>
        <function-ref name="startAt" scoped="" ref="0x7d48eba8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d48e9a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d48d0f8"/>
        <function-ref name="start" scoped="" ref="0x7d48e308"/>
        <function-ref name="stop" scoped="" ref="0x7d48e5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e012388" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e012388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e012560"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7e012640"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e012720"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7e012800"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e0128e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e0129c0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7e012aa0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7e012b80"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7e012c60"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7e012d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e00d300" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e00d300"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e011aa8"/>
        <function-ref name="test" scoped="" ref="0x7e0116a8"/>
        <function-ref name="get" scoped="" ref="0x7e00d948"/>
        <function-ref name="captured" scoped="" ref="0x7e00dde8"/>
        <function-ref name="reset" scoped="" ref="0x7e0110a8"/>
        <function-ref name="isOn" scoped="" ref="0x7e0118a8"/>
        <function-ref name="set" scoped="" ref="0x7e00db48"/>
        <function-ref name="start" scoped="" ref="0x7e0112a8"/>
        <function-ref name="stop" scoped="" ref="0x7e0114a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e010100" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e010100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e00a410"/>
        <function-ref name="fired" scoped="" ref="0x7e010be8"/>
        <function-ref name="get" scoped="" ref="0x7e010748"/>
        <function-ref name="reset" scoped="" ref="0x7e010de8"/>
        <function-ref name="isOn" scoped="" ref="0x7e00a610"/>
        <function-ref name="set" scoped="" ref="0x7e010948"/>
        <function-ref name="start" scoped="" ref="0x7e00a010"/>
        <function-ref name="stop" scoped="" ref="0x7e00a210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e02bb50" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e02bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e0272b8"/>
        <function-ref name="test" scoped="" ref="0x7e028ea0"/>
        <function-ref name="get" scoped="" ref="0x7e028200"/>
        <function-ref name="setScale" scoped="" ref="0x7e0274b8"/>
        <function-ref name="getScale" scoped="" ref="0x7e027758"/>
        <function-ref name="reset" scoped="" ref="0x7e0288a0"/>
        <function-ref name="overflow" scoped="" ref="0x7e0286a0"/>
        <function-ref name="isOn" scoped="" ref="0x7e0270b8"/>
        <function-ref name="set" scoped="" ref="0x7e028400"/>
        <function-ref name="start" scoped="" ref="0x7e028aa0"/>
        <function-ref name="stop" scoped="" ref="0x7e028ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e003ac8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e003ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e003ca0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7e003d80"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e003e60"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7e002010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e0020f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e0021d0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7e0022b0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7e002390"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7e002470"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7e002550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7dfeea20" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7dfeea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7dfeebf8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7dfeecd8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7dfeedb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7dfeee98"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7dfed010"/>
        <function-ref name="setControl" scoped="" ref="0x7dfed0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7e000330" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7e000330"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dff2648"/>
        <function-ref name="fired" scoped="" ref="0x7e000e18"/>
        <function-ref name="get" scoped="" ref="0x7e000978"/>
        <function-ref name="reset" scoped="" ref="0x7dff2048"/>
        <function-ref name="isOn" scoped="" ref="0x7dff2848"/>
        <function-ref name="set" scoped="" ref="0x7e000b78"/>
        <function-ref name="start" scoped="" ref="0x7dff2248"/>
        <function-ref name="stop" scoped="" ref="0x7dff2448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e002770" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e002770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e000010"/>
        <function-ref name="test" scoped="" ref="0x7e001b50"/>
        <function-ref name="get" scoped="" ref="0x7e002db8"/>
        <function-ref name="captured" scoped="" ref="0x7e0012b0"/>
        <function-ref name="reset" scoped="" ref="0x7e001550"/>
        <function-ref name="isOn" scoped="" ref="0x7e001d50"/>
        <function-ref name="set" scoped="" ref="0x7e001010"/>
        <function-ref name="start" scoped="" ref="0x7e001750"/>
        <function-ref name="stop" scoped="" ref="0x7e001950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7dff2ac8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7dff2ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dff1dc8"/>
        <function-ref name="fired" scoped="" ref="0x7dff15c8"/>
        <function-ref name="get" scoped="" ref="0x7dff1128"/>
        <function-ref name="reset" scoped="" ref="0x7dff17c8"/>
        <function-ref name="isOn" scoped="" ref="0x7dfef010"/>
        <function-ref name="set" scoped="" ref="0x7dff1328"/>
        <function-ref name="start" scoped="" ref="0x7dff19c8"/>
        <function-ref name="stop" scoped="" ref="0x7dff1bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7dfef290" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7dfef290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dfee610"/>
        <function-ref name="fired" scoped="" ref="0x7dfefd78"/>
        <function-ref name="get" scoped="" ref="0x7dfef8d8"/>
        <function-ref name="reset" scoped="" ref="0x7dfee010"/>
        <function-ref name="isOn" scoped="" ref="0x7dfee810"/>
        <function-ref name="set" scoped="" ref="0x7dfefad8"/>
        <function-ref name="start" scoped="" ref="0x7dfee210"/>
        <function-ref name="stop" scoped="" ref="0x7dfee410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e006cf0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e006cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e003448"/>
        <function-ref name="test" scoped="" ref="0x7e003048"/>
        <function-ref name="get" scoped="" ref="0x7e005370"/>
        <function-ref name="setScale" scoped="" ref="0x7e003648"/>
        <function-ref name="getScale" scoped="" ref="0x7e0038e8"/>
        <function-ref name="reset" scoped="" ref="0x7e005a10"/>
        <function-ref name="overflow" scoped="" ref="0x7e005810"/>
        <function-ref name="isOn" scoped="" ref="0x7e003248"/>
        <function-ref name="set" scoped="" ref="0x7e005570"/>
        <function-ref name="start" scoped="" ref="0x7e005c10"/>
        <function-ref name="stop" scoped="" ref="0x7e005e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df70580" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df70580"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f252010"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f252010"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df70758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7df70968" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7df70968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7df670d8"/>
        <function-ref name="test" scoped="" ref="0x7df6fcb0"/>
        <function-ref name="get" scoped="" ref="0x7df6f010"/>
        <function-ref name="setScale" scoped="" ref="0x7df672d8"/>
        <function-ref name="getScale" scoped="" ref="0x7df67578"/>
        <function-ref name="reset" scoped="" ref="0x7df6f6b0"/>
        <function-ref name="overflow" scoped="" ref="0x7df6f4b0"/>
        <function-ref name="isOn" scoped="" ref="0x7df6feb0"/>
        <function-ref name="set" scoped="" ref="0x7df6f210"/>
        <function-ref name="start" scoped="" ref="0x7df6f8b0"/>
        <function-ref name="stop" scoped="" ref="0x7df6fab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d4830b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d4830b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f260dc0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f260dc0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d4823f8"/>
        <function-ref name="fired" scoped="" ref="0x7d483ca0"/>
        <function-ref name="startAt" scoped="" ref="0x7d4820b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d483ea0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d4825f8"/>
        <function-ref name="start" scoped="" ref="0x7d483800"/>
        <function-ref name="stop" scoped="" ref="0x7d483aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7d4646f8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7d4646f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d463ab0"/>
        <function-ref name="fired" scoped="" ref="0x7d4632b0"/>
        <function-ref name="get" scoped="" ref="0x7d464d40"/>
        <function-ref name="reset" scoped="" ref="0x7d4634b0"/>
        <function-ref name="isOn" scoped="" ref="0x7d463cb0"/>
        <function-ref name="set" scoped="" ref="0x7d463010"/>
        <function-ref name="start" scoped="" ref="0x7d4636b0"/>
        <function-ref name="stop" scoped="" ref="0x7d4638b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7d482840" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7d482840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d464010"/>
        <function-ref name="test" scoped="" ref="0x7d481b48"/>
        <function-ref name="get" scoped="" ref="0x7d482e88"/>
        <function-ref name="setScale" scoped="" ref="0x7d464210"/>
        <function-ref name="getScale" scoped="" ref="0x7d4644b0"/>
        <function-ref name="reset" scoped="" ref="0x7d481548"/>
        <function-ref name="overflow" scoped="" ref="0x7d481348"/>
        <function-ref name="isOn" scoped="" ref="0x7d481d48"/>
        <function-ref name="set" scoped="" ref="0x7d4810a8"/>
        <function-ref name="start" scoped="" ref="0x7d481748"/>
        <function-ref name="stop" scoped="" ref="0x7d481948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7df30a28" loc="24:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7df30a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7df2f200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7df2f600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7df2f400"/>
        <function-ref name="overflow" scoped="" ref="0x7df2f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7df2ae30" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7df2ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7df29590"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7df29990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7df29790"/>
        <function-ref name="overflow" scoped="" ref="0x7df29b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7df26890" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7df26890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7df11010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7df11410"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7df11210"/>
        <function-ref name="overflow" scoped="" ref="0x7df11610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7df11878" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7df11878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7df0e010"/>
        <function-ref name="test" scoped="" ref="0x7df10b78"/>
        <function-ref name="get" scoped="" ref="0x7df11ec0"/>
        <function-ref name="setScale" scoped="" ref="0x7df0e210"/>
        <function-ref name="getScale" scoped="" ref="0x7df0e4b0"/>
        <function-ref name="reset" scoped="" ref="0x7df10578"/>
        <function-ref name="overflow" scoped="" ref="0x7df10378"/>
        <function-ref name="isOn" scoped="" ref="0x7df10d78"/>
        <function-ref name="set" scoped="" ref="0x7df100d8"/>
        <function-ref name="start" scoped="" ref="0x7df10778"/>
        <function-ref name="stop" scoped="" ref="0x7df10978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7def2150" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7def2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7def28a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7def2ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7def2aa0"/>
        <function-ref name="overflow" scoped="" ref="0x7def2ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7df0b0c0" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7df0b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7df0b810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7df0bc10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7df0ba10"/>
        <function-ref name="overflow" scoped="" ref="0x7df0be10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d48c320" loc="50:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d48c320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d48a668"/>
        <function-ref name="fired" scoped="" ref="0x7d48cf10"/>
        <function-ref name="startAt" scoped="" ref="0x7d48a328"/>
        <function-ref name="isRunning" scoped="" ref="0x7d48a128"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d48a868"/>
        <function-ref name="start" scoped="" ref="0x7d48ca70"/>
        <function-ref name="stop" scoped="" ref="0x7d48cd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7d489c00" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7d489c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d487010"/>
        <function-ref name="fired" scoped="" ref="0x7d488820"/>
        <function-ref name="startAt" scoped="" ref="0x7d488c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7d488a20"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d487210"/>
        <function-ref name="start" scoped="" ref="0x7d488380"/>
        <function-ref name="stop" scoped="" ref="0x7d488620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7d48ab40" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d48ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d489308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d489708"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d489508"/>
        <function-ref name="overflow" scoped="" ref="0x7d489908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dec6b80" loc="18:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dec6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dec6d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7deb4af8" loc="68:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7deb4af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb4cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7deb4db0"/>
        <function-ref name="toggle" scoped="" ref="0x7deb4e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb3010"/>
        <function-ref name="get" scoped="" ref="0x7deb30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb31d0"/>
        <function-ref name="set" scoped="" ref="0x7deb32b0"/>
        <function-ref name="clr" scoped="" ref="0x7deb3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7deb3508" loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7deb3508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb36e0"/>
        <function-ref name="isInput" scoped="" ref="0x7deb37c0"/>
        <function-ref name="toggle" scoped="" ref="0x7deb38a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb3980"/>
        <function-ref name="get" scoped="" ref="0x7deb3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb3b40"/>
        <function-ref name="set" scoped="" ref="0x7deb3c20"/>
        <function-ref name="clr" scoped="" ref="0x7deb3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7deb3e78" loc="70:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7deb3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb2070"/>
        <function-ref name="isInput" scoped="" ref="0x7deb2150"/>
        <function-ref name="toggle" scoped="" ref="0x7deb2230"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb2310"/>
        <function-ref name="get" scoped="" ref="0x7deb23f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb24d0"/>
        <function-ref name="set" scoped="" ref="0x7deb25b0"/>
        <function-ref name="clr" scoped="" ref="0x7deb2690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7deb4188" loc="67:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7deb4188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb4360"/>
        <function-ref name="isInput" scoped="" ref="0x7deb4440"/>
        <function-ref name="toggle" scoped="" ref="0x7deb4520"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb4600"/>
        <function-ref name="get" scoped="" ref="0x7deb46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb47c0"/>
        <function-ref name="set" scoped="" ref="0x7deb48a0"/>
        <function-ref name="clr" scoped="" ref="0x7deb4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7deb0190" loc="72:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7deb0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb0368"/>
        <function-ref name="isInput" scoped="" ref="0x7deb0448"/>
        <function-ref name="toggle" scoped="" ref="0x7deb0528"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb0608"/>
        <function-ref name="get" scoped="" ref="0x7deb06e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb07c8"/>
        <function-ref name="set" scoped="" ref="0x7deb08a8"/>
        <function-ref name="clr" scoped="" ref="0x7deb0988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7dec0760" loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7dec0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dec0938"/>
        <function-ref name="isInput" scoped="" ref="0x7dec0a18"/>
        <function-ref name="toggle" scoped="" ref="0x7dec0af8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dec0bd8"/>
        <function-ref name="get" scoped="" ref="0x7dec0cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dec0d98"/>
        <function-ref name="set" scoped="" ref="0x7dec0e78"/>
        <function-ref name="clr" scoped="" ref="0x7deb4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7deb2808" loc="71:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7deb2808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb29e0"/>
        <function-ref name="isInput" scoped="" ref="0x7deb2ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7deb2ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb2c80"/>
        <function-ref name="get" scoped="" ref="0x7deb2d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb2e40"/>
        <function-ref name="set" scoped="" ref="0x7deb2f20"/>
        <function-ref name="clr" scoped="" ref="0x7deb0018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7dea54f8" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7dea54f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7dea56d0"/>
        <function-ref name="disable" scoped="" ref="0x7dea57b0"/>
        <function-ref name="captured" scoped="" ref="0x7dea5890"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7dea5970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7dea5b10" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7dea5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dea5ce8"/>
        <function-ref name="disable" scoped="" ref="0x7dea5dc8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7dea5ea8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7dea8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7dea81b0" loc="41:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dea81b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dea8388"/>
        <function-ref name="disable" scoped="" ref="0x7dea8468"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7dea8548"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7dea8628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7de90c60" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7de90c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7de90e38"/>
        <function-ref name="disable" scoped="" ref="0x7de90f18"/>
        <function-ref name="captured" scoped="" ref="0x7dea4010"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7dea40f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7dea4300" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7dea4300"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7dea3aa8"/>
        <function-ref name="test" scoped="" ref="0x7dea36a8"/>
        <function-ref name="get" scoped="" ref="0x7dea4948"/>
        <function-ref name="captured" scoped="" ref="0x7dea4de8"/>
        <function-ref name="reset" scoped="" ref="0x7dea30a8"/>
        <function-ref name="isOn" scoped="" ref="0x7dea38a8"/>
        <function-ref name="set" scoped="" ref="0x7dea4b48"/>
        <function-ref name="start" scoped="" ref="0x7dea32a8"/>
        <function-ref name="stop" scoped="" ref="0x7dea34a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7de8cd18" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7de8cd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de8cef0"/>
        <function-ref name="fired" scoped="" ref="0x7de8b010"/>
        <function-ref name="disable" scoped="" ref="0x7de8b0f0"/>
        <function-ref name="edge" scoped="" ref="0x7de8b1d0"/>
        <function-ref name="enable" scoped="" ref="0x7de8b2b0"/>
        <function-ref name="getValue" scoped="" ref="0x7de8b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7de8c720" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7de8c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de8c8f8"/>
        <function-ref name="disable" scoped="" ref="0x7de8c9d8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7de8cab8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7de8cb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7de70be8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7de70be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de70dc0"/>
        <function-ref name="fired" scoped="" ref="0x7de70ea0"/>
        <function-ref name="disable" scoped="" ref="0x7de6f010"/>
        <function-ref name="edge" scoped="" ref="0x7de6f0f0"/>
        <function-ref name="enable" scoped="" ref="0x7de6f1d0"/>
        <function-ref name="getValue" scoped="" ref="0x7de6f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7de72430" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7de72430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de72608"/>
        <function-ref name="fired" scoped="" ref="0x7de726e8"/>
        <function-ref name="disable" scoped="" ref="0x7de727c8"/>
        <function-ref name="edge" scoped="" ref="0x7de728a8"/>
        <function-ref name="enable" scoped="" ref="0x7de72988"/>
        <function-ref name="getValue" scoped="" ref="0x7de72a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7de71be8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7de71be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de71dc0"/>
        <function-ref name="fired" scoped="" ref="0x7de71ea0"/>
        <function-ref name="disable" scoped="" ref="0x7de70010"/>
        <function-ref name="edge" scoped="" ref="0x7de700f0"/>
        <function-ref name="enable" scoped="" ref="0x7de701d0"/>
        <function-ref name="getValue" scoped="" ref="0x7de702b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7de6f430" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7de6f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de6f608"/>
        <function-ref name="fired" scoped="" ref="0x7de6f6e8"/>
        <function-ref name="disable" scoped="" ref="0x7de6f7c8"/>
        <function-ref name="edge" scoped="" ref="0x7de6f8a8"/>
        <function-ref name="enable" scoped="" ref="0x7de6f988"/>
        <function-ref name="getValue" scoped="" ref="0x7de6fa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7de72be8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7de72be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de72dc0"/>
        <function-ref name="fired" scoped="" ref="0x7de72ea0"/>
        <function-ref name="disable" scoped="" ref="0x7de71010"/>
        <function-ref name="edge" scoped="" ref="0x7de710f0"/>
        <function-ref name="enable" scoped="" ref="0x7de711d0"/>
        <function-ref name="getValue" scoped="" ref="0x7de712b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7de70430" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7de70430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de70608"/>
        <function-ref name="fired" scoped="" ref="0x7de706e8"/>
        <function-ref name="disable" scoped="" ref="0x7de707c8"/>
        <function-ref name="edge" scoped="" ref="0x7de708a8"/>
        <function-ref name="enable" scoped="" ref="0x7de70988"/>
        <function-ref name="getValue" scoped="" ref="0x7de70a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7de73c50" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7de73c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de73e28"/>
        <function-ref name="fired" scoped="" ref="0x7de73f08"/>
        <function-ref name="disable" scoped="" ref="0x7de72010"/>
        <function-ref name="edge" scoped="" ref="0x7de720f0"/>
        <function-ref name="enable" scoped="" ref="0x7de721d0"/>
        <function-ref name="getValue" scoped="" ref="0x7de722b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7de71430" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7de71430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de71608"/>
        <function-ref name="fired" scoped="" ref="0x7de716e8"/>
        <function-ref name="disable" scoped="" ref="0x7de717c8"/>
        <function-ref name="edge" scoped="" ref="0x7de718a8"/>
        <function-ref name="enable" scoped="" ref="0x7de71988"/>
        <function-ref name="getValue" scoped="" ref="0x7de71a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7de681b0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7de681b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de68388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7de69010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7de69010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de691e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7de69a78" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7de69a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de69c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7de68528" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7de68528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de68700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7de69388" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7de69388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de69560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7de69df0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7de69df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de68010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7de67c48" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7de67c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de67e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7de69700" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7de69700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de698d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7de6b6c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7de6b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de6b898"/>
        <function-ref name="fired" scoped="" ref="0x7de6b978"/>
        <function-ref name="disable" scoped="" ref="0x7de6ba58"/>
        <function-ref name="edge" scoped="" ref="0x7de6bb38"/>
        <function-ref name="enable" scoped="" ref="0x7de6bc18"/>
        <function-ref name="getValue" scoped="" ref="0x7de6bcf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7de6be78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7de6be78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de3e070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7de336c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7de336c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de33898"/>
        <function-ref name="fired" scoped="" ref="0x7de33978"/>
        <function-ref name="disable" scoped="" ref="0x7de33a58"/>
        <function-ref name="edge" scoped="" ref="0x7de33b38"/>
        <function-ref name="enable" scoped="" ref="0x7de33c18"/>
        <function-ref name="getValue" scoped="" ref="0x7de33cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7de33e78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7de33e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de32070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7de306c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7de306c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de30898"/>
        <function-ref name="fired" scoped="" ref="0x7de30978"/>
        <function-ref name="disable" scoped="" ref="0x7de30a58"/>
        <function-ref name="edge" scoped="" ref="0x7de30b38"/>
        <function-ref name="enable" scoped="" ref="0x7de30c18"/>
        <function-ref name="getValue" scoped="" ref="0x7de30cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7de30e78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7de30e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de25070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7de246c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7de246c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de24898"/>
        <function-ref name="fired" scoped="" ref="0x7de24978"/>
        <function-ref name="disable" scoped="" ref="0x7de24a58"/>
        <function-ref name="edge" scoped="" ref="0x7de24b38"/>
        <function-ref name="enable" scoped="" ref="0x7de24c18"/>
        <function-ref name="getValue" scoped="" ref="0x7de24cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7de24e78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7de24e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de23070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7de22788" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7de22788"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de22960"/>
        <function-ref name="fired" scoped="" ref="0x7de22a40"/>
        <function-ref name="disable" scoped="" ref="0x7de22b20"/>
        <function-ref name="edge" scoped="" ref="0x7de22c00"/>
        <function-ref name="enable" scoped="" ref="0x7de22ce0"/>
        <function-ref name="getValue" scoped="" ref="0x7de22dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7de21010" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7de21010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de211e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7de208f0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7de208f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de20ac8"/>
        <function-ref name="fired" scoped="" ref="0x7de20ba8"/>
        <function-ref name="disable" scoped="" ref="0x7de20c88"/>
        <function-ref name="edge" scoped="" ref="0x7de20d68"/>
        <function-ref name="enable" scoped="" ref="0x7de20e48"/>
        <function-ref name="getValue" scoped="" ref="0x7de20f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7de1f0b8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7de1f0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de1f290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7de1d978" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7de1d978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de1db50"/>
        <function-ref name="fired" scoped="" ref="0x7de1dc30"/>
        <function-ref name="disable" scoped="" ref="0x7de1dd10"/>
        <function-ref name="edge" scoped="" ref="0x7de1ddf0"/>
        <function-ref name="enable" scoped="" ref="0x7de1ded0"/>
        <function-ref name="getValue" scoped="" ref="0x7de1c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7de1c190" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7de1c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de1c368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7de1ba88" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7de1ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de1bc60"/>
        <function-ref name="fired" scoped="" ref="0x7de1bd40"/>
        <function-ref name="disable" scoped="" ref="0x7de1be20"/>
        <function-ref name="edge" scoped="" ref="0x7de1bf00"/>
        <function-ref name="enable" scoped="" ref="0x7de1a010"/>
        <function-ref name="getValue" scoped="" ref="0x7de1a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7de1a270" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7de1a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de1a448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7de138c8" loc="51:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7de138c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de13aa0"/>
        <function-ref name="isInput" scoped="" ref="0x7de13b80"/>
        <function-ref name="toggle" scoped="" ref="0x7de13c60"/>
        <function-ref name="isOutput" scoped="" ref="0x7de13d40"/>
        <function-ref name="get" scoped="" ref="0x7de13e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de13f00"/>
        <function-ref name="set" scoped="" ref="0x7de12010"/>
        <function-ref name="clr" scoped="" ref="0x7de120f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7de13298" loc="47:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7de13298"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de13470"/>
        <function-ref name="disable" scoped="" ref="0x7de13550"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7de13630"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7de13710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7de12df8" loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7de12df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7de11010"/>
        <function-ref name="runTask" scoped="" ref="0x7de110f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7dc3a7a0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7dc3a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc3a978"/>
        <function-ref name="write" scoped="" ref="0x7dc3aa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dc3cae0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dc3cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc3ccb8"/>
        <function-ref name="write" scoped="" ref="0x7dc3cd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dc3d010" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dc3d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc3d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dc39cd8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc39cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc39eb0"/>
        <function-ref name="write" scoped="" ref="0x7dc38010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dc3a368" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dc3a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc3a540"/>
        <function-ref name="write" scoped="" ref="0x7dc3a620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7dc3abd8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7dc3abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc3adb0"/>
        <function-ref name="write" scoped="" ref="0x7dc3ae90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dc3c270" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dc3c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc3c448"/>
        <function-ref name="write" scoped="" ref="0x7dc3c528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7dc3f5d0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7dc3f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7dc3f7a8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7dc3f888"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7dc3f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dc3fe40" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dc3fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc3e050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7dc3da18" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7dc3da18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc3dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dc3d6c0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dc3d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc3d898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dc3cf18" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dc3cf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc3a108"/>
        <function-ref name="write" scoped="" ref="0x7dc3a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dc3d368" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dc3d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc3d540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dc398a0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dc398a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc39a78"/>
        <function-ref name="write" scoped="" ref="0x7dc39b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dc38190" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dc38190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc38468"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc38548"/>
        <function-ref name="write" scoped="" ref="0x7dc38628"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc38708"/>
        <function-ref name="readDone" scoped="" ref="0x7dc387e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dc3e1d0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dc3e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc3e3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dc3c6a8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dc3c6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc3c880"/>
        <function-ref name="write" scoped="" ref="0x7dc3c960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dc3dd70" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dc3dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc3c010"/>
        <function-ref name="write" scoped="" ref="0x7dc3c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dc3e528" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dc3e528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc3e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dc40f08" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dc40f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dc3f0f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dc3f1d0"/>
        <function-ref name="request" scoped="" ref="0x7dc3f2b0"/>
        <function-ref name="granted" scoped="" ref="0x7dc3f390"/>
        <function-ref name="isOwner" scoped="" ref="0x7dc3f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dc39468" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dc39468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc39640"/>
        <function-ref name="write" scoped="" ref="0x7dc39720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dc39030" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dc39030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc39208"/>
        <function-ref name="write" scoped="" ref="0x7dc392e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dc3fae8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc3fae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc3fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dc3ebd8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dc3ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc3edb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dc3e880" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dc3e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc3ea58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dc38968" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dc38968"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc38b40"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc38c20"/>
        <function-ref name="write" scoped="" ref="0x7dc38d00"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc38de0"/>
        <function-ref name="readDone" scoped="" ref="0x7dc38ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7ddde2f8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7ddde2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ddde4d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7ddde5b0"/>
        <function-ref name="write" scoped="" ref="0x7ddde690"/>
        <function-ref name="beginRead" scoped="" ref="0x7ddde770"/>
        <function-ref name="readDone" scoped="" ref="0x7ddde850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7dddfb18" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7dddfb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7dddfcf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7dddfdd0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7dddfeb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7dddec80" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7dddec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dddee58"/>
        <function-ref name="write" scoped="" ref="0x7dddc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7dddc438" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7dddc438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dddc610"/>
        <function-ref name="write" scoped="" ref="0x7dddc6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dddf450" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dddf450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dddf628"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dddf708"/>
        <function-ref name="request" scoped="" ref="0x7dddf7e8"/>
        <function-ref name="granted" scoped="" ref="0x7dddf8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7dddf9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7dddcb18" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7dddcb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dddccf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7ddc39a8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7ddc39a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ddc3b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7ddc3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7ddd7d50" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7ddd7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ddd7f28"/>
        <function-ref name="writeDone" scoped="" ref="0x7ddd6018"/>
        <function-ref name="write" scoped="" ref="0x7ddd60f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7ddd61d8"/>
        <function-ref name="readDone" scoped="" ref="0x7ddd62b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7dddbc58" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7dddbc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7dddbe30"/>
        <function-ref name="abortRelease" scoped="" ref="0x7dddbf10"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ddd7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7ddc6050" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7ddc6050"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ddc6228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7ddc3dd8" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x7ddc3dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ddd0010"/>
        <function-ref name="toIdle" scoped="" ref="0x7ddd00f0"/>
        <function-ref name="isState" scoped="" ref="0x7ddd01d0"/>
        <function-ref name="isIdle" scoped="" ref="0x7ddd02b0"/>
        <function-ref name="requestState" scoped="" ref="0x7ddd0390"/>
        <function-ref name="forceState" scoped="" ref="0x7ddd0470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ddd5890" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7ddd5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ddd5a68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ddd5b48"/>
        <function-ref name="request" scoped="" ref="0x7ddd5c28"/>
        <function-ref name="granted" scoped="" ref="0x7ddd5d08"/>
        <function-ref name="isOwner" scoped="" ref="0x7ddd5de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7ddd66c8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7ddd66c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddd68a0"/>
        <function-ref name="write" scoped="" ref="0x7ddd6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7ddd6d88" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7ddd6d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddd5010"/>
        <function-ref name="write" scoped="" ref="0x7ddd50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ddd05b8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7ddd05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ddd0790"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ddd0870"/>
        <function-ref name="led1On" scoped="" ref="0x7ddd0950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ddd0a30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ddd0b10"/>
        <function-ref name="get" scoped="" ref="0x7ddd0bf0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ddd0cd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ddc50f0"/>
        <function-ref name="set" scoped="" ref="0x7ddd0db0"/>
        <function-ref name="led0On" scoped="" ref="0x7ddd0e90"/>
        <function-ref name="led2On" scoped="" ref="0x7ddc5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ddd73f0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7ddd73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ddd75c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ddd76a8"/>
        <function-ref name="request" scoped="" ref="0x7ddd7788"/>
        <function-ref name="granted" scoped="" ref="0x7ddd7868"/>
        <function-ref name="isOwner" scoped="" ref="0x7ddd7948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7ddc2e90" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x7ddc2e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ddc0080"/>
        <function-ref name="runTask" scoped="" ref="0x7ddc0160"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7ddd54f8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7ddd54f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddd56d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7dd81a38" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7dd81a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dd81c10"/>
        <function-ref name="toIdle" scoped="" ref="0x7dd81cf0"/>
        <function-ref name="isState" scoped="" ref="0x7dd81dd0"/>
        <function-ref name="isIdle" scoped="" ref="0x7dd81eb0"/>
        <function-ref name="requestState" scoped="" ref="0x7dd7b010"/>
        <function-ref name="forceState" scoped="" ref="0x7dd7b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7dd7a718" loc="66:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7dd7a718"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dd7a8f0"/>
        <function-ref name="toIdle" scoped="" ref="0x7dd7a9d0"/>
        <function-ref name="isState" scoped="" ref="0x7dd7aab0"/>
        <function-ref name="isIdle" scoped="" ref="0x7dd7ab90"/>
        <function-ref name="requestState" scoped="" ref="0x7dd7ac70"/>
        <function-ref name="forceState" scoped="" ref="0x7dd7ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dd752f0" loc="66:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dd752f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dd754c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7dd758a0" loc="67:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7dd758a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dd75a78"/>
        <function-ref name="toIdle" scoped="" ref="0x7dd75b58"/>
        <function-ref name="isState" scoped="" ref="0x7dd75c38"/>
        <function-ref name="isIdle" scoped="" ref="0x7dd75d18"/>
        <function-ref name="requestState" scoped="" ref="0x7dd75df8"/>
        <function-ref name="forceState" scoped="" ref="0x7dd75ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7dc73268" loc="43:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7dc73268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc73440"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc73520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7dd76f10" loc="42:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7dd76f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7dc73108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dd76520" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dd76520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dd766f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dd76858" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dd76858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dd76a30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dd76b10"/>
        <function-ref name="request" scoped="" ref="0x7dd76bf0"/>
        <function-ref name="granted" scoped="" ref="0x7dd76cd0"/>
        <function-ref name="isOwner" scoped="" ref="0x7dd76db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7dd59c30" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7dd59c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dd59e08"/>
        <function-ref name="sendDone" scoped="" ref="0x7dd59ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7dd598e8" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7dd598e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7dd59ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dd595a8" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dd595a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dd59780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dd58300" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dd58300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dd584d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dd585b8"/>
        <function-ref name="request" scoped="" ref="0x7dd58698"/>
        <function-ref name="granted" scoped="" ref="0x7dd58778"/>
        <function-ref name="isOwner" scoped="" ref="0x7dd58858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7dd221e0" loc="207:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7dd221e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7dd223b8"/>
        <function-ref name="runTask" scoped="" ref="0x7dd22498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7dd53080" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7dd53080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dd53258"/>
        <function-ref name="sendDone" scoped="" ref="0x7dd53338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7dd46a40" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7dd46a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dd46c18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dd46cf8"/>
        <function-ref name="request" scoped="" ref="0x7dd46dd8"/>
        <function-ref name="granted" scoped="" ref="0x7dd46eb8"/>
        <function-ref name="isOwner" scoped="" ref="0x7dd39010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7dd54d38" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7dd54d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7dd54f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dd54a18" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dd54a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dd54bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7dd3ae98" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7dd3ae98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7dd500c0"/>
        <function-ref name="sleep" scoped="" ref="0x7dd46550"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7dd50280"/>
        <function-ref name="dataReady" scoped="" ref="0x7dd46630"/>
        <function-ref name="initMaster" scoped="" ref="0x7dd50440"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7dd50520"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7dd50600"/>
        <function-ref name="read" scoped="" ref="0x7dd506e0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7dd507c0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7dd508a0"/>
        <function-ref name="setClock" scoped="" ref="0x7dd50980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7dd50a60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7dd50b40"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7dd50ca0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7dd50d80"/>
        <function-ref name="write" scoped="" ref="0x7dd50e60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7dd46010"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7dd460f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7dd461d0"/>
        <function-ref name="getClock" scoped="" ref="0x7dd462b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7dd46390"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7dd501a0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7dd50360"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7dd46470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dd53718" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dd53718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dd538f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dd539d0"/>
        <function-ref name="request" scoped="" ref="0x7dd53ab0"/>
        <function-ref name="granted" scoped="" ref="0x7dd53b90"/>
        <function-ref name="isOwner" scoped="" ref="0x7dd53c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7dd34bb8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7dd34bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7dd34d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7dd347b0" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7dd347b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7dd34988"/>
        <function-ref name="userId" scoped="" ref="0x7dd34a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7dd03300" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7dd03300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7dd034d8"/>
        <function-ref name="sleep" scoped="" ref="0x7dd02950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7dd03698"/>
        <function-ref name="dataReady" scoped="" ref="0x7dd02a30"/>
        <function-ref name="initMaster" scoped="" ref="0x7dd03858"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7dd03938"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7dd03a18"/>
        <function-ref name="read" scoped="" ref="0x7dd03af8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7dd03bd8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7dd03cb8"/>
        <function-ref name="setClock" scoped="" ref="0x7dd03d98"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7dd03e78"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7dd02010"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7dd02170"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7dd02250"/>
        <function-ref name="write" scoped="" ref="0x7dd02330"/>
        <function-ref name="enableSpi" scoped="" ref="0x7dd02410"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7dd024f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7dd025d0"/>
        <function-ref name="getClock" scoped="" ref="0x7dd026b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7dd02790"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7dd035b8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7dd03778"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7dd02870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7dcf6188" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7dcf6188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcf6360"/>
        <function-ref name="isInput" scoped="" ref="0x7dcf6440"/>
        <function-ref name="toggle" scoped="" ref="0x7dcf6520"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcf6600"/>
        <function-ref name="get" scoped="" ref="0x7dcf66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcf67c0"/>
        <function-ref name="set" scoped="" ref="0x7dcf68a0"/>
        <function-ref name="clr" scoped="" ref="0x7dcf6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7dcfade0" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7dcfade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcf9010"/>
        <function-ref name="isInput" scoped="" ref="0x7dcf90f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dcf91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcf92b0"/>
        <function-ref name="get" scoped="" ref="0x7dcf9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcf9470"/>
        <function-ref name="set" scoped="" ref="0x7dcf9550"/>
        <function-ref name="clr" scoped="" ref="0x7dcf9630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7dcfa470" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7dcfa470"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcfa648"/>
        <function-ref name="isInput" scoped="" ref="0x7dcfa728"/>
        <function-ref name="toggle" scoped="" ref="0x7dcfa808"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcfa8e8"/>
        <function-ref name="get" scoped="" ref="0x7dcfa9c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcfaaa8"/>
        <function-ref name="set" scoped="" ref="0x7dcfab88"/>
        <function-ref name="clr" scoped="" ref="0x7dcfac68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7dcfa010" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7dcfa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dcfa1e8"/>
        <function-ref name="stop" scoped="" ref="0x7dcfa2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7dcf6af8" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7dcf6af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7dcf6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7dcfd010" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7dcfd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7dcfd1e8"/>
        <function-ref name="sleep" scoped="" ref="0x7dcfc630"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7dcfd3a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7dcfc710"/>
        <function-ref name="initMaster" scoped="" ref="0x7dcfd568"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7dcfd648"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7dcfd728"/>
        <function-ref name="read" scoped="" ref="0x7dcfd808"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7dcfd8e8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7dcfd9c8"/>
        <function-ref name="setClock" scoped="" ref="0x7dcfdaa8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7dcfdb88"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7dcfdc68"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7dcfddc8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7dcfdea8"/>
        <function-ref name="write" scoped="" ref="0x7dcfc010"/>
        <function-ref name="enableSpi" scoped="" ref="0x7dcfc0f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7dcfc1d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7dcfc2b0"/>
        <function-ref name="getClock" scoped="" ref="0x7dcfc390"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7dcfc470"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7dcfd2c8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7dcfd488"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7dcfc550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7dcf97a8" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7dcf97a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcf9980"/>
        <function-ref name="isInput" scoped="" ref="0x7dcf9a60"/>
        <function-ref name="toggle" scoped="" ref="0x7dcf9b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcf9c20"/>
        <function-ref name="get" scoped="" ref="0x7dcf9d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcf9de0"/>
        <function-ref name="set" scoped="" ref="0x7dcf9ec0"/>
        <function-ref name="clr" scoped="" ref="0x7dcf6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7dcbecb0" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7dcbecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7dcbee98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7dc76010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7dc76600" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7dc76600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7dc767e8"/>
        <function-ref name="configure" scoped="" ref="0x7dc768c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dcbe570" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dcbe570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dcbe758"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dcbe838"/>
        <function-ref name="request" scoped="" ref="0x7dcbe918"/>
        <function-ref name="granted" scoped="" ref="0x7dcbe9f8"/>
        <function-ref name="isOwner" scoped="" ref="0x7dcbead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7dc76150" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7dc76150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7dc76328"/>
        <function-ref name="userId" scoped="" ref="0x7dc76408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d3efe78" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d3efe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d3ed070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7d3ed1d0" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7d3ed1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d3ed3a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d3ed488"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d3ed568"/>
        <function-ref name="dequeue" scoped="" ref="0x7d3ed648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d3ec928" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d3ec928"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d3ecb10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d3ecbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d3eb218" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d3eb218"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d3eb400"/>
        <function-ref name="configure" scoped="" ref="0x7d3eb4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7d3eb640" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7d3eb640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d3eb818"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d3eb8f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d3eb9d8"/>
        <function-ref name="dequeue" scoped="" ref="0x7d3ebab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d3ec1e8" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d3ec1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d3ec3d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d3ec4b0"/>
        <function-ref name="request" scoped="" ref="0x7d3ec590"/>
        <function-ref name="granted" scoped="" ref="0x7d3ec670"/>
        <function-ref name="isOwner" scoped="" ref="0x7d3ec750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d3ecd30" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d3ecd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d3ecf08"/>
        <function-ref name="userId" scoped="" ref="0x7d3eb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7d3ebc38" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7d3ebc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d3ebe10"/>
        <function-ref name="runTask" scoped="" ref="0x7d3ebef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7dc72bb8" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7dc72bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7dc72d90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7dc72e70"/>
        <function-ref name="led1On" scoped="" ref="0x7dc67010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7dc670f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7dc671d0"/>
        <function-ref name="get" scoped="" ref="0x7dc672b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7dc67390"/>
        <function-ref name="led2Off" scoped="" ref="0x7dc67710"/>
        <function-ref name="set" scoped="" ref="0x7dc67470"/>
        <function-ref name="led0On" scoped="" ref="0x7dc67550"/>
        <function-ref name="led2On" scoped="" ref="0x7dc67630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7dc62628" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7dc62628"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dc62800"/>
        <function-ref name="isInput" scoped="" ref="0x7dc628e0"/>
        <function-ref name="toggle" scoped="" ref="0x7dc629c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dc62aa0"/>
        <function-ref name="get" scoped="" ref="0x7dc62b80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dc62c60"/>
        <function-ref name="set" scoped="" ref="0x7dc62d40"/>
        <function-ref name="clr" scoped="" ref="0x7dc62e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc635d8" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc635d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc637b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7dc61010" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7dc61010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dc611e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dc612c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dc613a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dc61488"/>
        <function-ref name="get" scoped="" ref="0x7dc61568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dc61648"/>
        <function-ref name="set" scoped="" ref="0x7dc61728"/>
        <function-ref name="clr" scoped="" ref="0x7dc61808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7dc638f8" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7dc638f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7dc63ad0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7dc63bb0"/>
        <function-ref name="led1On" scoped="" ref="0x7dc63c90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7dc63d70"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7dc63e50"/>
        <function-ref name="get" scoped="" ref="0x7dc62010"/>
        <function-ref name="led1Off" scoped="" ref="0x7dc620f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7dc62470"/>
        <function-ref name="set" scoped="" ref="0x7dc621d0"/>
        <function-ref name="led0On" scoped="" ref="0x7dc622b0"/>
        <function-ref name="led2On" scoped="" ref="0x7dc62390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7dc61980" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7dc61980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dc61b58"/>
        <function-ref name="isInput" scoped="" ref="0x7dc61c38"/>
        <function-ref name="toggle" scoped="" ref="0x7dc61d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7dc61df8"/>
        <function-ref name="get" scoped="" ref="0x7dc61ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dc60010"/>
        <function-ref name="set" scoped="" ref="0x7dc600f0"/>
        <function-ref name="clr" scoped="" ref="0x7dc601d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7dc50900" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7dc50900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dc50ad8"/>
        <function-ref name="isInput" scoped="" ref="0x7dc50bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7dc50c98"/>
        <function-ref name="isOutput" scoped="" ref="0x7dc50d78"/>
        <function-ref name="get" scoped="" ref="0x7dc50e58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dc48010"/>
        <function-ref name="set" scoped="" ref="0x7dc480f0"/>
        <function-ref name="clr" scoped="" ref="0x7dc481d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7dc48368" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7dc48368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dc48540"/>
        <function-ref name="isInput" scoped="" ref="0x7dc48620"/>
        <function-ref name="toggle" scoped="" ref="0x7dc48700"/>
        <function-ref name="isOutput" scoped="" ref="0x7dc487e0"/>
        <function-ref name="get" scoped="" ref="0x7dc488c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dc489a0"/>
        <function-ref name="set" scoped="" ref="0x7dc48a80"/>
        <function-ref name="clr" scoped="" ref="0x7dc48b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7dc476b8" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc476b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc47890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7dc48cf8" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7dc48cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dc48ed0"/>
        <function-ref name="isInput" scoped="" ref="0x7dc47010"/>
        <function-ref name="toggle" scoped="" ref="0x7dc470f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dc471d0"/>
        <function-ref name="get" scoped="" ref="0x7dc472b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dc47390"/>
        <function-ref name="set" scoped="" ref="0x7dc47470"/>
        <function-ref name="clr" scoped="" ref="0x7dc47550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7dc28920" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7dc28920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc28af8"/>
        <function-ref name="write" scoped="" ref="0x7dc28bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dc30c58" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dc30c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc30e30"/>
        <function-ref name="write" scoped="" ref="0x7dc30f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dc31190" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dc31190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc31368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dc27f18" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc27f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc26108"/>
        <function-ref name="write" scoped="" ref="0x7dc261e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dc284e8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dc284e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc286c0"/>
        <function-ref name="write" scoped="" ref="0x7dc287a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7dc28d58" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7dc28d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc27010"/>
        <function-ref name="write" scoped="" ref="0x7dc270f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dc303e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dc303e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc305c0"/>
        <function-ref name="write" scoped="" ref="0x7dc306a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7dc346e8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7dc346e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7dc348c0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7dc349a0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7dc34a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dc33010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dc33010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc331e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7dc31b98" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7dc31b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc31d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dc31840" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dc31840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc31a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dc280b0" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dc280b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc28288"/>
        <function-ref name="write" scoped="" ref="0x7dc28368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dc314e8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dc314e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc316c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dc27ae0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dc27ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc27cb8"/>
        <function-ref name="write" scoped="" ref="0x7dc27d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dc26368" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dc26368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc26640"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc26720"/>
        <function-ref name="write" scoped="" ref="0x7dc26800"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc268e0"/>
        <function-ref name="readDone" scoped="" ref="0x7dc269c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dc33368" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dc33368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc33540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dc30820" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dc30820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc309f8"/>
        <function-ref name="write" scoped="" ref="0x7dc30ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dc31ef0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dc31ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc30188"/>
        <function-ref name="write" scoped="" ref="0x7dc30268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dc336c0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dc336c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc33898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dc34030" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dc34030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dc34208"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dc342e8"/>
        <function-ref name="request" scoped="" ref="0x7dc343c8"/>
        <function-ref name="granted" scoped="" ref="0x7dc344a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7dc34588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dc276a8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dc276a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc27880"/>
        <function-ref name="write" scoped="" ref="0x7dc27960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dc27270" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dc27270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc27448"/>
        <function-ref name="write" scoped="" ref="0x7dc27528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dc34c00" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc34c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc34dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dc33d70" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dc33d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc31010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dc33a18" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dc33a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc33bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dc26b40" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dc26b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc26d18"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc26df8"/>
        <function-ref name="write" scoped="" ref="0x7dc26ed8"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc24010"/>
        <function-ref name="readDone" scoped="" ref="0x7dc240f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7dc1d6e8" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7dc1d6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc1d8c0"/>
        <function-ref name="write" scoped="" ref="0x7dc1d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dc1fa00" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dc1fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc1fbd8"/>
        <function-ref name="write" scoped="" ref="0x7dc1fcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dc21ef0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dc21ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc200e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dc1ccb8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc1ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc1ce90"/>
        <function-ref name="write" scoped="" ref="0x7dc1b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dc1d2b0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dc1d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc1d488"/>
        <function-ref name="write" scoped="" ref="0x7dc1d568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7dc1db20" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7dc1db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc1dcf8"/>
        <function-ref name="write" scoped="" ref="0x7dc1ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dc1f190" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dc1f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc1f368"/>
        <function-ref name="write" scoped="" ref="0x7dc1f448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7dc225a0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7dc225a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7dc22778"/>
        <function-ref name="abortRelease" scoped="" ref="0x7dc22858"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7dc22938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dc22e10" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dc22e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc21010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7dc20910" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7dc20910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc20ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dc205b8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dc205b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc20790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dc1fe38" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dc1fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc1d050"/>
        <function-ref name="write" scoped="" ref="0x7dc1d130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dc20260" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dc20260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc20438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dc1c880" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dc1c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc1ca58"/>
        <function-ref name="write" scoped="" ref="0x7dc1cb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dc1b190" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dc1b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc1b468"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc1b548"/>
        <function-ref name="write" scoped="" ref="0x7dc1b628"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc1b708"/>
        <function-ref name="readDone" scoped="" ref="0x7dc1b7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dc21190" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dc21190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc21368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dc1f5c8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dc1f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc1f7a0"/>
        <function-ref name="write" scoped="" ref="0x7dc1f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dc20c68" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dc20c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc20ec0"/>
        <function-ref name="write" scoped="" ref="0x7dc1f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dc214e8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dc214e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc216c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dc23ea0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dc23ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dc220c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dc221a0"/>
        <function-ref name="request" scoped="" ref="0x7dc22280"/>
        <function-ref name="granted" scoped="" ref="0x7dc22360"/>
        <function-ref name="isOwner" scoped="" ref="0x7dc22440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dc1c448" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dc1c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc1c620"/>
        <function-ref name="write" scoped="" ref="0x7dc1c700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dc1c010" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dc1c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc1c1e8"/>
        <function-ref name="write" scoped="" ref="0x7dc1c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dc22ab8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc22ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc22c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dc21b98" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dc21b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc21d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dc21840" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dc21840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc21a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dc1b968" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dc1b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc1bb40"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc1bc20"/>
        <function-ref name="write" scoped="" ref="0x7dc1bd00"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc1bde0"/>
        <function-ref name="readDone" scoped="" ref="0x7dc1bec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7dc153f8" loc="43:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7dc153f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7dc155d0"/>
        <function-ref name="changed" scoped="" ref="0x7dc156b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7dc15790"/>
        <function-ref name="setAddress" scoped="" ref="0x7dc15870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7dbf6a90" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7dbf6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7dbf6c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7dbff6b8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7dbff6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7dbff890"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7dbff970"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7dbffa50"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7dbffb30"/>
        <function-ref name="setCca" scoped="" ref="0x7dbffc10"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7dbffcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7dbf6730" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7dbf6730"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7dbf6908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7dbff010" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7dbff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dbff1e8"/>
        <function-ref name="cancel" scoped="" ref="0x7dbff2c8"/>
        <function-ref name="modify" scoped="" ref="0x7dbff3a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7dbff488"/>
        <function-ref name="resend" scoped="" ref="0x7dbff568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7dc00b98" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7dc00b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dc00d70"/>
        <function-ref name="stop" scoped="" ref="0x7dc00e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimeStamping" ref="0x7dbf98e0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioTimeStamping" scoped="" ref="0x7dbf98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7dbf9ab8"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7dbf9b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7dbdbe70" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7dbdbe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7dbd9070"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7dbd9150"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7dbd9230"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7dbd9310"/>
        <function-ref name="setCca" scoped="" ref="0x7dbd93f0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7dbd94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7dbd9ad8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7dbd9ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7dbd9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7dbd1b48" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dbd1b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dbd1d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7dbd6498" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7dbd6498"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7dbd6670"/>
        <function-ref name="disable" scoped="" ref="0x7dbd6750"/>
        <function-ref name="captured" scoped="" ref="0x7dbd6830"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7dbd6910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7dbd8320" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7dbd8320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dbd7668"/>
        <function-ref name="fired" scoped="" ref="0x7dbd8f10"/>
        <function-ref name="startAt" scoped="" ref="0x7dbd7328"/>
        <function-ref name="isRunning" scoped="" ref="0x7dbd7128"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dbd7868"/>
        <function-ref name="start" scoped="" ref="0x7dbd8a70"/>
        <function-ref name="stop" scoped="" ref="0x7dbd8d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7dbd7a30" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7dbd7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7dbd7c08"/>
        <function-ref name="getRssi" scoped="" ref="0x7dbd7ce8"/>
        <function-ref name="getPower" scoped="" ref="0x7dbd7dc8"/>
        <function-ref name="getLqi" scoped="" ref="0x7dbd7ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7dbd2b10" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dbd2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dbd2ce8"/>
        <function-ref name="write" scoped="" ref="0x7dbd2dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7dbd1010" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dbd1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dbd11e8"/>
        <function-ref name="write" scoped="" ref="0x7dbd12c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7dbc5408" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7dbc5408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dbc56e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7dbc57c0"/>
        <function-ref name="sfd" scoped="" ref="0x7dbc58a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dbdb7a8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dbdb7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dbdb980"/>
        <function-ref name="cancel" scoped="" ref="0x7dbdba60"/>
        <function-ref name="modify" scoped="" ref="0x7dbdbb40"/>
        <function-ref name="sendDone" scoped="" ref="0x7dbdbc20"/>
        <function-ref name="resend" scoped="" ref="0x7dbdbd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7dbd4ed8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7dbd4ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7dbd20c0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7dbd21a0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7dbd2280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7dbd1ec0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dbd1ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dbd00c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7dbd5450" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7dbd5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dbd56a8"/>
        <function-ref name="isInput" scoped="" ref="0x7dbd5788"/>
        <function-ref name="toggle" scoped="" ref="0x7dbd5868"/>
        <function-ref name="isOutput" scoped="" ref="0x7dbd5948"/>
        <function-ref name="get" scoped="" ref="0x7dbd5a28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dbd5b08"/>
        <function-ref name="set" scoped="" ref="0x7dbd5be8"/>
        <function-ref name="clr" scoped="" ref="0x7dbd5cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dbdb010" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dbdb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dbdb1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7dbd6040" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dbd6040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7dbd6218"/>
        <function-ref name="getMetadata" scoped="" ref="0x7dbd62f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7dbd0260" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dbd0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dbd0438"/>
        <function-ref name="write" scoped="" ref="0x7dbd0518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7dbd4810" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7dbd4810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dbd49e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dbd4ac8"/>
        <function-ref name="request" scoped="" ref="0x7dbd4ba8"/>
        <function-ref name="granted" scoped="" ref="0x7dbd4c88"/>
        <function-ref name="isOwner" scoped="" ref="0x7dbd4d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7dbd6aa8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7dbd6aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dbd6c80"/>
        <function-ref name="isInput" scoped="" ref="0x7dbd6d60"/>
        <function-ref name="toggle" scoped="" ref="0x7dbd6e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7dbd6f20"/>
        <function-ref name="get" scoped="" ref="0x7dbd5018"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dbd50f8"/>
        <function-ref name="set" scoped="" ref="0x7dbd51d8"/>
        <function-ref name="clr" scoped="" ref="0x7dbd52b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7dbd1460" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dbd1460"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dbd1638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7dbd5e60" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7dbd5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dbd4050"/>
        <function-ref name="isInput" scoped="" ref="0x7dbd4130"/>
        <function-ref name="toggle" scoped="" ref="0x7dbd4210"/>
        <function-ref name="isOutput" scoped="" ref="0x7dbd42f0"/>
        <function-ref name="get" scoped="" ref="0x7dbd43d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dbd44b0"/>
        <function-ref name="set" scoped="" ref="0x7dbd4590"/>
        <function-ref name="clr" scoped="" ref="0x7dbd4670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7dbc5a08" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7dbc5a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7dbc5be0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7dbc5cc0"/>
        <function-ref name="led1On" scoped="" ref="0x7dbc5da0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7dbc5e80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7dbc8010"/>
        <function-ref name="get" scoped="" ref="0x7dbc80f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7dbc81d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7dbc8550"/>
        <function-ref name="set" scoped="" ref="0x7dbc82b0"/>
        <function-ref name="led0On" scoped="" ref="0x7dbc8390"/>
        <function-ref name="led2On" scoped="" ref="0x7dbc8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeStamp" ref="0x7dbd9678" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStamp" scoped="" ref="0x7dbd9678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7dbd9850"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7dbd9930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7dbdb358" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7dbdb358"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dbdb530"/>
        <function-ref name="stop" scoped="" ref="0x7dbdb610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7dbd2418" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dbd2418"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dbd25f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7dbd26d0"/>
        <function-ref name="write" scoped="" ref="0x7dbd27b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7dbd2890"/>
        <function-ref name="readDone" scoped="" ref="0x7dbd2970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7dbd17d0" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dbd17d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dbd19a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7dbd9e58" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7dbd9e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7dbd8050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7db72920" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7db72920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db72af8"/>
        <function-ref name="write" scoped="" ref="0x7db72bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7db73c58" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7db73c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db73e30"/>
        <function-ref name="write" scoped="" ref="0x7db73f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7db75190" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7db75190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db75368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7db71f18" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7db71f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db70108"/>
        <function-ref name="write" scoped="" ref="0x7db701e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7db724e8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7db724e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db726c0"/>
        <function-ref name="write" scoped="" ref="0x7db727a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7db72d58" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7db72d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db71010"/>
        <function-ref name="write" scoped="" ref="0x7db710f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7db733e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7db733e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db735c0"/>
        <function-ref name="write" scoped="" ref="0x7db736a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7db77728" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7db77728"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7db77900"/>
        <function-ref name="abortRelease" scoped="" ref="0x7db779e0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7db77ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7db76010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7db76010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db761e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7db75b98" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7db75b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db75d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7db75840" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7db75840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db75a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7db720b0" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7db720b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db72288"/>
        <function-ref name="write" scoped="" ref="0x7db72368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7db754e8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7db754e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db756c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7db71ae0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7db71ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db71cb8"/>
        <function-ref name="write" scoped="" ref="0x7db71d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7db70368" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7db70368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7db70640"/>
        <function-ref name="writeDone" scoped="" ref="0x7db70720"/>
        <function-ref name="write" scoped="" ref="0x7db70800"/>
        <function-ref name="beginRead" scoped="" ref="0x7db708e0"/>
        <function-ref name="readDone" scoped="" ref="0x7db709c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7db76368" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7db76368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db76540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7db73820" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7db73820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db739f8"/>
        <function-ref name="write" scoped="" ref="0x7db73ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7db75ef0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7db75ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db73188"/>
        <function-ref name="write" scoped="" ref="0x7db73268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7db766c0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7db766c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db76898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7db77070" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7db77070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7db77248"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7db77328"/>
        <function-ref name="request" scoped="" ref="0x7db77408"/>
        <function-ref name="granted" scoped="" ref="0x7db774e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7db775c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7db716a8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7db716a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db71880"/>
        <function-ref name="write" scoped="" ref="0x7db71960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7db71270" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7db71270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db71448"/>
        <function-ref name="write" scoped="" ref="0x7db71528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7db77c40" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7db77c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db77e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7db76d70" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7db76d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db75010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7db76a18" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7db76a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db76bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7db70b40" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7db70b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7db70d18"/>
        <function-ref name="writeDone" scoped="" ref="0x7db70df8"/>
        <function-ref name="write" scoped="" ref="0x7db70ed8"/>
        <function-ref name="beginRead" scoped="" ref="0x7db69010"/>
        <function-ref name="readDone" scoped="" ref="0x7db690f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7db62900" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7db62900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7db62ad8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7db62bb8"/>
        <function-ref name="sfd" scoped="" ref="0x7db62c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7db62e00" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7db62e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7db61010"/>
        <function-ref name="receive" scoped="" ref="0x7db610f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7db611d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7db61378" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7db61378"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7db61550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7db624d8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7db624d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7db626b0"/>
        <function-ref name="stop" scoped="" ref="0x7db62790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7db5b608" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7db5b608"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db5b7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7db5b8c0"/>
        <function-ref name="toggle" scoped="" ref="0x7db5b9a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7db5ba80"/>
        <function-ref name="get" scoped="" ref="0x7db5bb60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db5bc40"/>
        <function-ref name="set" scoped="" ref="0x7db5bd20"/>
        <function-ref name="clr" scoped="" ref="0x7db5be00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7db57010" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7db57010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7db571e8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7db572c8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7db573a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7db57488"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7db57568"/>
        <function-ref name="setChannel" scoped="" ref="0x7db57648"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7db57728"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7db57808"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7db578e8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7db579c8"/>
        <function-ref name="sync" scoped="" ref="0x7db57aa8"/>
        <function-ref name="getChannel" scoped="" ref="0x7db57b88"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7db57c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7db51278" loc="109:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7db51278"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7db51450"/>
        <function-ref name="runTask" scoped="" ref="0x7db51530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7db5a010" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7db5a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db5a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7db5a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7db5a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7db5a488"/>
        <function-ref name="get" scoped="" ref="0x7db5a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db5a648"/>
        <function-ref name="set" scoped="" ref="0x7db5a728"/>
        <function-ref name="clr" scoped="" ref="0x7db5a808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7db58578" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7db58578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7db58750"/>
        <function-ref name="getRssi" scoped="" ref="0x7db58830"/>
        <function-ref name="getPower" scoped="" ref="0x7db58910"/>
        <function-ref name="getLqi" scoped="" ref="0x7db589f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7db5dd70" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7db5dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7db5c010"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7db5c0f0"/>
        <function-ref name="sfd" scoped="" ref="0x7db5c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7db59df0" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7db59df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db58010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7db5cbe8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7db5cbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db5cdc0"/>
        <function-ref name="isInput" scoped="" ref="0x7db5cea0"/>
        <function-ref name="toggle" scoped="" ref="0x7db5b010"/>
        <function-ref name="isOutput" scoped="" ref="0x7db5b0f0"/>
        <function-ref name="get" scoped="" ref="0x7db5b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db5b2b0"/>
        <function-ref name="set" scoped="" ref="0x7db5b390"/>
        <function-ref name="clr" scoped="" ref="0x7db5b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7db5d600" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7db5d600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7db5d7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7db58b68" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7db58b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7db58d40"/>
        <function-ref name="getMetadata" scoped="" ref="0x7db58e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7db5c338" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7db5c338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7db5c510"/>
        <function-ref name="receive" scoped="" ref="0x7db5c5f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7db5c6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7db59010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7db59010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7db591e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7db592c8"/>
        <function-ref name="request" scoped="" ref="0x7db593a8"/>
        <function-ref name="granted" scoped="" ref="0x7db59488"/>
        <function-ref name="isOwner" scoped="" ref="0x7db59568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7db59700" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7db59700"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7db598d8"/>
        <function-ref name="writeDone" scoped="" ref="0x7db599b8"/>
        <function-ref name="write" scoped="" ref="0x7db59a98"/>
        <function-ref name="beginRead" scoped="" ref="0x7db59b78"/>
        <function-ref name="readDone" scoped="" ref="0x7db59c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7db5c878" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7db5c878"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7db5ca50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7db57e50" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7db57e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7db56050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7db56130"/>
        <function-ref name="led1On" scoped="" ref="0x7db56210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7db562f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7db563d0"/>
        <function-ref name="get" scoped="" ref="0x7db564b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7db56590"/>
        <function-ref name="led2Off" scoped="" ref="0x7db56910"/>
        <function-ref name="set" scoped="" ref="0x7db56670"/>
        <function-ref name="led0On" scoped="" ref="0x7db56750"/>
        <function-ref name="led2On" scoped="" ref="0x7db56830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7db5a9a8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7db5a9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7db5ab80"/>
        <function-ref name="disable" scoped="" ref="0x7db5ac60"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7db5ad40"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7db5ae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7db581b0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7db581b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db58408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7db5d948" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7db5d948"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7db5db20"/>
        <function-ref name="stop" scoped="" ref="0x7db5dc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7db1b9b0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7db1b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7db1bb88"/>
        <function-ref name="getRssi" scoped="" ref="0x7db1bc68"/>
        <function-ref name="getPower" scoped="" ref="0x7db1bd48"/>
        <function-ref name="getLqi" scoped="" ref="0x7db1be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7db1a500" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7db1a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7db1a6d8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7db1a7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7db1a010" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7db1a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7db1a1e8"/>
        <function-ref name="noAck" scoped="" ref="0x7db1a2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7db1a3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7db05368" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7db05368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db05540"/>
        <function-ref name="write" scoped="" ref="0x7db05620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7db066a8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7db066a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db06880"/>
        <function-ref name="write" scoped="" ref="0x7db06960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7db09b98" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7db09b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db09d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7db048a0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7db048a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db04a78"/>
        <function-ref name="write" scoped="" ref="0x7db04b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7db06f18" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7db06f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db05108"/>
        <function-ref name="write" scoped="" ref="0x7db051e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7db057a0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7db057a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db05978"/>
        <function-ref name="write" scoped="" ref="0x7db05a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7db07dc8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7db07dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db06010"/>
        <function-ref name="write" scoped="" ref="0x7db060f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7db1c250" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7db1c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7db1c428"/>
        <function-ref name="abortRelease" scoped="" ref="0x7db1c508"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7db1c5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7db1cac0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7db1cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db1cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7db075b8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7db075b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db07790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7db07260" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7db07260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db07438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7db06ae0" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7db06ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db06cb8"/>
        <function-ref name="write" scoped="" ref="0x7db06d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7db09ef0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7db09ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db070e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7db04468" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7db04468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db04640"/>
        <function-ref name="write" scoped="" ref="0x7db04720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7db04cd8" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7db04cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7db02010"/>
        <function-ref name="writeDone" scoped="" ref="0x7db020f0"/>
        <function-ref name="write" scoped="" ref="0x7db021d0"/>
        <function-ref name="beginRead" scoped="" ref="0x7db022b0"/>
        <function-ref name="readDone" scoped="" ref="0x7db02390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7db1ce18" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7db1ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db09010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7db06270" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7db06270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db06448"/>
        <function-ref name="write" scoped="" ref="0x7db06528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7db07910" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7db07910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db07b68"/>
        <function-ref name="write" scoped="" ref="0x7db07c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7db09190" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7db09190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db09368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7db1db78" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7db1db78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7db1dd50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7db1de30"/>
        <function-ref name="request" scoped="" ref="0x7db1df10"/>
        <function-ref name="granted" scoped="" ref="0x7db1c010"/>
        <function-ref name="isOwner" scoped="" ref="0x7db1c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7db04030" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7db04030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db04208"/>
        <function-ref name="write" scoped="" ref="0x7db042e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7db05bd8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7db05bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db05db0"/>
        <function-ref name="write" scoped="" ref="0x7db05e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7db1c768" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7db1c768"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db1c940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7db09840" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7db09840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db09a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7db094e8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7db094e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7db096c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7db02510" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7db02510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7db026e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7db027c8"/>
        <function-ref name="write" scoped="" ref="0x7db028a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7db02988"/>
        <function-ref name="readDone" scoped="" ref="0x7db02a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7daf7070" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7daf7070"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7daf7248"/>
        <function-ref name="toIdle" scoped="" ref="0x7daf7328"/>
        <function-ref name="isState" scoped="" ref="0x7daf7408"/>
        <function-ref name="isIdle" scoped="" ref="0x7daf74e8"/>
        <function-ref name="requestState" scoped="" ref="0x7daf75c8"/>
        <function-ref name="forceState" scoped="" ref="0x7daf76a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7daf0380" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7daf0380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7daf0558"/>
        <function-ref name="getPayload" scoped="" ref="0x7daf0638"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7daf0718"/>
        <function-ref name="cancel" scoped="" ref="0x7daf07f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7daf08d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7daf4bd0" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7daf4bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7daf4da8"/>
        <function-ref name="getPayload" scoped="" ref="0x7daf4e88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7daf0010"/>
        <function-ref name="cancel" scoped="" ref="0x7daf00f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7daf01d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7dae5398" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7dae5398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dae5570"/>
        <function-ref name="getPayload" scoped="" ref="0x7dae5650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dae5730"/>
        <function-ref name="cancel" scoped="" ref="0x7dae5810"/>
        <function-ref name="sendDone" scoped="" ref="0x7dae58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dae7898" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dae7898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dae7a70"/>
        <function-ref name="getPayload" scoped="" ref="0x7dae7b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dae7c30"/>
        <function-ref name="cancel" scoped="" ref="0x7dae7d10"/>
        <function-ref name="sendDone" scoped="" ref="0x7dae7df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7dae4238" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7dae4238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7dae4410"/>
        <function-ref name="rand32" scoped="" ref="0x7dae44f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dae5010" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dae5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dae51e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7dae4648" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dae4648"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7dae4820"/>
        <function-ref name="getMetadata" scoped="" ref="0x7dae4900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7dae5a38" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7dae5a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dae5c10"/>
        <function-ref name="toIdle" scoped="" ref="0x7dae5cf0"/>
        <function-ref name="isState" scoped="" ref="0x7dae5dd0"/>
        <function-ref name="isIdle" scoped="" ref="0x7dae5eb0"/>
        <function-ref name="requestState" scoped="" ref="0x7dae4010"/>
        <function-ref name="forceState" scoped="" ref="0x7dae40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7dae93a8" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7dae93a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dae9580"/>
        <function-ref name="toIdle" scoped="" ref="0x7dae9660"/>
        <function-ref name="isState" scoped="" ref="0x7dae9740"/>
        <function-ref name="isIdle" scoped="" ref="0x7dae9820"/>
        <function-ref name="requestState" scoped="" ref="0x7dae9900"/>
        <function-ref name="forceState" scoped="" ref="0x7dae99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7dad86e0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7dad86e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7dad88b8"/>
        <function-ref name="receive" scoped="" ref="0x7dad8998"/>
        <function-ref name="getPayload" scoped="" ref="0x7dad8a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dadbc48" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dadbc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7dadbe20"/>
        <function-ref name="receive" scoped="" ref="0x7dadbf00"/>
        <function-ref name="getPayload" scoped="" ref="0x7dad8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7dad8190" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7dad8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7dad8368"/>
        <function-ref name="receive" scoped="" ref="0x7dad8448"/>
        <function-ref name="getPayload" scoped="" ref="0x7dad8528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7dad3d98" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7dad3d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7dad2010"/>
        <function-ref name="receive" scoped="" ref="0x7dad20f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7dad21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dad3a08" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dad3a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dad3be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dad3010" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dad3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7dad31e8"/>
        <function-ref name="receive" scoped="" ref="0x7dad32c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7dad33a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7dad2328" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dad2328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7dad2500"/>
        <function-ref name="getMetadata" scoped="" ref="0x7dad25e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7dad3528" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7dad3528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7dad3700"/>
        <function-ref name="receive" scoped="" ref="0x7dad37e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7dad38c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7dab6a28" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7dab6a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7dab6c00"/>
        <function-ref name="receive" scoped="" ref="0x7dab6ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7dab6dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7dab5010" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7dab5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dab51e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7dab52c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dab53a8"/>
        <function-ref name="cancel" scoped="" ref="0x7dab5488"/>
        <function-ref name="sendDone" scoped="" ref="0x7dab5568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dab7da0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dab7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dab6010"/>
        <function-ref name="getPayload" scoped="" ref="0x7dab60f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dab61d0"/>
        <function-ref name="cancel" scoped="" ref="0x7dab62b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dab6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dab64d8" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dab64d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7dab66b0"/>
        <function-ref name="receive" scoped="" ref="0x7dab6790"/>
        <function-ref name="getPayload" scoped="" ref="0x7dab6870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7dab1c70" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7dab1c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7dab1e48"/>
        <function-ref name="stopDone" scoped="" ref="0x7dab1f28"/>
        <function-ref name="start" scoped="" ref="0x7dab0018"/>
        <function-ref name="stop" scoped="" ref="0x7dab00f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7dab0a58" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7dab0a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dab0c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7dab0d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dab0df0"/>
        <function-ref name="cancel" scoped="" ref="0x7dab0ed0"/>
        <function-ref name="sendDone" scoped="" ref="0x7daaa010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7daaa188" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7daaa188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7daaa360"/>
        <function-ref name="receive" scoped="" ref="0x7daaa440"/>
        <function-ref name="getPayload" scoped="" ref="0x7daaa520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dab2500" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dab2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dab26d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7dab27b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dab2898"/>
        <function-ref name="cancel" scoped="" ref="0x7dab2978"/>
        <function-ref name="sendDone" scoped="" ref="0x7dab2a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7dab1168" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7dab1168"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x7dab1340"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x7dab1420"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x7dab1500"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x7dab15e0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x7dab16c0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x7dab17a0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x7dab1880"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x7dab1960"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x7dab1a40"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x7dab1b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7dab0270" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7dab0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dab0448"/>
        <function-ref name="toIdle" scoped="" ref="0x7dab0528"/>
        <function-ref name="isState" scoped="" ref="0x7dab0608"/>
        <function-ref name="isIdle" scoped="" ref="0x7dab06e8"/>
        <function-ref name="requestState" scoped="" ref="0x7dab07c8"/>
        <function-ref name="forceState" scoped="" ref="0x7dab08a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7daaa6a0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7daaa6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7daaa878"/>
        <function-ref name="stopDone" scoped="" ref="0x7daaa958"/>
        <function-ref name="start" scoped="" ref="0x7daaaa38"/>
        <function-ref name="stop" scoped="" ref="0x7daaab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dab2ba0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dab2ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7dab2d78"/>
        <function-ref name="receive" scoped="" ref="0x7dab2e58"/>
        <function-ref name="getPayload" scoped="" ref="0x7dab1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7daa8ae8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7daa8ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x7daa8cc0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x7daa8da0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x7daa8e80"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x7daa5010"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x7daa50f0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x7daa51d0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x7daa52b0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x7daa5390"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x7daa5470"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x7daa5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7daa7450" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7daa7450"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7daa7628"/>
        <function-ref name="toIdle" scoped="" ref="0x7daa7708"/>
        <function-ref name="isState" scoped="" ref="0x7daa77e8"/>
        <function-ref name="isIdle" scoped="" ref="0x7daa78c8"/>
        <function-ref name="requestState" scoped="" ref="0x7daa79a8"/>
        <function-ref name="forceState" scoped="" ref="0x7daa7a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7da98768" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7da98768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da98940"/>
        <function-ref name="getPayload" scoped="" ref="0x7da98a20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da98b00"/>
        <function-ref name="cancel" scoped="" ref="0x7da98be0"/>
        <function-ref name="sendDone" scoped="" ref="0x7da98cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7da9b998" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7da9b998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da9bb70"/>
        <function-ref name="getPayload" scoped="" ref="0x7da9bc50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da9bd30"/>
        <function-ref name="cancel" scoped="" ref="0x7da9be10"/>
        <function-ref name="sendDone" scoped="" ref="0x7da9bef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7da98060" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7da98060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7da98238"/>
        <function-ref name="setRetries" scoped="" ref="0x7da98318"/>
        <function-ref name="getRetries" scoped="" ref="0x7da983f8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7da984d8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7da985b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7da92368" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7da92368"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7da92540"/>
        <function-ref name="noAck" scoped="" ref="0x7da92620"/>
        <function-ref name="wasAcked" scoped="" ref="0x7da92700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7da96c30" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7da96c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7da96e08"/>
        <function-ref name="setRetries" scoped="" ref="0x7da96ee8"/>
        <function-ref name="getRetries" scoped="" ref="0x7da92010"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7da920f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7da921d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7da565e0" loc="32:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7da565e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7e7f75c0"/>
              <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7e7f78e0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7da56c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7da7b0a0" loc="31:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7da7b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7e7f75c0"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7e7f78e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7da560d8"/>
        <function-ref name="evicted" scoped="" ref="0x7da7bb68"/>
        <function-ref name="insert" scoped="" ref="0x7da7b8a8"/>
        <function-ref name="flush" scoped="" ref="0x7da56378"/>
        <function-ref name="lookup" scoped="" ref="0x7da7be08"/>
        <function-ref name="size" scoped="" ref="0x7da7b6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d3733d0" loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d3733d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d3735a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7d372d38" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7d372d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7e7f75c0"/>
              <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7e7f78e0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d370370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7d373778" loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7d373778"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7e7f75c0"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7e7f78e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7d372830"/>
        <function-ref name="evicted" scoped="" ref="0x7d3722d0"/>
        <function-ref name="insert" scoped="" ref="0x7d372010"/>
        <function-ref name="flush" scoped="" ref="0x7d372ad0"/>
        <function-ref name="lookup" scoped="" ref="0x7d372570"/>
        <function-ref name="size" scoped="" ref="0x7d373da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7da512b0" loc="32:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7da512b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7e7f8ce0"/>
              <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7e7f7058"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7da518d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7da54d28" loc="31:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7da54d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7e7f8ce0"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7e7f7058"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7da53d70"/>
        <function-ref name="evicted" scoped="" ref="0x7da53810"/>
        <function-ref name="insert" scoped="" ref="0x7da53550"/>
        <function-ref name="flush" scoped="" ref="0x7da51048"/>
        <function-ref name="lookup" scoped="" ref="0x7da53ab0"/>
        <function-ref name="size" scoped="" ref="0x7da53370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d3577f8" loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d3577f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d3579d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7d354110" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7d354110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7e7f8ce0"/>
              <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7e7f7058"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d354738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7d357ba0" loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7d357ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7e7f8ce0"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7e7f7058"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7d356be0"/>
        <function-ref name="evicted" scoped="" ref="0x7d356680"/>
        <function-ref name="insert" scoped="" ref="0x7d3563c0"/>
        <function-ref name="flush" scoped="" ref="0x7d356e80"/>
        <function-ref name="lookup" scoped="" ref="0x7d356920"/>
        <function-ref name="size" scoped="" ref="0x7d3561e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataTimer" ref="0x7da49c30" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataTimer" scoped="" ref="0x7da49c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataTimer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="expired" scoped="" ref="0x7da48818"/>
        <function-ref name="start" scoped="" ref="0x7da48278"/>
        <function-ref name="stop" scoped="" ref="0x7da48598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d3458f0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d3458f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d343208"/>
        <function-ref name="fired" scoped="" ref="0x7d344610"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d344bb0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d3449d0"/>
        <function-ref name="getdt" scoped="" ref="0x7d3435c8"/>
        <function-ref name="gett0" scoped="" ref="0x7d3433e8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d3447f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d345f18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d344ed0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d3441b0"/>
        <function-ref name="stop" scoped="" ref="0x7d344430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataTimer" ref="0x7d341730" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.DataTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataTimer" scoped="" ref="0x7d341730"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataTimer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="expired" scoped="" ref="0x7d340318"/>
        <function-ref name="start" scoped="" ref="0x7d341d58"/>
        <function-ref name="stop" scoped="" ref="0x7d340098"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d341388" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.DataTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d341388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d341560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d340610" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.DataTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d340610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d336f10"/>
        <function-ref name="fired" scoped="" ref="0x7d336330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d3368d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d3366f0"/>
        <function-ref name="getdt" scoped="" ref="0x7d3342e8"/>
        <function-ref name="gett0" scoped="" ref="0x7d334108"/>
        <function-ref name="isRunning" scoped="" ref="0x7d336510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d340c38"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d336bf0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d340eb8"/>
        <function-ref name="stop" scoped="" ref="0x7d336150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7da1f630" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.ComposeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7da1f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7da1f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7da1f968" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.ComposeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7da1f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7da1fb40"/>
        <function-ref name="clear" scoped="" ref="0x7da1fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7da1fd00"/>
        <function-ref name="get" scoped="" ref="0x7da1fde0"/>
        <function-ref name="assign" scoped="" ref="0x7da1fec0"/>
        <function-ref name="setAll" scoped="" ref="0x7da1e010"/>
        <function-ref name="set" scoped="" ref="0x7da1e0f0"/>
        <function-ref name="size" scoped="" ref="0x7da1e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7da1d010" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.SalvageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7da1d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7da1d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7da1d348" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.SalvageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7da1d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7da1d520"/>
        <function-ref name="clear" scoped="" ref="0x7da1d600"/>
        <function-ref name="toggle" scoped="" ref="0x7da1d6e0"/>
        <function-ref name="get" scoped="" ref="0x7da1d7c0"/>
        <function-ref name="assign" scoped="" ref="0x7da1d8a0"/>
        <function-ref name="setAll" scoped="" ref="0x7da1d980"/>
        <function-ref name="set" scoped="" ref="0x7da1da60"/>
        <function-ref name="size" scoped="" ref="0x7da1db40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7da113b0" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7da113b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da11588"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da11668"/>
        <function-ref name="getPayload" scoped="" ref="0x7da11748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da11828"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da11908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SubPacket" ref="0x7da11a88" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7da11a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da11c60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da11d40"/>
        <function-ref name="getPayload" scoped="" ref="0x7da11e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da11f00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d977010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7da02258" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7da02258"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da02430"/>
        <function-ref name="getPayload" scoped="" ref="0x7da02510"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da025f0"/>
        <function-ref name="cancel" scoped="" ref="0x7da026d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7da027b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7da02bb8" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7da02bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7da02d90"/>
        <function-ref name="receive" scoped="" ref="0x7da02e70"/>
        <function-ref name="getPayload" scoped="" ref="0x7da00010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketEngineClient" ref="0x7da00d70" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7da00d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7ef634d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7d9ff010"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7d9ff0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7da06610" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7da06610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7da067e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7da07548" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7da07548"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7ef634d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da07720"/>
        <function-ref name="getPayload" scoped="" ref="0x7da07800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da078e0"/>
        <function-ref name="cancel" scoped="" ref="0x7da079c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7da07aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7da06930" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7da06930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da06b08"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da06be8"/>
        <function-ref name="getPayload" scoped="" ref="0x7da06cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da06da8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da06e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7da03460" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7da03460"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7da03d08"/>
        <function-ref name="next" scoped="" ref="0x7da03a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7da04278" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7da04278"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7da04450"/>
        <function-ref name="send" scoped="" ref="0x7da04530"/>
        <function-ref name="receive" scoped="" ref="0x7da04610"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7da046f0"/>
        <function-ref name="sendAdded" scoped="" ref="0x7da047d0"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7da048b0"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7da04990"/>
        <function-ref name="packet" scoped="" ref="0x7da04a70"/>
        <function-ref name="sendDone" scoped="" ref="0x7da04b50"/>
        <function-ref name="drop" scoped="" ref="0x7da04c30"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7da04d10"/>
        <function-ref name="waitList" scoped="" ref="0x7da04df0"/>
        <function-ref name="setUpperType" scoped="" ref="0x7da04ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7da07e78" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7da07e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7da06070"/>
        <function-ref name="receive" scoped="" ref="0x7da06150"/>
        <function-ref name="getPayload" scoped="" ref="0x7da06230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7da00418" loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7da00418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da005f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da006d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7da007b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da00890"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da00970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7da08e38" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7da08e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7da07050"/>
        <function-ref name="stop" scoped="" ref="0x7da07130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7d9fc570" loc="32:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="PacketEngineC.SendQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7d9fc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ef52af8"/>
              <typename><typedef-ref name="packet_send_entry_t" ref="0x7ef52d48"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d9fcb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7d9fe030" loc="31:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="PacketEngineC.SendQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7d9fe030"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ef52af8"/>
            <typename><typedef-ref name="packet_send_entry_t" ref="0x7ef52d48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7d9fc068"/>
        <function-ref name="evicted" scoped="" ref="0x7d9feaf8"/>
        <function-ref name="insert" scoped="" ref="0x7d9fe838"/>
        <function-ref name="flush" scoped="" ref="0x7d9fc308"/>
        <function-ref name="lookup" scoped="" ref="0x7d9fed98"/>
        <function-ref name="size" scoped="" ref="0x7d9fe658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d304280" loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="PacketEngineC.SendQueueC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d304280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d304458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7d303b98" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="PacketEngineC.SendQueueC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7d303b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ef52af8"/>
              <typename><typedef-ref name="packet_send_entry_t" ref="0x7ef52d48"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d3011e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7d304628" loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="PacketEngineC.SendQueueC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7d304628"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ef52af8"/>
            <typename><typedef-ref name="packet_send_entry_t" ref="0x7ef52d48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7d303690"/>
        <function-ref name="evicted" scoped="" ref="0x7d303130"/>
        <function-ref name="insert" scoped="" ref="0x7d304e30"/>
        <function-ref name="flush" scoped="" ref="0x7d303930"/>
        <function-ref name="lookup" scoped="" ref="0x7d3033d0"/>
        <function-ref name="size" scoped="" ref="0x7d304c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7d9f8eb0" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="PacketEngineC.ReceivePoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7d9f8eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
            <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d9f7d28"/>
        <function-ref name="maxSize" scoped="" ref="0x7d9f78a8"/>
        <function-ref name="empty" scoped="" ref="0x7d9f74e8"/>
        <function-ref name="put" scoped="" ref="0x7d9f7a88"/>
        <function-ref name="size" scoped="" ref="0x7d9f76c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7d2f19d0" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="PacketEngineC.ReceivePoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7d2f19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
            <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d2f0850"/>
        <function-ref name="maxSize" scoped="" ref="0x7d2f03d0"/>
        <function-ref name="empty" scoped="" ref="0x7d2f0010"/>
        <function-ref name="put" scoped="" ref="0x7d2f05b0"/>
        <function-ref name="size" scoped="" ref="0x7d2f01f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d2f1628" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="PacketEngineC.ReceivePoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d2f1628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d2f1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7d9e0ca8" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="PacketEngineC.SendPoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7d9e0ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
            <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d9deb28"/>
        <function-ref name="maxSize" scoped="" ref="0x7d9de6a8"/>
        <function-ref name="empty" scoped="" ref="0x7d9de2e8"/>
        <function-ref name="put" scoped="" ref="0x7d9de888"/>
        <function-ref name="size" scoped="" ref="0x7d9de4c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7d2e88d8" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="PacketEngineC.SendPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7d2e88d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
            <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d2e6768"/>
        <function-ref name="maxSize" scoped="" ref="0x7d2e62e8"/>
        <function-ref name="empty" scoped="" ref="0x7d2e8f00"/>
        <function-ref name="put" scoped="" ref="0x7d2e64c8"/>
        <function-ref name="size" scoped="" ref="0x7d2e6108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d2e8530" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="PacketEngineC.SendPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d2e8530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d2e8708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7d9dd640" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="PacketEngineC.SendStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7d9dd640"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7d9dd818"/>
        <function-ref name="toIdle" scoped="" ref="0x7d9dd8f8"/>
        <function-ref name="isState" scoped="" ref="0x7d9dd9d8"/>
        <function-ref name="isIdle" scoped="" ref="0x7d9ddab8"/>
        <function-ref name="requestState" scoped="" ref="0x7d9ddb98"/>
        <function-ref name="forceState" scoped="" ref="0x7d9ddc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d9dc900" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketEngineC.SendBackoffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d9dc900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d9d9208"/>
        <function-ref name="fired" scoped="" ref="0x7d9db618"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d9dbbb8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d9db9d8"/>
        <function-ref name="getdt" scoped="" ref="0x7d9d95c8"/>
        <function-ref name="gett0" scoped="" ref="0x7d9d93e8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d9db7f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d9dcf28"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d9dbed8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d9db1b8"/>
        <function-ref name="stop" scoped="" ref="0x7d9db438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d319ed8" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d319ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d3160c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3161a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d316280"/>
        <function-ref name="cancel" scoped="" ref="0x7d316360"/>
        <function-ref name="sendDone" scoped="" ref="0x7d316440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d316580" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d316580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d316758"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d316838"/>
        <function-ref name="getPayload" scoped="" ref="0x7d316918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3169f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d316ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d316c18" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d316c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d316df0"/>
        <function-ref name="source" scoped="" ref="0x7d316ed0"/>
        <function-ref name="address" scoped="" ref="0x7d315010"/>
        <function-ref name="destination" scoped="" ref="0x7d3150f0"/>
        <function-ref name="setSource" scoped="" ref="0x7d3151d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d3152b0"/>
        <function-ref name="type" scoped="" ref="0x7d315390"/>
        <function-ref name="setType" scoped="" ref="0x7d315470"/>
        <function-ref name="isForMe" scoped="" ref="0x7d315550"/>
        <function-ref name="setGroup" scoped="" ref="0x7d315630"/>
        <function-ref name="localGroup" scoped="" ref="0x7d315710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7d315870" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7d315870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d315a48"/>
        <function-ref name="noAck" scoped="" ref="0x7d315b28"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d315c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d2d00c8" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d2d00c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d2d02a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2d0380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d2d0460"/>
        <function-ref name="cancel" scoped="" ref="0x7d2d0540"/>
        <function-ref name="sendDone" scoped="" ref="0x7d2d0620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7d2d0790" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d2d0790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d2d0968"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2d0a48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d2d0b28"/>
        <function-ref name="cancel" scoped="" ref="0x7d2d0c08"/>
        <function-ref name="sendDone" scoped="" ref="0x7d2d0ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d2d0e28" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d2d0e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d2cf050"/>
        <function-ref name="source" scoped="" ref="0x7d2cf130"/>
        <function-ref name="address" scoped="" ref="0x7d2cf210"/>
        <function-ref name="destination" scoped="" ref="0x7d2cf2f0"/>
        <function-ref name="setSource" scoped="" ref="0x7d2cf3d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d2cf4b0"/>
        <function-ref name="type" scoped="" ref="0x7d2cf590"/>
        <function-ref name="setType" scoped="" ref="0x7d2cf670"/>
        <function-ref name="isForMe" scoped="" ref="0x7d2cf750"/>
        <function-ref name="setGroup" scoped="" ref="0x7d2cf830"/>
        <function-ref name="localGroup" scoped="" ref="0x7d2cf910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d9b52f0" loc="35:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d9b52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9b54c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9b55a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9b5688"/>
        <function-ref name="cancel" scoped="" ref="0x7d9b5768"/>
        <function-ref name="sendDone" scoped="" ref="0x7d9b5848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7d988648" loc="40:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d988648"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d988830"/>
        <function-ref name="getPayload" scoped="" ref="0x7d988910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9889f0"/>
        <function-ref name="cancel" scoped="" ref="0x7d988ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d988bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d9b1ec0" loc="38:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d9b1ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9880c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9881a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d988280"/>
        <function-ref name="cancel" scoped="" ref="0x7d988360"/>
        <function-ref name="sendDone" scoped="" ref="0x7d988440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7d987930" loc="42:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d987930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d987b08"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d987be8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d987cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d987da8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d987e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7d986030" loc="161:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7d986030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d986208"/>
        <function-ref name="runTask" scoped="" ref="0x7d9862e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7d986468" loc="118:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7d986468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d986640"/>
        <function-ref name="runTask" scoped="" ref="0x7d986720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d988cf0" loc="41:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d988cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d988ec8"/>
        <function-ref name="source" scoped="" ref="0x7d987010"/>
        <function-ref name="address" scoped="" ref="0x7d9870f0"/>
        <function-ref name="destination" scoped="" ref="0x7d9871d0"/>
        <function-ref name="setSource" scoped="" ref="0x7d9872b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d987390"/>
        <function-ref name="type" scoped="" ref="0x7d987470"/>
        <function-ref name="setType" scoped="" ref="0x7d987550"/>
        <function-ref name="isForMe" scoped="" ref="0x7d987630"/>
        <function-ref name="setGroup" scoped="" ref="0x7d987710"/>
        <function-ref name="localGroup" scoped="" ref="0x7d9877f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d313150" loc="39:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d313150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d313328"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d313408"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3134e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3135c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d3136a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d314c10" loc="38:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d314c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d314de8"/>
        <function-ref name="receive" scoped="" ref="0x7d314ec8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d313010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d3137e8" loc="40:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d3137e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d3139c0"/>
        <function-ref name="source" scoped="" ref="0x7d313aa0"/>
        <function-ref name="address" scoped="" ref="0x7d313b80"/>
        <function-ref name="destination" scoped="" ref="0x7d313c60"/>
        <function-ref name="setSource" scoped="" ref="0x7d313d40"/>
        <function-ref name="setDestination" scoped="" ref="0x7d313e20"/>
        <function-ref name="type" scoped="" ref="0x7d313f00"/>
        <function-ref name="setType" scoped="" ref="0x7d312010"/>
        <function-ref name="isForMe" scoped="" ref="0x7d3120f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7d3121d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7d3122b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7d970360" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.SinglePacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7d970360"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d970c08"/>
        <function-ref name="next" scoped="" ref="0x7d970988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7d974430" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.SinglePacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7d974430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7d974608"/>
        <function-ref name="send" scoped="" ref="0x7d9746e8"/>
        <function-ref name="receive" scoped="" ref="0x7d9747c8"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7d9748a8"/>
        <function-ref name="sendAdded" scoped="" ref="0x7d974988"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7d974a68"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7d974b48"/>
        <function-ref name="packet" scoped="" ref="0x7d974c28"/>
        <function-ref name="sendDone" scoped="" ref="0x7d974d08"/>
        <function-ref name="drop" scoped="" ref="0x7d974de8"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7d974ec8"/>
        <function-ref name="waitList" scoped="" ref="0x7d970010"/>
        <function-ref name="setUpperType" scoped="" ref="0x7d9700f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7d96cc20" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.DsrPacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7d96cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d96a4d8"/>
        <function-ref name="next" scoped="" ref="0x7d96a258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7d96dc78" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.DsrPacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7d96dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7d96de50"/>
        <function-ref name="send" scoped="" ref="0x7d96c010"/>
        <function-ref name="receive" scoped="" ref="0x7d96c0f0"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7d96c1d0"/>
        <function-ref name="sendAdded" scoped="" ref="0x7d96c2b0"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7d96c390"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7d96c470"/>
        <function-ref name="packet" scoped="" ref="0x7d96c550"/>
        <function-ref name="sendDone" scoped="" ref="0x7d96c630"/>
        <function-ref name="drop" scoped="" ref="0x7d96c710"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7d96c7f0"/>
        <function-ref name="waitList" scoped="" ref="0x7d96c8d0"/>
        <function-ref name="setUpperType" scoped="" ref="0x7d96c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7d962010" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7d962010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7ef634d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9621e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9622c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9623a8"/>
        <function-ref name="cancel" scoped="" ref="0x7d962488"/>
        <function-ref name="sendDone" scoped="" ref="0x7d962568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d965618" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d965618"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d9657f0"/>
        <function-ref name="destination" scoped="" ref="0x7d9658d0"/>
        <function-ref name="setSource" scoped="" ref="0x7d9659b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d965a90"/>
        <function-ref name="isForMe" scoped="" ref="0x7d965b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7d962970" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7d962970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d962b48"/>
        <function-ref name="receive" scoped="" ref="0x7d962c28"/>
        <function-ref name="getPayload" scoped="" ref="0x7d962d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d9635e0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d9635e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9637b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d963898"/>
        <function-ref name="getPayload" scoped="" ref="0x7d963978"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d963a58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d963b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d964010" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d964010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7ef634d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9641e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9642c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9643a8"/>
        <function-ref name="cancel" scoped="" ref="0x7d964488"/>
        <function-ref name="sendDone" scoped="" ref="0x7d964568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7d963100" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7d963100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d9632d8"/>
        <function-ref name="receive" scoped="" ref="0x7d9633b8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d963498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d964940" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d964940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d964b18"/>
        <function-ref name="receive" scoped="" ref="0x7d964bf8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d964cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7d959708" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7d959708"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7ef634d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9598e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9599c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d959aa0"/>
        <function-ref name="cancel" scoped="" ref="0x7d959b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7d959c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d95ccb0" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d95ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d95ce88"/>
        <function-ref name="destination" scoped="" ref="0x7d95b010"/>
        <function-ref name="setSource" scoped="" ref="0x7d95b0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d95b1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d95b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7d958100" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7d958100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d9582d8"/>
        <function-ref name="receive" scoped="" ref="0x7d9583b8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d958498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d95ac88" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d95ac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d95ae60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d959010"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9590f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9591d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d9592b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d95b6c8" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d95b6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7ef634d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d95b8a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d95b980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d95ba60"/>
        <function-ref name="cancel" scoped="" ref="0x7d95bb40"/>
        <function-ref name="sendDone" scoped="" ref="0x7d95bc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7d95a7a8" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7d95a7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d95a980"/>
        <function-ref name="receive" scoped="" ref="0x7d95aa60"/>
        <function-ref name="getPayload" scoped="" ref="0x7d95ab40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7d958610" loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7d958610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9587e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9588c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9589a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d958a88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d958b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d95a010" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d95a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d95a1e8"/>
        <function-ref name="receive" scoped="" ref="0x7d95a2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d95a3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d958cb8" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d958cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d958e90"/>
        <function-ref name="source" scoped="" ref="0x7d957010"/>
        <function-ref name="address" scoped="" ref="0x7d9570f0"/>
        <function-ref name="destination" scoped="" ref="0x7d9571d0"/>
        <function-ref name="setSource" scoped="" ref="0x7d9572b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d957390"/>
        <function-ref name="type" scoped="" ref="0x7d957470"/>
        <function-ref name="setType" scoped="" ref="0x7d957550"/>
        <function-ref name="isForMe" scoped="" ref="0x7d957630"/>
        <function-ref name="setGroup" scoped="" ref="0x7d957710"/>
        <function-ref name="localGroup" scoped="" ref="0x7d9577f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d90cc88" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <component-ref qname="DsrC.DsrSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d90cc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d90ce60"/>
        <function-ref name="destination" scoped="" ref="0x7d90b010"/>
        <function-ref name="setSource" scoped="" ref="0x7d90b0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d90b1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d90b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d90a010" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <component-ref qname="DsrC.DsrSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d90a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d90a1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d90a2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d90a3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d90a488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d90a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d90c5f0" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <component-ref qname="DsrC.DsrSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d90c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d90c7c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d90c8a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d90c988"/>
        <function-ref name="cancel" scoped="" ref="0x7d90ca68"/>
        <function-ref name="sendDone" scoped="" ref="0x7d90cb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d90b3f0" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <component-ref qname="DsrC.DsrSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d90b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d90b5c8"/>
        <function-ref name="source" scoped="" ref="0x7d90b6a8"/>
        <function-ref name="address" scoped="" ref="0x7d90b788"/>
        <function-ref name="destination" scoped="" ref="0x7d90b868"/>
        <function-ref name="setSource" scoped="" ref="0x7d90b948"/>
        <function-ref name="setDestination" scoped="" ref="0x7d90ba28"/>
        <function-ref name="type" scoped="" ref="0x7d90bb08"/>
        <function-ref name="setType" scoped="" ref="0x7d90bbe8"/>
        <function-ref name="isForMe" scoped="" ref="0x7d90bcc8"/>
        <function-ref name="setGroup" scoped="" ref="0x7d90bda8"/>
        <function-ref name="localGroup" scoped="" ref="0x7d90be88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d292010" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="DsrC.DsrSendC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d292010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d2921e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d2922c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2923a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d292488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d292568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d293958" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="DsrC.DsrSendC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d293958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d293b30"/>
        <function-ref name="getPayload" scoped="" ref="0x7d293c10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d293cf0"/>
        <function-ref name="cancel" scoped="" ref="0x7d293dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d293eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngineClient" ref="0x7d28fa78" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <component-ref qname="DsrC.DsrSendC.PacketSenderC.PacketEngineClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7d28fa78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7d28fc50"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7d28fd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7d906778" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d906778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d906950"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d906a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7d906b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d906bf0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d906cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SubPacket" ref="0x7d906e50" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7d906e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d905050"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d905130"/>
        <function-ref name="getPayload" scoped="" ref="0x7d905210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9052f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d9053d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d289260" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d289260"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d289438"/>
        <function-ref name="getPayload" scoped="" ref="0x7d289518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d2895f8"/>
        <function-ref name="cancel" scoped="" ref="0x7d2896d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7d2897b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d2898f8" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d2898f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d289ad0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d289bb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d289c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d289d70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d289e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d288010" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d288010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d2881e8"/>
        <function-ref name="source" scoped="" ref="0x7d2882c8"/>
        <function-ref name="address" scoped="" ref="0x7d2883a8"/>
        <function-ref name="destination" scoped="" ref="0x7d288488"/>
        <function-ref name="setSource" scoped="" ref="0x7d288568"/>
        <function-ref name="setDestination" scoped="" ref="0x7d288648"/>
        <function-ref name="type" scoped="" ref="0x7d288728"/>
        <function-ref name="setType" scoped="" ref="0x7d288808"/>
        <function-ref name="isForMe" scoped="" ref="0x7d2888e8"/>
        <function-ref name="setGroup" scoped="" ref="0x7d2889c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7d288aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7d288c08" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7d288c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d288de0"/>
        <function-ref name="noAck" scoped="" ref="0x7d288ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d287010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d2776a0" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d2776a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d277878"/>
        <function-ref name="getPayload" scoped="" ref="0x7d277958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d277a38"/>
        <function-ref name="cancel" scoped="" ref="0x7d277b18"/>
        <function-ref name="sendDone" scoped="" ref="0x7d277bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7d277d68" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d277d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d276010"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2760f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d2761d0"/>
        <function-ref name="cancel" scoped="" ref="0x7d2762b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d276390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d2764d0" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d2764d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d2766a8"/>
        <function-ref name="source" scoped="" ref="0x7d276788"/>
        <function-ref name="address" scoped="" ref="0x7d276868"/>
        <function-ref name="destination" scoped="" ref="0x7d276948"/>
        <function-ref name="setSource" scoped="" ref="0x7d276a28"/>
        <function-ref name="setDestination" scoped="" ref="0x7d276b08"/>
        <function-ref name="type" scoped="" ref="0x7d276be8"/>
        <function-ref name="setType" scoped="" ref="0x7d276cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x7d276da8"/>
        <function-ref name="setGroup" scoped="" ref="0x7d276e88"/>
        <function-ref name="localGroup" scoped="" ref="0x7d275010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d286508" loc="39:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d286508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d2866e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d2867c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2868a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d286980"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d286a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d286030" loc="38:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d286030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d286208"/>
        <function-ref name="receive" scoped="" ref="0x7d2862e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2863c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d286ba0" loc="40:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d286ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d286d78"/>
        <function-ref name="source" scoped="" ref="0x7d286e58"/>
        <function-ref name="address" scoped="" ref="0x7d285010"/>
        <function-ref name="destination" scoped="" ref="0x7d2850f0"/>
        <function-ref name="setSource" scoped="" ref="0x7d2851d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d2852b0"/>
        <function-ref name="type" scoped="" ref="0x7d285390"/>
        <function-ref name="setType" scoped="" ref="0x7d285470"/>
        <function-ref name="isForMe" scoped="" ref="0x7d285550"/>
        <function-ref name="setGroup" scoped="" ref="0x7d285630"/>
        <function-ref name="localGroup" scoped="" ref="0x7d285710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d689738" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="BigPackC.SendHeaderC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d689738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d689910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d6899f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d689ad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d689bb0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d689c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d6890a0" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="BigPackC.SendHeaderC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d6890a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d689278"/>
        <function-ref name="getPayload" scoped="" ref="0x7d689358"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d689438"/>
        <function-ref name="cancel" scoped="" ref="0x7d689518"/>
        <function-ref name="sendDone" scoped="" ref="0x7d6895f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngineClient" ref="0x7d266620" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <component-ref qname="BigPackC.SendHeaderC.PacketSenderC.PacketEngineClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7d266620"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7d2667f8"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7d2668d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d8ff3f0" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="BigPackC.SendDataC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d8ff3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d8ff5c8"/>
        <function-ref name="destination" scoped="" ref="0x7d8ff6a8"/>
        <function-ref name="setSource" scoped="" ref="0x7d8ff788"/>
        <function-ref name="setDestination" scoped="" ref="0x7d8ff868"/>
        <function-ref name="isForMe" scoped="" ref="0x7d8ff948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d8fe690" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="BigPackC.SendDataC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d8fe690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d8fe868"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d8fe948"/>
        <function-ref name="getPayload" scoped="" ref="0x7d8fea28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d8feb08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d8febe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d900ce0" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="BigPackC.SendDataC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d900ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d900eb8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d8ff010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d8ff0f0"/>
        <function-ref name="cancel" scoped="" ref="0x7d8ff1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d8ff2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d8ffa88" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="BigPackC.SendDataC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d8ffa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d8ffc60"/>
        <function-ref name="source" scoped="" ref="0x7d8ffd40"/>
        <function-ref name="address" scoped="" ref="0x7d8ffe20"/>
        <function-ref name="destination" scoped="" ref="0x7d8fff00"/>
        <function-ref name="setSource" scoped="" ref="0x7d8fe010"/>
        <function-ref name="setDestination" scoped="" ref="0x7d8fe0f0"/>
        <function-ref name="type" scoped="" ref="0x7d8fe1d0"/>
        <function-ref name="setType" scoped="" ref="0x7d8fe2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d8fe390"/>
        <function-ref name="setGroup" scoped="" ref="0x7d8fe470"/>
        <function-ref name="localGroup" scoped="" ref="0x7d8fe550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d260d00" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="BigPackC.SendDataC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d260d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d260ed8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d25f010"/>
        <function-ref name="getPayload" scoped="" ref="0x7d25f0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d25f1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d25f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d260668" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="BigPackC.SendDataC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d260668"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d260840"/>
        <function-ref name="getPayload" scoped="" ref="0x7d260920"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d260a00"/>
        <function-ref name="cancel" scoped="" ref="0x7d260ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d260bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngineClient" ref="0x7d25b918" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <component-ref qname="BigPackC.SendDataC.PacketSenderC.PacketEngineClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7d25b918"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7d25baf0"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7d25bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d8fa5f8" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="BigPackC.ReceiveHeaderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d8fa5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d8fa7d0"/>
        <function-ref name="destination" scoped="" ref="0x7d8fa8b0"/>
        <function-ref name="setSource" scoped="" ref="0x7d8fa990"/>
        <function-ref name="setDestination" scoped="" ref="0x7d8faa70"/>
        <function-ref name="isForMe" scoped="" ref="0x7d8fab50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d8ed930" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="BigPackC.ReceiveHeaderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d8ed930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d8edb08"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d8edbe8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d8edcc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d8edda8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d8ede88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d8fa120" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="BigPackC.ReceiveHeaderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d8fa120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d8fa2f8"/>
        <function-ref name="receive" scoped="" ref="0x7d8fa3d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d8fa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d8fac90" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="BigPackC.ReceiveHeaderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d8fac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d8fae68"/>
        <function-ref name="source" scoped="" ref="0x7d8ed010"/>
        <function-ref name="address" scoped="" ref="0x7d8ed0f0"/>
        <function-ref name="destination" scoped="" ref="0x7d8ed1d0"/>
        <function-ref name="setSource" scoped="" ref="0x7d8ed2b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d8ed390"/>
        <function-ref name="type" scoped="" ref="0x7d8ed470"/>
        <function-ref name="setType" scoped="" ref="0x7d8ed550"/>
        <function-ref name="isForMe" scoped="" ref="0x7d8ed630"/>
        <function-ref name="setGroup" scoped="" ref="0x7d8ed710"/>
        <function-ref name="localGroup" scoped="" ref="0x7d8ed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d255710" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
      <component-ref qname="BigPackC.ReceiveHeaderC.PacketReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d255710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d2558e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d2559c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d255aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d255b88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d255c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d255238" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
      <component-ref qname="BigPackC.ReceiveHeaderC.PacketReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d255238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d255410"/>
        <function-ref name="receive" scoped="" ref="0x7d2554f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2555d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d8eb518" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="BigPackC.ReceiveDataC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d8eb518"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d8eb6f0"/>
        <function-ref name="destination" scoped="" ref="0x7d8eb7d0"/>
        <function-ref name="setSource" scoped="" ref="0x7d8eb8b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d8eb990"/>
        <function-ref name="isForMe" scoped="" ref="0x7d8eba70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d8e9850" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="BigPackC.ReceiveDataC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d8e9850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d8e9a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d8e9b08"/>
        <function-ref name="getPayload" scoped="" ref="0x7d8e9be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d8e9cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d8e9da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d8eb040" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="BigPackC.ReceiveDataC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d8eb040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d8eb218"/>
        <function-ref name="receive" scoped="" ref="0x7d8eb2f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d8eb3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d8ebbb0" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="BigPackC.ReceiveDataC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d8ebbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d8ebd88"/>
        <function-ref name="source" scoped="" ref="0x7d8ebe68"/>
        <function-ref name="address" scoped="" ref="0x7d8e9010"/>
        <function-ref name="destination" scoped="" ref="0x7d8e90f0"/>
        <function-ref name="setSource" scoped="" ref="0x7d8e91d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d8e92b0"/>
        <function-ref name="type" scoped="" ref="0x7d8e9390"/>
        <function-ref name="setType" scoped="" ref="0x7d8e9470"/>
        <function-ref name="isForMe" scoped="" ref="0x7d8e9550"/>
        <function-ref name="setGroup" scoped="" ref="0x7d8e9630"/>
        <function-ref name="localGroup" scoped="" ref="0x7d8e9710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d247e20" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
      <component-ref qname="BigPackC.ReceiveDataC.PacketReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d247e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d245010"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d2450f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2451d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d2452b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d245390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d247948" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
      <component-ref qname="BigPackC.ReceiveDataC.PacketReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d247948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d247b20"/>
        <function-ref name="receive" scoped="" ref="0x7d247c00"/>
        <function-ref name="getPayload" scoped="" ref="0x7d247ce0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="BigPackServer" loc="40:BigPackServer.nc">
      <documentation loc="40:BigPackServer.nc">
        <short>&#10;&#10; Responds to multi-packet data requests from the sink.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Responds to multi-packet data requests from the sink.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="packBuilt" ref="0x7ef830a0" loc="61:BigPackServer.nc">
        <documentation loc="57:BigPackServer.nc">
          <short>&#10;&#10; Once the new pack is complete, the application calls this command&#10;&#10; to start transmission of the data.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="BigPackServer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7ef90eb8" loc="61:BigPackServer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createEnvelope" ref="0x7ef90580" loc="48:BigPackServer.nc">
        <documentation loc="42:BigPackServer.nc">
          <short>&#10;&#10; A helper function used when a module is building a big pack&#10;&#10; in response to the buildPack event. </short>
          <long>&#10;&#10; A helper function used when a module is building a big pack&#10;&#10; in response to the buildPack event.  This allocates internal&#10;&#10; BigPackM data structures for the given number of blocks and&#10;&#10; pointers and returns pointers to these in a BigPackEnvelope.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigPackServer"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:6" alignment="I:1"><struct-ref ref="0x7efa15b8"/>
              <typename><typedef-ref name="BigPackEnvelope" ref="0x7efa1870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="numBlocks" ref="0x7ef90100" loc="48:BigPackServer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="numPtrs" ref="0x7ef90288" loc="48:BigPackServer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="buildPack" ref="0x7ef90a58" loc="55:BigPackServer.nc">
        <documentation loc="50:BigPackServer.nc">
          <short>&#10;&#10; When the mote receives a big pack data request from the sink,&#10;&#10; this event is signaled triggering the application to assemble&#10;&#10; the requested data.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="BigPackServer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="BigPackClient" loc="40:BigPackClient.nc">
      <documentation loc="40:BigPackClient.nc">
        <short>&#10;&#10; Requests multi-packet data from the sink.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Requests multi-packet data from the sink.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestDone" ref="0x7ef73da8" loc="60:BigPackClient.nc">
        <documentation loc="56:BigPackClient.nc">
          <short>&#10;&#10; Once the request is complete, the requester is given a pointer to the main&#10;&#10; data block. </short>
          <long>&#10;&#10; Once the request is complete, the requester is given a pointer to the main&#10;&#10; data block.  This pointer is only valid when result is SUCCESS.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigPackClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mainBlock" ref="0x7ef739b8" loc="60:BigPackClient.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="result" ref="0x7ef73b40" loc="60:BigPackClient.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="registerListener" ref="0x7ef73010" loc="47:BigPackClient.nc">
        <documentation loc="42:BigPackClient.nc">
          <short>&#10;&#10; Each module that listens to the requestDone event should call this method&#10;&#10; during startup to ensure that no pointers are freed until all modules are&#10;&#10; done with them.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="BigPackClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0x7ef73538" loc="54:BigPackClient.nc">
        <documentation loc="49:BigPackClient.nc">
          <short>&#10;&#10; Requests big pack data of a certain type. </short>
          <long>&#10;&#10; Requests big pack data of a certain type.  If another request is already being&#10;&#10; processed, this will return FAIL and do nothing.  Otherwise, it returns SUCCESS&#10;&#10; and begins the request.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigPackClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="free" ref="0x7ef72268" loc="66:BigPackClient.nc">
        <documentation loc="62:BigPackClient.nc">
          <short>&#10;&#10; When an application is done with the data, it must call free so that internal&#10;&#10; structures can be deallocated.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="BigPackClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7eeb2440" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7eeb37e0" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7eeb3990" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eeb3b18" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7eeb0e30" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eeb0b18" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7eeb07d0" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7eeb2b70" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eeb2788" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7eeb0380" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eeb2eb8" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7eeb0068" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SinglePacket" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <short>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="source" ref="0x7ee82010" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Returns the address of the source of the multihop packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the address of the source of the multihop packet.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @return The source node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ee83d00" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7ee81268" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Returns the address of the destination of the multihop packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the address of the destination of the multihop packet.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @return The destination node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ee81010" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7ee82a38" loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Sets the address of the source of the multihop packet. </short>
          <long>&#10;&#10; Sets the address of the source of the multihop packet.  As with&#10;&#10; the AM layer, this is set by the multihop layer, and should not&#10;&#10; need to be used when sending a packet.  However, buffers or other&#10;&#10; storage components may wish to use it to store the address for&#10;&#10; later retrieval.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @param src The source node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ee82578" loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="src" ref="0x7ee82708" loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7ee81c98" loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Sets the address of the destination of the multihop packet. </short>
          <long>&#10;&#10; Sets the address of the destination of the multihop packet.  As&#10;&#10; with the AM layer, this is set by the multihop layer, and should not&#10;&#10; need to be used when sending a packet.  However, buffers or other&#10;&#10; storage components may wish to use it to store the address for&#10;&#10; later retrieval.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @param dest The destination node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ee817d0" loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7ee81960" loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7ee80560" loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="81:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; As with the AM layer, returns whether this node is the destination&#10;&#10; for the packet, but can also include special processing for broadcast&#10;&#10; addresses or similar values.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; As with the AM layer, returns whether this node is the destination&#10;&#10; for the packet, but can also include special processing for broadcast&#10;&#10; addresses or similar values.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @return Whether this node is the destination of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ee80220" loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="payloadLength" ref="0x7ee93ae0" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This call is identical&#10; to &#60;TT>Packet.payloadLength&#60;/TT>, and is included in Receive as a&#10; convenience.&#10;&#10; @param  msg      the packet&#10; @return          the length of the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ee93860" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x7eea0c60" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  msg      the receied packet&#10; @param  payload  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return          a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
              <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eea03d0" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7eea0570" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eea06f8" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ee93510" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return point to a protocol's payload region in a packet. </short>
          <long>&#10; Return point to a protocol's payload region in a packet.  If len&#10; is not NULL, getPayload will return the length of the payload in&#10; it. This call is identical to &#60;TT>Packet.getPayload&#60;/TT>, and is&#10; included in Receive as a convenience.&#10;&#10; @param  msg      the packet&#10; @param  len      a pointer to where to store the payload length&#10; @return          a pointer to the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ee93010" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ee931b8" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ee90ef0" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ee90ef0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7ee62e70" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ee631f0" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7ee622c8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ee63c78" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7ee63e08" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7ee63950" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.&#10;</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7ee606a0" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7ee602c8" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7ee635c0" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7ee705c0" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ee70318" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7ee62b18" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ee625f0" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7ee62780" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7ee70b90" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ee708e8" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ee70e98" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ee50a18" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ecc22d0" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ecc22d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7ecc2790" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10;</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ec916a0" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ec916a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ec917b8" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ec917b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7ec91c88" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ec917b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7ec90460" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7ec90120" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits. </short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7ec90830" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed. </short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7eca3648" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7eca3648"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7eca3760" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eca3760"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7eca15d8" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eca3760"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7eca2520" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7eca1260" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eca3760"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eca3760"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7eca2c98" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eca3760"/></type-var>
          </variable>
          <variable name="dt" ref="0x7eca2e28" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eca3760"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7eca2958" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7eca1a10" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10;</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eca3760"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0x7eca3e20" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eca3760"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7eca3b88" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eca3760"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7eca21e8" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7ec33cd0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f100140"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f100390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7ec32d00" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e1208"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1458"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7ec324f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f1e38"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0e20e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7ec329a8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f1e38"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0e20e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7ec32840" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f1e38"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0e20e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7ec311d0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e1208"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1458"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7ec31068" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e1208"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1458"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7ec32198" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f100140"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f100390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ec32030" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f100140"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f100390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7ec13a30" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7ec13e28" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7ec13638" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7ec12248" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7ec21d70" loc="21:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10;</short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f2ad0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0f2d20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7ec132f0" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10;</short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f2ad0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0f2d20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7ec13100" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f2ad0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0f2d20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7ec25778" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ec25778"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7ec22278" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10;</short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ec23520" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7ec25bf0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.&#10;</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ec25778"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7ec23858" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7ec22600" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10;</short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ec231f0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.&#10;</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ec25778"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7ec23010" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ec25778"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ec23b88" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ec23eb8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.  &#10;</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7ec45010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ec45010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7ec420e8" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0x7ec44a18" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10;</short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7ec45470" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.&#10;</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ec45010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7ec42600" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.&#10;</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7ec42428" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7ec42998" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.&#10;</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7ec44010" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7ec45cb8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7ec44da8" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10;</short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ec45970" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.&#10;</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ec45010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7ec457b0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ec45010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ec44348" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ec44678" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7efe3cc0" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f160920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f052010" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7eff2bc0" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f212638" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f212a40" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7ea367b8" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7ea23310" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7ea230b8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7ea31d78" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.&#10;</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7ea25378" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10;</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ea25100" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7ea25950" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ea256d0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7ea25d38" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10;</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;</short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7e9f67e0" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7e9f6af8" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7e9f61b0" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7e9f5140" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e9f64c8" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7e9f6e10" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ea02b80" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ea02e90" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.&#10;&#10;</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f2322f0" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f232ad8" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f232708" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7e8126f0" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet. </short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  msg    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e8124a0" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7e812d60" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  msg    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e812a40" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7e8083c0" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet. </short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.  If&#10; len is not NULL, getPayload will return the length of the payload&#10; in it, which is the same as the return value from&#10; payloadLength(). If a protocol does not support variable length&#10; packets, then *len is equal to maxPayloadLength().&#10;&#10; @param msg   the packet&#10; @param len   pointer to where the current payload length should be stored.&#10; @return      a pointer to the packet's data payload for this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e810e20" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e808010" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7e810ad8" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7e810600" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param msg   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e8100d0" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e810258" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7e8168d8" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param amsg the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7efb24a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e816590" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7e821ab8" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e821838" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7e822ed8" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.&#10;</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="destination" ref="0x7e8214e8" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e821258" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7e820d00" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet. </short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e820710" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7e8208a0" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7e8203c8" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet. </short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e821e00" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7e820010" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7e8189e0" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.&#10;</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e818798" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7e816240" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet. </short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  amsg    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e818d20" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7e818ea8" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7e818450" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e818068" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7e815060" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param amsg the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efb24a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e816c20" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7e816db0" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efb24a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7e815410" loc="184:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.&#10;&#10;</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7efb24a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="IndexedIterator" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
      <parameters>
        <typedef name="iterator_item_t" ref="0x7e7c88a0" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
          <interfacedef-ref qname="IndexedIterator"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e7c88a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="end" ref="0x7e7c7848" loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
        <documentation loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
          <short>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10; @param m Current item's index.&#10;&#10; @return TRUE if the current item is the end, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="iterator_end_t" ref="0x7e7d0710"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e7c88a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e7c7608" loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e7c88a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="next" ref="0x7e7c70c8" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
        <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
          <short>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10; @param m Current item's index.&#10;&#10; @return The next item's index.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e7c88a0"/></type-var>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e7c88a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e7c8eb8" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e7c88a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketEngine" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
      <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <short>&#10;&#10; Allow a data control component to manage its packets in the data&#10;&#10; engine. </short>
        <long>&#10;&#10; Allow a data control component to manage its packets in the data&#10;&#10; engine.  Packet IDs are passed to the control component to simplify&#10;&#10; management of any additional data structures for each packet in the&#10;&#10; buffer.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperType" ref="0x7e7d6608" loc="177:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="171:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Returns the upper layer AM type of a given packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the upper layer AM type of a given packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return The upper layer AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_am_id_t" ref="0x7ef61338"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7e7d63e0" loc="177:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="send" ref="0x7e7e1580" loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Marks this packet as next in line to be sent. </short>
          <long>&#10;&#10; Marks this packet as next in line to be sent.  The packet must be one&#10;&#10; that was signaled via the added event and cannot be the ID of any&#10;&#10; arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7e7e1288" loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7e7d8420" loc="133:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="124:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Passes this packet to upper layer as a received packet immediately. </short>
          <long>&#10;&#10; Passes this packet to upper layer as a received packet immediately.  The&#10;&#10; packet must be one that was signaled via the added event and cannot be&#10;&#10; the ID of any arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7e7d8100" loc="133:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendIntercept" ref="0x7e7e0b98" loc="122:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="113:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Marks this packet as next in line to be sent, but allows the upper layer&#10;&#10; to intercept the packet first. </short>
          <long>&#10;&#10; Marks this packet as next in line to be sent, but allows the upper layer&#10;&#10; to intercept the packet first.  The packet must be one that was signaled&#10;&#10; via the added event and cannot be the ID of any arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7e7e0830" loc="122:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendAdded" ref="0x7e7e3038" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; A packet to be sent was added to the packet engine by an upper layer.&#10;&#10;</short>
          <long>&#10;&#10; A packet to be sent was added to the packet engine by an upper layer.&#10;&#10; Unlike the Receive interface, this event does not allow swapping packet&#10;&#10; buffers because ownership of the packet does not leave the packet&#10;&#10; engine.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet that was added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7e7e4b60" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7e7e4d10" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveAdded" ref="0x7e7e3a40" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; A received packet was added to the packet engine from a lower layer.&#10;&#10;</short>
          <long>&#10;&#10; A received packet was added to the packet engine from a lower layer.&#10;&#10; Unlike the Receive interface, this event does not allow swapping packet&#10;&#10; buffers because ownership of the packet does not leave the packet&#10;&#10; engine.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet that was added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7e7e3588" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7e7e3738" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="snoopAdded" ref="0x7e7e2528" loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; An overheard packet (this node is not the intended destination) was&#10;&#10; added to the packet engine from a lower layer. </short>
          <long>&#10;&#10; An overheard packet (this node is not the intended destination) was&#10;&#10; added to the packet engine from a lower layer.  Unlike the Receive&#10;&#10; interface, this event does not allow swapping packet buffers because&#10;&#10; ownership of the packet does not leave the packet engine.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet that was added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7e7e2010" loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7e7e21c0" loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="packet" ref="0x7e7e2d10" loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Gets the packet associated with a given ID in the packet engine.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the packet associated with a given ID in the packet engine.&#10;&#10;&#10;&#10; @param pid ID of packet to access.&#10;&#10; @return Pointer to the packet, NULL if the ID is not in use or too large.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
              <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7e7e2a80" loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e7e02d8" loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="98:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Signals the completion of a send event to the lower layer. </short>
          <long>&#10;&#10; Signals the completion of a send event to the lower layer.  The return&#10;&#10; value indicates what should be done next with the packet.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @param result SUCCESS if it was transmitted successfully, FAIL if&#10;&#10;               it was not, ECANCEL if it was cancelled by the upper&#10;&#10;               layer.&#10;&#10; @return If the packet is no longer needed, return PKT_SEND_DONE. If the&#10;&#10;         packet should be resent, return PKT_SEND_RETRY.  If the packet&#10;&#10;         should move back to the wait state, return PKT_SEND_WAIT.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_send_action_t" ref="0x7ef61a40"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7e7e1ae8" loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7e7e1c98" loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="result" ref="0x7e7e1e20" loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drop" ref="0x7e7d8c68" loc="144:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="135:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Drops the packet from the buffer immediately. </short>
          <long>&#10;&#10; Drops the packet from the buffer immediately.  The packet must be one&#10;&#10; that was signaled via the added event and cannot be the ID of any&#10;&#10; arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7e7d8970" loc="144:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="upperSendDone" ref="0x7e7d76d0" loc="156:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="146:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Manually signals the upper layer sendDone event with the given result&#10;&#10; for the given packet. </short>
          <long>&#10;&#10; Manually signals the upper layer sendDone event with the given result&#10;&#10; for the given packet.  This should be used carefully to avoid signally&#10;&#10; sendDone multiple times for the same packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @param result Send result.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7e7d71d8" loc="156:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </variable>
          <variable name="result" ref="0x7e7d7360" loc="156:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="waitList" ref="0x7e7d7e60" loc="169:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="158:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Access a list of all packets still waiting for a control descision. </short>
          <long>&#10;&#10; Access a list of all packets still waiting for a control descision.  For&#10;&#10; example, if a routing path is found to destination B, this could be used&#10;&#10; to check if any other packets were also waiting for that same path since&#10;&#10; they can now be sent.  This command gives the index of the first packet&#10;&#10; in a list of waiting packets.  Traverse the rest of the list with the&#10;&#10; PacketWaitList interface provided by the engine.&#10;&#10;&#10;&#10; @return The ID for the first waiting packet, bufferSize if there aren't&#10;&#10;         any waiting packets.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setUpperType" ref="0x7e7d6f10" loc="185:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="179:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Sets the upper layer AM type of a given packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Sets the upper layer AM type of a given packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @param newUid The new upper layer AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7e7d6b58" loc="185:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7ef63b98"/></typename>
            </type-int>
          </variable>
          <variable name="newUid" ref="0x7e7d6ce0" loc="185:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10;</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7e7c1270" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param msg - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e7c4d60" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7e7c1908" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param msg - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e7c15d8" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7e7c0010" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param msg - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e7c1c78" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StaticIndexedIterator" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
        <short>&#10;&#10; Iteration operations using indices. </short>
        <long>&#10;&#10; Iteration operations using indices.  This interface is the static or&#10;&#10; stateless version which requires a pointer to the structure containing&#10;&#10; the data to be passed in along with the index.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_source_t" ref="0x7e782268" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
          <interfacedef-ref qname="StaticIndexedIterator"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_source_t" scoped="" ref="0x7e782268"/></type-var>
        </typedef>
        <typedef name="iterator_item_t" ref="0x7e782380" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
          <interfacedef-ref qname="StaticIndexedIterator"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e782380"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="end" ref="0x7e7817a0" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
        <documentation loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
          <short>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10; @param d Pointer to the data source.&#10;&#10; @param m Current item's index.&#10;&#10; @return TRUE if the current item is the end, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="iterator_end_t" ref="0x7e7d0710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="data_source_t" scoped="" ref="0x7e782268"/></type-var>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e782380"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d" ref="0x7e7813a8" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="data_source_t" scoped="" ref="0x7e782268"/></type-var>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x7e781538" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e782380"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="next" ref="0x7e782d90" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
        <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
          <short>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10; @param d Pointer to the data source.&#10;&#10; @param m Current item's index.&#10;&#10; @return The next item's index.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e782380"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="data_source_t" scoped="" ref="0x7e782268"/></type-var>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e782380"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d" ref="0x7e7829d0" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="data_source_t" scoped="" ref="0x7e782268"/></type-var>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x7e782b60" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e782380"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvSinglePacket" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
      <function command="" provided="0" name="value" ref="0x7e796ef0" loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
        <documentation loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
          <short>&#10;&#10; Returns the value in this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the value in this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then NULL is returned.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return Pointer to the value in this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e796c38" loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7e794268" loc="100:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
        <documentation loc="93:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
          <short>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return SUCCESS if the type instance was found and removed, EINVAL&#10;&#10;         otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e794010" loc="100:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7e797bb0" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
        <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
          <short>&#10;&#10; Returns the length of this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the length of this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then 0 is returned.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return Length of this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e797928" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x7e7966d8" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
        <documentation loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
          <short>&#10;&#10; Sets the length of a type instance within the TLV block. </short>
          <long>&#10;&#10; Sets the length of a type instance within the TLV block.  This&#10;&#10; operation moves data around and should always be performed before&#10;&#10; storing a value with a different length than the one currently&#10;&#10; stored.  If the type instance is not found in the block or there&#10;&#10; is not enough room for the new length, returns ESIZE.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @return SUCCESS if the type instance was found, enough space was&#10;&#10;         available, and the length was set, ESIZE if there wasn't&#10;&#10;         enough space, EINVAL if the instance wasn't found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e796140" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e7962c8" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7e795a28" loc="91:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
        <documentation loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
          <short>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance. </short>
          <long>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance.  This operation moves data around and&#10;&#10; should always be performed before storing a value of the given&#10;&#10; type.  The type instance will be added to the block as long as&#10;&#10; there are at least len + 2 bytes available in the buffer holding&#10;&#10; the TLV block.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @return SUCCESS if enough space was available and the length was&#10;&#10;         set, EALREADY if an instance already exists, ESIZE if&#10;&#10;         there wasn't enough space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e795478" loc="91:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e795600" loc="91:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvBlockPacket" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlockPacket.nc">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlockPacket.nc">
        <short>&#10;&#10; Manipulate a packet with a TLV block independent of the types it&#10;&#10; contains.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Manipulate a packet with a TLV block independent of the types it&#10;&#10; contains.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="remove" ref="0x7e7a3e58" loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlockPacket.nc">
        <documentation loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlockPacket.nc">
          <short>&#10;&#10; Removes a TLV block from the beginning of a given packet.</short>
          <long>&#10;&#10; Removes a TLV block from the beginning of a given packet. Other&#10;&#10; data is moved to fill the gap.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlockPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e7a3c20" loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlockPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7e7a2658" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlockPacket.nc">
        <documentation loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlockPacket.nc">
          <short>&#10;&#10; Returns the length of the entire TLV block, including the block&#10;&#10; length value itself.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the length of the entire TLV block, including the block&#10;&#10; length value itself.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return Length of the TLV block.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlockPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e7a23e8" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlockPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7e7a36c0" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlockPacket.nc">
        <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlockPacket.nc">
          <short>&#10;&#10; Adds a TLV block at the beginning of a given packet. </short>
          <long>&#10;&#10; Adds a TLV block at the beginning of a given packet.  Other&#10;&#10; data is moved to accomidate it.  This must be called on any new TLV&#10;&#10; block before using any other TLV commands.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return SUCCESS if the add completed, ESIZE if there wasn't enough&#10;&#10;         space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlockPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e7a33e8" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlockPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvMultiplePacket" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <short>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block&#10;&#10; within a packet. </short>
        <long>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block&#10;&#10; within a packet.  This interface, when used together with the TlvList&#10;&#10; interface, has no restrictions of the number of instances of a type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="value" ref="0x7e7882f8" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="74:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Returns the value in this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the value in this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then NULL is returned.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return Pointer to the value in this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e789da0" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e788010" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="list" ref="0x7e785210" loc="120:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Access a list of all instances of a type within the TLV block.&#10;&#10;</short>
          <long>&#10;&#10; Access a list of all instances of a type within the TLV block.&#10;&#10; This command gives the key for the first such instance.&#10;&#10; Traverse the rest of the list with the TlvList interface.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return The key for the first instance of a type in the TLV&#10;&#10;         block.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e787f10" loc="120:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7e787998" loc="109:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return SUCCESS if the type instance was found and removed, EINVAL&#10;&#10;         otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e787580" loc="109:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e787710" loc="109:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7e790ad8" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Returns the length of this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the length of this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then 0 is returned.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return Length of this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e790690" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e790820" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x7e789838" loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Sets the length of a type instance within the TLV block. </short>
          <long>&#10;&#10; Sets the length of a type instance within the TLV block.  This&#10;&#10; operation moves data around and should always be performed before&#10;&#10; storing a value with a different length than the one currently&#10;&#10; stored.  If the type instance is not found in the block or there&#10;&#10; is not enough room for the new length, returns ESIZE.&#10;&#10;&#10;&#10; Setting the length of a type instance typically invalidates any&#10;&#10; keys received prior to the change.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @return SUCCESS if the type instance was found, enough space was&#10;&#10;         available, and the length was set, ESIZE if wasn't enough&#10;&#10;         space, EINVAL if the instance wasn't found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e789068" loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e7891f8" loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x7e789390" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7e787010" loc="98:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance. </short>
          <long>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance.  This operation moves data around and&#10;&#10; should always be performed before storing a value of the given&#10;&#10; type.  The type instance will be added to the block as long as&#10;&#10; there are at least len + 2 bytes available in the buffer holding&#10;&#10; the TLV block.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param key Pointer to store the key for the TLV type instance.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @return SUCCESS if enough space was available and the length was&#10;&#10;         set, ESIZE if there wasn't enough space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e788868" loc="98:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e788a18" loc="98:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e788bb0" loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvMultiple" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <short>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10;</short>
        <long>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10; This interface, when used together with the TlvList interface, has&#10;&#10; no restrictions of the number of instances of a type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="value" ref="0x7e7384b0" loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Returns the value in this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the value in this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then NULL is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return Pointer to the value in this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e738030" loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e7381c0" loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="list" ref="0x7e7359c8" loc="126:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="117:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Access a list of all instances of a type within the TLV block.&#10;&#10;</short>
          <long>&#10;&#10; Access a list of all instances of a type within the TLV block.&#10;&#10; This command gives the key for the first such instance.&#10;&#10; Traverse the rest of the list with the TlvList interface.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return The key for the first instance of a type in the TLV&#10;&#10;         block.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e7356e0" loc="126:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7e735190" loc="115:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="106:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @return SUCCESS if the type instance was found and removed, EINVAL&#10;&#10;         otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e737aa0" loc="115:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e737c30" loc="115:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
            </type-int>
          </variable>
          <variable name="trailLen" ref="0x7e737dc0" loc="115:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7e7409d0" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Returns the length of this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the length of this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then 0 is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return Length of this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e740580" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e740710" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x7e739ac0" loc="73:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Sets the length of a type instance within the TLV block. </short>
          <long>&#10;&#10; Sets the length of a type instance within the TLV block.  This&#10;&#10; operation moves data around and should always be performed before&#10;&#10; storing a value with a different length than the one currently&#10;&#10; stored.  If the type instance is not found in the block or there&#10;&#10; is not enough room for the new length, returns ESIZE.&#10;&#10;&#10;&#10; Setting the length of a type instance typically invalidates any&#10;&#10; keys received prior to the change.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @param maxLen Maximum possible length of TLV block and trailing data.&#10;&#10; @return SUCCESS if the type instance was found, enough space was&#10;&#10;         available, and the length was set, ESIZE if wasn't enough&#10;&#10;         space, EINVAL if the instance wasn't found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e740f20" loc="73:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e7390c8" loc="73:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x7e739260" loc="74:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="trailLen" ref="0x7e7393f0" loc="74:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7e739588" loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7e737558" loc="103:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance. </short>
          <long>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance.  This operation moves data around and&#10;&#10; should always be performed before storing a value of the given&#10;&#10; type.  The type instance will be added to the block as long as&#10;&#10; there are at least len + 2 bytes available in the buffer holding&#10;&#10; the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Pointer to store the key for the TLV type instance.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @param maxLen Maximum possible length of TLV block and trailing data.&#10;&#10; @return SUCCESS if enough space was available and the length was&#10;&#10;         set, ESIZE if there wasn't enough space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e7389f8" loc="103:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e738ba8" loc="103:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="tlv_key_t" ref="0x7e7993c8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e738d40" loc="104:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="trailLen" ref="0x7e738ed0" loc="104:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7e737088" loc="104:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StaticVoidIndexedIterator" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticVoidIndexedIterator.nc">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticVoidIndexedIterator.nc">
        <short>&#10;&#10; Iteration operations using indices. </short>
        <long>&#10;&#10; Iteration operations using indices.  This interface is the static or&#10;&#10; stateless version which requires a pointer to the structure containing&#10;&#10; the data to be passed in along with the index.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="iterator_item_t" ref="0x7e732d18" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticVoidIndexedIterator.nc">
          <interfacedef-ref qname="StaticVoidIndexedIterator"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e732d18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="end" ref="0x7e730130" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticVoidIndexedIterator.nc">
        <documentation loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticVoidIndexedIterator.nc">
          <short>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10; @param d Pointer to the data source.&#10;&#10; @param m Current item's index.&#10;&#10; @return TRUE if the current item is the end, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StaticVoidIndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="iterator_end_t" ref="0x7e7d0710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e732d18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d" ref="0x7e731ce8" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticVoidIndexedIterator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x7e731e78" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticVoidIndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e732d18"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="next" ref="0x7e731768" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticVoidIndexedIterator.nc">
        <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticVoidIndexedIterator.nc">
          <short>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10; @param d Pointer to the data source.&#10;&#10; @param m Current item's index.&#10;&#10; @return The next item's index.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StaticVoidIndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e732d18"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e732d18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d" ref="0x7e7313a8" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticVoidIndexedIterator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x7e731538" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticVoidIndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e732d18"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvBlock" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
      <documentation loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
        <short>&#10;&#10; Manipulate a TLV block independent of the types it contains.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Manipulate a TLV block independent of the types it contains.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="remove" ref="0x7e7524e8" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
        <documentation loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
          <short>&#10;&#10; Removes a TLV block from the beginning of a given data buffer.&#10;&#10;</short>
          <long>&#10;&#10; Removes a TLV block from the beginning of a given data buffer.&#10;&#10; Other data is moved to fill the gap.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlock"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e7520d0" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="trailLen" ref="0x7e752260" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7e752ca0" loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
        <documentation loc="62:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
          <short>&#10;&#10; Returns the length of the entire TLV block, including the block&#10;&#10; length value itself.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the length of the entire TLV block, including the block&#10;&#10; length value itself.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return Length of the TLV block.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlock"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e752a28" loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7e753b80" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
        <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
          <short>&#10;&#10; Adds a TLV block at the beginning of a given data buffer. </short>
          <long>&#10;&#10; Adds a TLV block at the beginning of a given data buffer.  Other&#10;&#10; data is moved to accomidate it.  This must be called on any new TLV&#10;&#10; block before using any other TLV commands.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @param maxLen Maximum possible length of TLV block and trailing data.&#10;&#10; @return SUCCESS if the add completed, ESIZE if there wasn't enough&#10;&#10;         space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlock"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e7534f8" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="trailLen" ref="0x7e753688" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7e753810" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvSingle" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
        <short>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10;</short>
        <long>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10; This interface allows at most one instance of a type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="value" ref="0x7e7466f0" loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
        <documentation loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
          <short>&#10;&#10; Returns the value in this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the value in this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then NULL is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return Pointer to the value in this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e746430" loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7e744010" loc="106:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
        <documentation loc="98:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
          <short>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @return SUCCESS if the type instance was found and removed, EINVAL&#10;&#10;         otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e745b90" loc="106:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="trailLen" ref="0x7e745d20" loc="106:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7e747010" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
        <documentation loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
          <short>&#10;&#10; Returns the length of this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the length of this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then 0 is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return Length of this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e749d18" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x7e747ea8" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
        <documentation loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
          <short>&#10;&#10; Sets the length of a type instance within the TLV block. </short>
          <long>&#10;&#10; Sets the length of a type instance within the TLV block.  This&#10;&#10; operation moves data around and should always be performed before&#10;&#10; storing a value with a different length than the one currently&#10;&#10; stored.  If the type instance is not found in the block or there&#10;&#10; is not enough room for the new length, returns ESIZE.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @param maxLen Maximum possible length of TLV block and trailing data.&#10;&#10; @return SUCCESS if the type instance was found, enough space was&#10;&#10;         available, and the length was set, ESIZE if there wasn't&#10;&#10;         enough space, EINVAL if the instance wasn't found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e747558" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e7476e0" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="trailLen" ref="0x7e747880" loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7e747a08" loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7e745650" loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
        <documentation loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
          <short>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance. </short>
          <long>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance.  This operation moves data around and&#10;&#10; should always be performed before storing a value of the given&#10;&#10; type.  The type instance will be added to the block as long as&#10;&#10; there are at least len + 2 bytes available in the buffer holding&#10;&#10; the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @param maxLen Maximum possible length of TLV block and trailing data.&#10;&#10; @return SUCCESS if enough space was available and the length was&#10;&#10;         set, EALREADY if an instance already exists, ESIZE if&#10;&#10;         there wasn't enough space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e746c30" loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e746db8" loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="trailLen" ref="0x7e745010" loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7e745198" loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.&#10; </short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7e648bc0" loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7e648bc0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7e6442b0" loc="96:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.&#10;&#10;</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7e648bc0"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7e645960" loc="80:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10;</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="empty" ref="0x7e645160" loc="61:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.&#10;</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="put" ref="0x7e645ed8" loc="88:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.&#10;&#10;</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7e648bc0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7e645ca0" loc="88:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7e648bc0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7e6455a0" loc="72:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PacketEngineClient" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperType" ref="0x7e655e88" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
        <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
          <short>&#10;&#10; Returns the upper AM type used by this client above the the packet&#10;&#10; engine layer.&#10;&#10;</short>
          <long>&#10;&#10; Returns the upper AM type used by this client above the the packet&#10;&#10; engine layer.&#10;&#10; @return The upper AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngineClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="defaultLowerType" ref="0x7e6544e0" loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
        <documentation loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
          <short>&#10;&#10; Returns the default lower AM type packets sent by this client should&#10;&#10; initially be set to.&#10;&#10;</short>
          <long>&#10;&#10; Returns the default lower AM type packets sent by this client should&#10;&#10; initially be set to.&#10;&#10; @return The default lower AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngineClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efb22d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x7e6668e0" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10;</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param msg The complete message received.&#10;&#10; @param payload The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e666248" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7e6663e8" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e666578" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7e6365f0" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7e636238" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.x/tos/interfaces/State.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10;</short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7e639a20" loc="71:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7e63be88" loc="56:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isState" ref="0x7e6396e0" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7e639530" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7e6391f0" loc="61:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7e63b638" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10;</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7e63b3f8" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7e63bb50" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7e63b980" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DataCache" loc="32:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
      <documentation loc="32:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <short>&#10; A data cache. </short>
        <long>&#10; A data cache.  While this is quite similar to the Cache interface, here a&#10; pointer to the element in the cache matching the given input item is&#10; returned.  Additional features, such as remove and eviction, are also&#10; available.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_t" ref="0x7e651718" loc="32:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <interfacedef-ref qname="DataCache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e651718"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="remove" ref="0x7e64a3b8" loc="74:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <documentation loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <short>&#10; Removes an item from the cache.&#10;&#10;</short>
          <long>&#10; Removes an item from the cache.&#10;&#10; @param item Pointer to the data item to remove from the cache.&#10; @return SUCCESS if found and removed, EINVAL if not found.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e651718"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7e64a188" loc="74:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e651718"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7e650800" loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <documentation loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <short>&#10; Notification that the given item is about to be evicted due to an insert&#10; which was requested when the cache was already full. </short>
          <long>&#10; Notification that the given item is about to be evicted due to an insert&#10; which was requested when the cache was already full.  Note that this is&#10; &#60;b>not&#60;/b> signaled on calls of remove.  The pointer passed here should&#10; not saved, as it will not longer be vaild once this event returns.&#10;&#10; @param item Pointer to the data item being evicted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e651718"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7e6504b8" loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e651718"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insert" ref="0x7e650180" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary. </short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.  An atomic lookup&#10; after insert should return true.&#10;&#10; @param item Pointer to the data item to insert into the cache.&#10; @return A pointer to the item in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e651718"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e651718"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7e651ec8" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e651718"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7e64a6d0" loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <documentation loc="76:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <short>&#10; Flush the cache of all entries.&#10;</short>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="lookup" ref="0x7e650e18" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <documentation loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <short>&#10; Returns a pointer to the item in the cache by matching various keys or&#10; NULL if it was not found.&#10;&#10;</short>
          <long>&#10; Returns a pointer to the item in the cache by matching various keys or&#10; NULL if it was not found.&#10;&#10; @param item Pointer to the data item to find in the cache.&#10; @return A pointer to the item in the cache, or NULL if not found.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e651718"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e651718"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7e650b40" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e651718"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7e651b88" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <documentation loc="34:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <short>&#10; Returns the number of items currently stored in the cache.&#10;</short>
          <long>&#10; Returns the number of items currently stored in the cache.&#10; @return The number of items.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Equal" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
        <short>&#10;&#10; Generalized equality interface between two items. </short>
        <long>&#10;&#10; Generalized equality interface between two items.  Many uses are possible&#10;&#10; here, since the inputs could be array indices, as just one example.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="equal_t" ref="0x7e660700" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
          <interfacedef-ref qname="Equal"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7e660700"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7e65a110" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
        <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
          <short>&#10;&#10; Checks whether two items are equal.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether two items are equal.&#10;&#10;&#10;&#10; @param a First item to test.&#10;&#10; @param b Second item to test.&#10;&#10; @return TRUE if they are equal, FALSE if they are not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Equal"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7e660700"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7e660700"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7e660ce0" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7e660700"/></type-var>
          </variable>
          <variable name="b" ref="0x7e660e68" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7e660700"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7e670118" loc="74:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e670590" loc="84:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7e571cf0" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e571cf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7e56b400" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e571cf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7e56b100" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e571cf0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DataTimer" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
      <parameters>
        <typedef name="data_t" ref="0x7e5326b8" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
          <interfacedef-ref qname="DataTimer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e5326b8"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="expired" ref="0x7e52c0c8" loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
        <documentation loc="63:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
          <short>&#10;&#10; The timer for a given data item has expired.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The timer for a given data item has expired.&#10;&#10;&#10;&#10; @param data The data item which expired.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e5326b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e530e70" loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e5326b8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e530198" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
        <documentation loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
          <short>&#10;&#10; Starts the non-periodic timer for a given data item. </short>
          <long>&#10;&#10; Starts the non-periodic timer for a given data item.  If the same&#10;&#10; item is started multiple times, it will be tracked multiple times.&#10;&#10;&#10;&#10; @param data The data item to start timing.&#10;&#10; @param delay Time units before the data expires.&#10;&#10; @return SUCCESS, or FAIL if already full.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e5326b8"/></type-var>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="data_timer_time_t" ref="0x7e5322c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e532cb8" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e5326b8"/></type-var>
          </variable>
          <variable name="delay" ref="0x7e532e50" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="data_timer_time_t" ref="0x7e5322c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e530950" loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
        <documentation loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
          <short>&#10;&#10; Stops the timer for a given data item. </short>
          <long>&#10;&#10; Stops the timer for a given data item.  If the item was started&#10;&#10; multiple times, this removes the instance that was closest to&#10;&#10; expiring.&#10;&#10;&#10;&#10; @param data The data item to stop timing.&#10;&#10; @return SUCCESS, or EINVAL if the item was not found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e5326b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e5306c0" loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e5326b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RouteCache" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
        <short>&#10;&#10; Access some kind of route cache or table that stores information about&#10;&#10; paths or links in the network and looks for routes when requested.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access some kind of route cache or table that stores information about&#10;&#10; paths or links in the network and looks for routes when requested.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="removeLink" ref="0x7e5404f8" loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Removes any information stored for a given link from the route cache.&#10;&#10;</short>
          <long>&#10;&#10; Removes any information stored for a given link from the route cache.&#10;&#10; If the cache stores entire paths, then any path containing the link&#10;&#10; must at least be shortened enough to remove the given link or else&#10;&#10; discarded entirely.&#10;&#10;&#10;&#10; @param src The source node in the link to remove.&#10;&#10; @param dest The destination node in the link to remove.&#10;&#10; @param reverse If TRUE, the reverse path is also removed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e542da0" loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e540010" loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
          </variable>
          <variable name="reverse" ref="0x7e540198" loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="routeUpdate" ref="0x7e53b5d0" loc="97:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Provides the newest information available pertaining to a requested&#10;&#10; route. </short>
          <long>&#10;&#10; Provides the newest information available pertaining to a requested&#10;&#10; route.  Whether or not a route is available when the request is made,&#10;&#10; a routeUpdate will be signaled once the current availability is known.&#10;&#10; If the route is not initially available, a subsequent routeUpdate will&#10;&#10; be signaled if a route is later found and the route was requested via&#10;&#10; the trackRoute command.  If a route was found, numLinks is the number&#10;&#10; of links along the route.  If a route was not found, numLinks is 0.&#10;&#10; The route itself is accessible via the RouteNodeList interface.  Note&#10;&#10; that RouteNodeList traverses the route &#60;b>in reverse&#60;/b>, returning the&#10;&#10; previous or source node for a given node in the route.&#10;&#10;&#10;&#10; @param src The source node of the route.&#10;&#10; @param dest The destination node of the route.&#10;&#10; @param numLinks Number of links along the route if one was found, 0&#10;&#10;                 if no route was found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e556080"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e53cd00" loc="97:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e53ce98" loc="97:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
          </variable>
          <variable name="numLinks" ref="0x7e53b068" loc="98:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e556080"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addPath" ref="0x7e542860" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Adds a path to the route cache with a given number of links along the&#10;&#10; path and optionally adds the reverse path as well.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Adds a path to the route cache with a given number of links along the&#10;&#10; path and optionally adds the reverse path as well.&#10;&#10;&#10;&#10; @param nodes An array of nodes that make up the path to add.&#10;&#10; @param numLinks The number of links along the path.&#10;&#10; @param reverse If TRUE, the reverse path is also added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e556080"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="nodes" ref="0x7e542200" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numLinks" ref="0x7e5423a0" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e556080"/></typename>
            </type-int>
          </variable>
          <variable name="reverse" ref="0x7e542528" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="trackRoute" ref="0x7e540e60" loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="63:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Indicates the need for a route from node src to node dest. </short>
          <long>&#10;&#10; Indicates the need for a route from node src to node dest.  This is&#10;&#10; tracked by the route cache until the need is met.&#10;&#10;&#10;&#10; @param src The source node of the route.&#10;&#10; @param dest The destination node of the route.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e540a38" loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e540bd0" loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkRoute" ref="0x7e53c7c0" loc="78:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Requests an initial check for a route from node src to node dest.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Requests an initial check for a route from node src to node dest.&#10;&#10;&#10;&#10; @param src The source node of the route.&#10;&#10; @param dest The destination node of the route.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e53c3c0" loc="78:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e53c558" loc="78:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e556258"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="29:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.&#10;&#10;</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x7e52bdb8" loc="34:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.&#10;</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clear" ref="0x7e525050" loc="58:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.&#10;</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7e527e70" loc="58:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7e525558" loc="64:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.&#10;</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7e525390" loc="64:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7e527630" loc="46:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.&#10;</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7e527458" loc="46:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x7e525c08" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.&#10;</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7e525898" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x7e525a20" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x7e527110" loc="39:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.&#10;</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e527b30" loc="52:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.&#10;</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7e527970" loc="52:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7e524010" loc="77:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.&#10;</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Graph" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <short>&#10;&#10; Basic operations for processsing and modifying a graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Basic operations for processsing and modifying a graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="maxEdges" ref="0x7e3c8d88" loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the maximum number of edges that the graph can hold. </short>
          <long>&#10;&#10; Gets the maximum number of edges that the graph can hold.  This should&#10;&#10; return the number of &#34;conceptual&#34; edges.  For example, an undirected graph&#10;&#10; might use two directed edges for each undirected edge in its&#10;&#10; implementation, but this only counts as one edge here.&#10;&#10;&#10;&#10; @return The maximum number of edges that the graph can hold.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="removed" ref="0x7e3c3eb8" loc="150:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="145:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; The structure of the graph changed because an edge was removed.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The structure of the graph changed because an edge was removed.&#10;&#10;&#10;&#10; @param m The key for the edge that was removed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e3c3c88" loc="150:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7e3c6d80" loc="115:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="107:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Remove an edge from the graph between vertices s and d.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Remove an edge from the graph between vertices s and d.&#10;&#10;&#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @param d The second vertex or destination of the edge.&#10;&#10; @return SUCCESS if the edge was found and removed, EINVAL if it was not.&#10;&#10;         ESIZE returned if either vertex is too large.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7e3c6908" loc="115:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x7e3c6aa0" loc="115:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7e3c57a0" loc="126:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="117:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Retrieves an edge between vertices s and d, if it exists. </short>
          <long>&#10;&#10; Retrieves an edge between vertices s and d, if it exists.  If the graph is&#10;&#10; directed, s is taken to be the source and d is taken to be the destination&#10;&#10; of the directed edge.&#10;&#10;&#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @param d The second vertex or destination of the edge.&#10;&#10; @return The edge key if the edge was found, maxEdges() if it was not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7e3c52e8" loc="126:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x7e3c5480" loc="126:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="directed" ref="0x7e3c7380" loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Checks if the graph is directed or not. </short>
          <long>&#10;&#10; Checks if the graph is directed or not.  This value should not change at&#10;&#10; run-time.&#10;&#10;&#10;&#10; @return TRUE if the graph is directed, FALSE if it is undirected.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="vertices" ref="0x7e3c99a0" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the number of vertices currently in the graph. </short>
          <long>&#10;&#10; Gets the number of vertices currently in the graph.  For some&#10;&#10; implementations, this will always equal maxVertices() if all vertices&#10;&#10; are preallocated.&#10;&#10;&#10;&#10; @return The number of vertices currently in the graph.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="parallelEdges" ref="0x7e3c7960" loc="93:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Checks if parallel edges are allowed or not. </short>
          <long>&#10;&#10; Checks if parallel edges are allowed or not.  This value should not change&#10;&#10; at run-time.&#10;&#10;&#10;&#10; @return TRUE if parallel edges are allowed, FALSE if they are not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="maxVertices" ref="0x7e3c8010" loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the maximum number of vertices that the graph can hold.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the maximum number of vertices that the graph can hold.&#10;&#10;&#10;&#10; @return The maximum number of vertices that the graph can hold.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="insert" ref="0x7e3c63d8" loc="105:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Add a new edge to the graph between vertices s and d.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Add a new edge to the graph between vertices s and d.&#10;&#10;&#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @param d The second vertex or destination of the edge.&#10;&#10; @return If all of the edges have already been allocated or if parallel&#10;&#10;         edges are not supported and this edge has already been added or if either&#10;&#10;         vertex is too large, then maxEdges() is returned.  Otherwise, the key for&#10;&#10;         the new edge is returned.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7e3c7e98" loc="105:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x7e3c6068" loc="105:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="inserted" ref="0x7e3c3768" loc="143:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="138:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; The structure of the graph changed because an edge was inserted.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The structure of the graph changed because an edge was inserted.&#10;&#10;&#10;&#10; @param m The key for the edge that was inserted.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e3c3538" loc="143:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeList" ref="0x7e3c3010" loc="136:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="128:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Retrieves a list of edges adjacent to vertex s. </short>
          <long>&#10;&#10; Retrieves a list of edges adjacent to vertex s.  If the graph is directed,&#10;&#10; s is taken to be the source of the directed edge.&#10;&#10;&#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @return The key to the first node of the list if the vertex was valid,&#10;&#10;         maxEdges() if it was not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7e3c5ce0" loc="136:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edges" ref="0x7e3c86e8" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the number of edges currently in the graph. </short>
          <long>&#10;&#10; Gets the number of edges currently in the graph.  This should return the&#10;&#10; number of &#34;conceptual&#34; edges.  For example, an undirected graph might use&#10;&#10; two directed edges for each undirected edge in its implementation, but this&#10;&#10; only counts as one edge here.  For some implementations, this will always&#10;&#10; equal maxEdges() if all edges are preallocated.&#10;&#10;&#10;&#10; @return The number of edges currently in the graph.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SourceShortestPath" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
      <documentation loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <short>&#10;&#10; Access details on the shortest path between vertices of a graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access details on the shortest path between vertices of a graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="rebuildNeeded" ref="0x7e3bca90" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Checks if the tree should be rebuilt either because the source has changed&#10;&#10; or because the underlying graph structure has changed.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if the tree should be rebuilt either because the source has changed&#10;&#10; or because the underlying graph structure has changed.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10; @return Whether a rebuild is needed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e3bc7c0" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="buildTree" ref="0x7e3be600" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Build a shortest path tree from vertex src.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Build a shortest path tree from vertex src.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10; @return If the vertex is too large then ESIZE or if a tree is currently&#10;&#10;         being built then EBUSY, else SUCCESS.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e3be390" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="builtTree" ref="0x7e3bed60" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; The shortest path tree from vertex src is complete.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The shortest path tree from vertex src is complete.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e3beb58" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="buildingTree" ref="0x7e3ba060" loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Checks if the tree is currently being built.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if the tree is currently being built.&#10;&#10;&#10;&#10; @return Whether the tree is being built.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edgeCount" ref="0x7e3ba8b8" loc="100:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="91:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Get the number of edges to the destination vertex.&#10;&#10;</short>
          <long>&#10;&#10; Get the number of edges to the destination vertex.&#10;&#10; For example, if the shortest path from A to C was A -> D -> C, edgeCount()&#10;&#10; would return 2.&#10;&#10;&#10;&#10; @param dest The destination vertex.&#10;&#10; @return The number of edges.  If there is no path to the given destination,&#10;&#10;         or if an input vertex is too large, then the count is 0.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7e3ba5c8" loc="100:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="buildTreeTo" ref="0x7e3bd738" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Build the shortest path from vertex src to vertex dest.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Build the shortest path from vertex src to vertex dest.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10; @param dest The destination vertex.&#10;&#10; @return If the vertex is too large then ESIZE or if a tree is currently&#10;&#10;         being built then EBUSY, else SUCCESS.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e3bd2f0" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e3bd488" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="builtTreeTo" ref="0x7e3bc260" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; The shortest path from vertex src to vertex dest is complete.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The shortest path from vertex src to vertex dest is complete.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10; @param dest The destination vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e3bdc90" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e3bde28" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
            </type-int>
          </variable>
          <variable name="pathResult" ref="0x7e3bc010" loc="73:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GraphEdge" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
      <documentation loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
        <short>&#10;&#10; Access information about an edge of the graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access information about an edge of the graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="src" ref="0x7e3a1ab8" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
        <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
          <short>&#10;&#10; Get the first or source vertex of the edge.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Get the first or source vertex of the edge.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @return The first or source vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdge"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e3a1898" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dest" ref="0x7e3a0240" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
        <documentation loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
          <short>&#10;&#10; Get the second or destination vertex of the edge.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Get the second or destination vertex of the edge.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @return The second or destination vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdge"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e3dae40"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e3a0010" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GraphEdgeWeight" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
      <documentation loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
        <short>&#10;&#10; Access information about the weight of an edge of the graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access information about the weight of an edge of the graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="weight_t" ref="0x7e39a968" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
          <interfacedef-ref qname="GraphEdgeWeight"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7e39a968"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="canChangeWeights" ref="0x7e399058" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; Checks if the graph weights can be changed. </short>
          <long>&#10;&#10; Checks if the graph weights can be changed.  This value should not change &#10;&#10; at run-time.&#10;&#10; &#10;&#10; @return TRUE if the graph weights can change, FALSE if they cannot.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="weightChanged" ref="0x7e398890" loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; The weight of an edge in the graph changed.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; The weight of an edge in the graph changed.&#10;&#10; &#10;&#10; @param m The key for the edge that had its weight changed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e398678" loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setWeight" ref="0x7e398130" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; Set the weight of the edge. </short>
          <long>&#10;&#10; Set the weight of the edge.  If the graph is actually unweighted, no&#10;&#10; action is taken.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @param w The updated weight.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7e39a968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e399d30" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
          </variable>
          <variable name="w" ref="0x7e399ec0" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7e39a968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="weight" ref="0x7e3997e8" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; Get the weight of the edge. </short>
          <long>&#10;&#10; Get the weight of the edge.  If the graph is actually unweighted, a unit&#10;&#10; weight is always returned.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @return The weight of the edge.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7e39a968"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e3995a8" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e3d9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IndexedAlloc" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <short>&#10;&#10; Interface to a component that implements a run-time allocation policy on top&#10;&#10; of a static size array via indices. </short>
        <long>&#10;&#10; Interface to a component that implements a run-time allocation policy on top&#10;&#10; of a static size array via indices.  This simplifies component design by&#10;&#10; moving the policy out of each component, leading to cleaner code.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="size" ref="0x7e384770" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; The number of elements currently allocated.&#10;&#10;</short>
          <long>&#10;&#10; The number of elements currently allocated.&#10;&#10; Always less than or equal to maxSize().&#10;&#10;&#10;&#10; @return The number of elements currently allocated.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e38b938"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="allocated" ref="0x7e382298" loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="90:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Checks if an index is currently allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if an index is currently allocated.&#10;&#10;&#10;&#10; @return TRUE if the index is allocated, FALSE if it is not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e38b938"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e382088" loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e38b938"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7e384d38" loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; The maximum number of elements that can be allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The maximum number of elements that can be allocated.&#10;&#10;&#10;&#10; @return The maximum size that can be allocated.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e38b938"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="alloc" ref="0x7e383348" loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="73:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Allocate an index in the set.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Allocate an index in the set.&#10;&#10;&#10;&#10; @return If an index is free, it will be allocated and returned.  Otherwise,&#10;&#10;         maxSize() is returned to indicate that all elements are allocated.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e38b938"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="none" ref="0x7e386b90" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Checks if none of the elements are allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if none of the elements are allocated.&#10;&#10;&#10;&#10; @return TRUE if none of the elements are allocated, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="free" ref="0x7e383b10" loc="88:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="81:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Frees an index in the set.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Frees an index in the set.&#10;&#10;&#10;&#10; @return If an index is allocated, it will be freed and SUCCESS is returned.&#10;&#10;         If it was already free, no change is made and EALREADY is returned.&#10;&#10;         If the index is too large, ESIZE is returned.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e38b938"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e383888" loc="88:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e38b938"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="all" ref="0x7e384188" loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Checks if all of the elements are allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if all of the elements are allocated.&#10;&#10;&#10;&#10; @return TRUE if all of the elements are allocated, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PriorityQueue" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <short>&#10;&#10; Interface to a priority queue sitting on top of an index heap. </short>
        <long>&#10;&#10; Interface to a priority queue sitting on top of an index heap.  The meaning&#10;&#10; of some terms defined here is implementation dependent since either a min or&#10;&#10; max heap could be used.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7e317db8" loc="122:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="119:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Removes all elements from the priority queue.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="findBest" ref="0x7e3171f8" loc="109:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="103:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap), but does not remove it.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap), but does not remove it.&#10;&#10; &#10;&#10; @return Index of the element with the best priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7e31b488" loc="62:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; The maximum number of elements the priority queue can hold.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The maximum number of elements the priority queue can hold.&#10;&#10;&#10;&#10; @return The maximum priority queue size.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="insert" ref="0x7e31bca0" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Insert the element at index m into the priority queue.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Insert the element at index m into the priority queue.&#10;&#10;&#10;&#10; @param m Index of the element to insert.&#10;&#10; @return If the priority queue is full then FAIL, if m is too large for the&#10;&#10;         queue then ESIZE, if m has already been inserted then EALREADY,&#10;&#10;         otherwise SUCCESS.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e31b9d8" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="moveUp" ref="0x7e31ac18" loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; If the priority of element m has improved, move that element up the heap&#10;&#10; if needed.&#10;&#10;</short>
          <long>&#10;&#10; If the priority of element m has improved, move that element up the heap&#10;&#10; if needed.&#10;&#10; @param m Index of the element with altered priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e31a9b8" loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="move" ref="0x7e318b90" loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; If the priority of element m has changed, move that element up or down the &#10;&#10; heap if needed.&#10;&#10;</short>
          <long>&#10;&#10; If the priority of element m has changed, move that element up or down the &#10;&#10; heap if needed.&#10;&#10; @param m Index of the element with altered priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e318920" loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inserted" ref="0x7e31a470" loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="74:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Checks whether element m has already been inserted.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Checks whether element m has already been inserted.&#10;&#10; &#10;&#10; @param m Index of the element to check on.&#10;&#10; @return TRUE if element m has already been inserted, otherwise FALSE.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e31a210" loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="moveDown" ref="0x7e3183d8" loc="94:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; If the priority of element m has worsened, move that element down the heap&#10;&#10; if needed.&#10;&#10;</short>
          <long>&#10;&#10; If the priority of element m has worsened, move that element down the heap&#10;&#10; if needed.&#10;&#10; @param m Index of the element with altered priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e318178" loc="94:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7e31c888" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Checks if the priority queue is empty.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if the priority queue is empty.&#10;&#10;&#10;&#10; @return Whether the priority queue is empty.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="removeBest" ref="0x7e317870" loc="117:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap) and removes it from the priority queue.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap) and removes it from the priority queue.&#10;&#10; &#10;&#10; @return Index of the element with the best priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="size" ref="0x7e31ce98" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; The number of elements currently in the priority queue.&#10;&#10;</short>
          <long>&#10;&#10; The number of elements currently in the priority queue.&#10;&#10; Always less than or equal to maxSize().&#10;&#10;&#10;&#10; @return The number of elements in the priority queue.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e321ae8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Compare" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
        <short>&#10;&#10; Generalized comparison interface between two items. </short>
        <long>&#10;&#10; Generalized comparison interface between two items.  Many uses are possible&#10;&#10; here, since the inputs could be array indices, as just one example.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="compare_t" ref="0x7e314ca0" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
          <interfacedef-ref qname="Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7e314ca0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7e313768" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
        <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
          <short>&#10;&#10; Returns a negative integer, zero, or a positive integer if the first&#10;&#10; argument is less than, equal to, or greater than the second.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns a negative integer, zero, or a positive integer if the first&#10;&#10; argument is less than, equal to, or greater than the second.&#10;&#10;&#10;&#10; @param a First item to test.&#10;&#10; @param b Second item to test.&#10;&#10; @return A negative integer, zero, or a positive integer.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x7fea00f0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7e314ca0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7e314ca0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7e3132d0" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7e314ca0"/></type-var>
          </variable>
          <variable name="b" ref="0x7e313460" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7e314ca0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7e249010" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10;</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7e24acc8" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7e249b70" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.&#10;&#10;</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7e249920" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e24a9a8" loc="83:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e249600" loc="109:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10;</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10;&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7e2234d8" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10;</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e223278" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7e224938" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10;</short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e2246f8" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7e226e10" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10;</short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7e226be0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7e226888" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10;</short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7e226660" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7e224388" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet. </short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7e224168" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7e224ef8" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10;</short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e224cb0" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7e22aa30" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e22a678" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7e22a800" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7e229018" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7feb0a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e22ad98" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7e22a310" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.&#10;&#10;</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e22a120" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7e2295f0" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e229380" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10;</short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x7e220918" loc="58:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x7e20ede0" loc="112:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="108:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e20ec00" loc="112:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x7e20da20" loc="128:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10;</short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x7e20d788" loc="128:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x7e20f378" loc="81:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x7e20fb38" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10;</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param msg Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e20f6c8" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x7e20f860" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x7e20f010" loc="76:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10;</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x7e220c50" loc="76:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x7e20e8a8" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10;</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param msg Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e20e3d0" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x7e20e568" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x7e20d438" loc="120:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10;</short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x7e20d178" loc="120:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x7e20e088" loc="95:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e20fe98" loc="95:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x7e2205c8" loc="53:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.&#10;</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x7e2202c0" loc="53:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10;</short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7e208a30" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10;</short>
          <long>&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e208878" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7e2098f0" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10;</short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param msg&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e2094f0" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7e209688" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7e208520" loc="58:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10;</short>
          <long> &#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e208368" loc="58:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7e208010" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10;</short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e209c38" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7e209dd0" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7e208f20" loc="68:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e208d80" loc="68:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e1ed3d8" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   msg     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e1eecb8" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e1eee40" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7e1ecdf0" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param   msg    the packet&#10; @return         a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e1ecad0" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7e1ec788" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e1edaa8" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   msg    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e1ed720" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e1ec338" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param msg   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e1eddf0" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e1ec010" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7e1e1ae0" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10;</short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7e1e16a8" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7e1e1838" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7e1e1380" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7e1e1010" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @param on TRUE to turn address recognition on, FALSE to turn it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7e1e2d90" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7e1e42d0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7e1e4168" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7e1e2288" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e1e2120" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7e1e4a90" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7e1e4928" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7e1e01f8" loc="101:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7e1e2a68" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e1e2900" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7e1e1e78" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7e1e4de8" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sync" ref="0x7e1e8e18" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7e1e4608" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7e1e25d8" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.&#10;</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x7e1e72f0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10;</short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7ef33a90"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7ef32458"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e1e7120" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7e1e7848" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10;</short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7ef32938"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7ef31300"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e1e7670" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="36:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7e1cf7a0" loc="48:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;</short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="changed" ref="0x7e1cfe48" loc="58:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.&#10;</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7e1cfaf8" loc="53:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;</short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7efb24a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7e1cf438" loc="43:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10;</short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efb24a0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7e1cf088" loc="43:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efb24a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7e1cf218" loc="43:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7efb2678"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e151010" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10;</short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e160bd8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7e160d60" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e151930" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.&#10;&#10;</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="modify" ref="0x7e1509a0" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e1503a0" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7e150548" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e1506d0" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e150060" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10;</short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e151c98" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e151e20" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7e151588" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10;</short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7e151350" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7e165af0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7e163908" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.&#10;&#10;</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7e163588" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.&#10;&#10;</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7e165010" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7e1656f8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.&#10;&#10;</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7e165e48" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7e163208" loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.&#10;&#10;</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7e165360" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10; Constants for manipulating LEDs.&#10;&#10;</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7e1495f0" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7e1499c8" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7e149d38" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7e148498" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7e146010" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e146558" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7e1480c0" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e146c30" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7e146890" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7e149280" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7e148808" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7e148b78" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7e168330" loc="110:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.  &#10;&#10;</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request 	  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7e169898" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0x7e169468" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x7e169bb8" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7e168738" loc="118:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7e0ea8b0" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e0ea8b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7e0ead10" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7e0e9418" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e0ea8b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e0e9068" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e0e91f0" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e0ea8b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e0c50e8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.&#10;&#10;</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ef33900"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e0c6eb0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e0c5650" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.&#10; &#10;</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ef33900"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e0c5438" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.&#10;</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7e0c0bc8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ef33900"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e0c9a68" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ef33900"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e0c94a0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e0c9648" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e0c97d0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e0c8430" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ef33900"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e0c9db0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e0c8010" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e0c8198" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7e0cc3b8" loc="57:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e0cc010" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10;</short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7e0ceb88" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7e0ce860" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7e020d00" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0823a8"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0825f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7e021cc0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b1640"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1890"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e021b58" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b1640"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1890"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7e0204f0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0901a8"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0903f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7e022c60" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2708"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2958"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7e0209a8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0901a8"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0903f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7e020840" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0901a8"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0903f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7e0121d0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0823a8"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0825f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7e012068" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0823a8"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0825f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7e021340" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0700"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7e021010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b1640"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1890"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7e021800" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2708"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2958"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e021698" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2708"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2958"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7e020198" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0700"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e020030" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0700"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7e024af8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e024af8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7e00d0b0" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.&#10;</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7e00ee78" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7e00e7b8" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10;</short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e00f010" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.&#10;</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e024af8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7e00fa60" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.&#10;</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e024af8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e00f880" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e024af8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e00fd98" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e00eb40" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10;</short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e00f538" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.&#10;</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e024af8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e00f350" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e024af8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e00e0f0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e00e420" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7dea6a38" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7dea5340" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.&#10;</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7dea5010" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dea6d80" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7dea6710" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.&#10;&#10;</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7de85010" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7de85ce0" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7de86c88" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edge" ref="0x7de859a0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.&#10;</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7de85728" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7de86938" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7de853e8" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10;</short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7de67a98" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="17:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip. </short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7ddfcef0" loc="24:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released. </short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7ddf92b0" loc="31:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus. </short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7ddf96d8" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10;</short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7dde5198" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ddf0d30" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ddf0eb8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7dde3b90" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7dde3610" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7dde3798" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7dde3920" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7dde32b0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ef33900"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7dde5dd0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7dde3010" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7ddf09c8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ef33900"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ddf0598" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ddf0720" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7dde5a68" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7dde54f8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7dde5680" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7dde5808" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus. </short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ddc4cb8" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.&#10;&#10;</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param txBuf A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param rxBuf A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7ddc4598" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7ddc4740" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ddc48d0" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ddc3830" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.&#10;&#10;</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param txBuf The buffer used for transmission&#10; @param rxBuf The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7ddc3030" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7ddc31d8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ddc3368" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ddc3500" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7ddd3ec0" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10;</short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7ddd3c88" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7dd41560" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7dd3def0" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7dd3e6d8" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7dd3b3c8" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7dd3b260" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7dd41210" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7dd3d370" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7dd3d208" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7dd40bd0" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7dd40a68" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7dd41c10" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10;</short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7dd3ace8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7dd3ab80" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7dd40ef8" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7dd3bb90" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7dd3ba28" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7dd3a1e8" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7dd3dbc8" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7dd3da60" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7dd3a838" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7dd3eb88" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7dd3ea20" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7dd401e0" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10;</short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7dd40010" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7dd3e3b8" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7dd3e250" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7dd3d710" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7dd3b6e8" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7dd3beb0" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7dd3a510" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7dd3eea8" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7dd418a0" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7dd40728" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete. &#10;</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7dd40520" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7dd34238" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.&#10;&#10;</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0x7dd34638" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.&#10; &#10;</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7dcf8948" loc="74:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7dcf8de0" loc="84:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7dcbbef8" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7dcb83e8" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7dcb5538" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.&#10;</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0x7dcb5160" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.&#10;</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7dca4d28" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10;</short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7dcb2020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7dca4af0" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7dcb2020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7dca5d78" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.&#10;&#10;</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7dca4390" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10;</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7dcb2020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7dca4108" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7dcb2020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7dca47a0" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue. &#10;</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7dcb2020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10;</short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7dbf6578" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimeStamping" loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <short>&#10; Interface for receiving time stamp information from the radio.&#10;</short>
        <long>&#10; Interface for receiving time stamp information from the radio.&#10; This information is also embedded in packet metadata.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   October 10 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="transmittedSFD" ref="0x7dbf90b0" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter has been&#10; transmitted: units are in terms of a 32kHz clock.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dbfdd00" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="p_msg" ref="0x7dbfdeb0" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedSFD" ref="0x7dbf9768" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock. </short>
          <long> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock.  &#60;b>NOTE&#60;/b> that receiving&#10; a receivedSFD() event does NOT mean that a packet will be&#10; received; the transmission may stop, become corrupted, or be&#10; filtered by the physical or link layers.  The number of rxSFD&#10; events will always be great than or equal to the number of&#10; Receive message events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dbf93f8" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7dbc5290" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.&#10;&#10;</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7dbc6e78" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7dbc5068" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eec0470"/>
                <typename><typedef-ref name="message_t" ref="0x7eec0e08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7dbc6b40" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7dbc6780" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.&#10;&#10;</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dbc6580" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>

<?xml version="1.0" ?><component abstract="" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc" nicename="tos.system.PoolP" qname="PoolP">
      <documentation loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>
  Implementation of a general dynamic memory pool component.
 </short>
        <long>
  Implementation of a general dynamic memory pool component.
  Note that the allocation/deallocation policies are 
  different than traditional dynamic allocators such as
  malloc or slab allocators. When initialized, the Pool
  contains &lt;code&gt;size&lt;/code&gt; items of type &lt;code&gt;pool_t&lt;/code&gt;.
  These elements can be removed from the pool for use with 
  &lt;code&gt;Pool.get&lt;/code&gt;, and new elements can be placed in
  the pool with &lt;code&gt;Pool.put&lt;/code&gt;. The pool allows 
  components to &lt;code&gt;put&lt;/code&gt; elements besides those which
  were obtained with &lt;code&gt;get&lt;/code&gt;. The pool can never have
  more than &lt;code&gt;size&lt;/code&gt; elements in it.

  @author Philip Levis
  @author Kyle Jamieson
  @author Geoffrey Mainland
  @date   $Date: 2006/12/12 18:23:47 $
</long>
      </documentation>
      <parameters>
        <typedef loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc" name="pool_t" ref="0x7e2f68d8">
          <component-ref nicename="tos.system.PoolP" qname="PoolP"/>
          <type-var alignment="U:" size="U:"><typedef-ref name="pool_t" ref="0x7e2f68d8" scoped=""/></type-var>
        </typedef>
        <constant loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc" name="size" ref="0x7e2f6a60">
          <component-ref nicename="tos.system.PoolP" qname="PoolP"/>
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="uint8_t" ref="0x7fea0110"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    <specification><interface loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc" name="Pool" provided="1" ref="0x7e2f5088">
      <component-ref nicename="tos.system.PoolP" qname="PoolP"/>
      <type-interface alignment="I:4" size="I:4"><interface-ref name="Pool" ref="0x7e2f5088" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Pool" qname="Pool"/>
        <arguments>
          <type-var alignment="U:" size="U:"><typedef-ref name="pool_t" ref="0x7e2f68d8" scoped=""/></type-var>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" ref="0x7e2f5ef0" scoped=""/>
        <function-ref name="maxSize" ref="0x7e2f5a70" scoped=""/>
        <function-ref name="empty" ref="0x7e2f56b0" scoped=""/>
        <function-ref name="put" ref="0x7e2f5c50" scoped=""/>
        <function-ref name="size" ref="0x7e2f5890" scoped=""/>
      </interface-functions>
    </interface><interface loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc" name="Init" provided="1" ref="0x7e2f6cb0">
      <component-ref nicename="tos.system.PoolP" qname="PoolP"/>
      <type-interface alignment="I:4" size="I:4"><interface-ref name="Init" ref="0x7e2f6cb0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Init" qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" ref="0x7e2f6e88" scoped=""/>
      </interface-functions>
    </interface></specification><referenced/></component>
<?xml version="1.0" ?><interfacedef loc="37:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc" nicename="tos.lib.tossim.TossimPacketModel" qname="TossimPacketModel">
      <documentation loc="37:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
        <short>
</short>
        <long>
 @author Phil Levis
 @author David Gay
 Revision:  $Revision: 1.5 $

 Defines global error codes for error_t in TinyOS.
</long>
      </documentation>
      <function command="" loc="49:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc" name="send" provided="0" ref="0x7e590850">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
          <short> 
 Send a packet with a data payload of &lt;tt&gt;len&lt;/tt&gt;.</short>
          <long> 
 Send a packet with a data payload of &lt;tt&gt;len&lt;/tt&gt;. To determine
 the maximum available size, use the Packet interface of the
 component providing Send. If send returns SUCCESS, then the
 component will signal the sendDone event in the future; if send
 returns an error, it will not signal sendDone.  Note that a
 component may accept a send request which it later finds it
 cannot satisfy; in this case, it will signal sendDone with an
 appropriate error code.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.tossim.TossimPacketModel" qname="TossimPacketModel"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x7e8372e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int alignment="I:4" cname="int" size="I:4"/>
            <type-pointer alignment="I:4" size="I:4">
              <type-tag alignment="I:1" size="I:50"><nx_struct-ref name="message_t" ref="0x7e872dd8"/>
                <typename><typedef-ref name="message_t" ref="0x7e8707a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x7fea0110"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="49:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc" name="node" ref="0x7e590190">
            <type-int alignment="I:4" cname="int" size="I:4"/>
          </variable>
          <variable loc="49:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc" name="msg" ref="0x7e590340">
            <type-pointer alignment="I:4" size="I:4">
              <type-tag alignment="I:1" size="I:50"><nx_struct-ref name="message_t" ref="0x7e872dd8"/>
                <typename><typedef-ref name="message_t" ref="0x7e8707a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable loc="49:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc" name="len" ref="0x7e5904c8">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x7fea0110"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" loc="77:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc" name="receive" provided="0" ref="0x7e58cba0">
        <documentation loc="71:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
          <short>
 Signal that a packet was received.</short>
          <long>
 Signal that a packet was received. Note that there is no buffer
 swap: a component using this interface must copy out the message
 if it needs it.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.tossim.TossimPacketModel" qname="TossimPacketModel"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-pointer alignment="I:4" size="I:4">
              <type-tag alignment="I:1" size="I:50"><nx_struct-ref name="message_t" ref="0x7e872dd8"/>
                <typename><typedef-ref name="message_t" ref="0x7e8707a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="77:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc" name="msg" ref="0x7e58c978">
            <type-pointer alignment="I:4" size="I:4">
              <type-tag alignment="I:1" size="I:50"><nx_struct-ref name="message_t" ref="0x7e872dd8"/>
                <typename><typedef-ref name="message_t" ref="0x7e8707a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" loc="61:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc" name="cancel" provided="0" ref="0x7e590ee8">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
          <short>
 Cancel a requested transmission.</short>
          <long>
 Cancel a requested transmission. Returns SUCCESS if the 
 transmission was cancelled properly (not sent in its
 entirety). Note that the component may not know
 if the send was successfully cancelled, if the radio is
 handling much of the logic; in this case, a component
 should be conservative and return an appropriate error code.
 A successful call to cancel must always result in a 
 sendFailed event, and never a sendSucceeded event.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.tossim.TossimPacketModel" qname="TossimPacketModel"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x7e8372e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer alignment="I:4" size="I:4">
              <type-tag alignment="I:1" size="I:50"><nx_struct-ref name="message_t" ref="0x7e872dd8"/>
                <typename><typedef-ref name="message_t" ref="0x7e8707a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="61:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc" name="msg" ref="0x7e590b98">
            <type-pointer alignment="I:4" size="I:4">
              <type-tag alignment="I:1" size="I:50"><nx_struct-ref name="message_t" ref="0x7e872dd8"/>
                <typename><typedef-ref name="message_t" ref="0x7e8707a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" loc="68:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc" name="sendDone" provided="0" ref="0x7e58c638">
        <documentation loc="63:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
          <short> 
 Signaled in response to an accepted send request.</short>
          <long> 
 Signaled in response to an accepted send request. &lt;tt&gt;msg&lt;/tt&gt;
 is the sent buffer, and &lt;tt&gt;error&lt;/tt&gt; indicates whether the
 send was succesful, and if not, the cause of the failure.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.tossim.TossimPacketModel" qname="TossimPacketModel"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-pointer alignment="I:4" size="I:4">
              <type-tag alignment="I:1" size="I:50"><nx_struct-ref name="message_t" ref="0x7e872dd8"/>
                <typename><typedef-ref name="message_t" ref="0x7e8707a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x7e8372e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="68:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc" name="msg" ref="0x7e58c248">
            <type-pointer alignment="I:4" size="I:4">
              <type-tag alignment="I:1" size="I:50"><nx_struct-ref name="message_t" ref="0x7e872dd8"/>
                <typename><typedef-ref name="message_t" ref="0x7e8707a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable loc="68:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc" name="error" ref="0x7e58c3d0">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x7e8372e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" loc="79:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc" name="shouldAck" provided="0" ref="0x7e58b068">
        <interfacedef-ref nicename="tos.lib.tossim.TossimPacketModel" qname="TossimPacketModel"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="bool" ref="0x7ec91520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer alignment="I:4" size="I:4">
              <type-tag alignment="I:1" size="I:50"><nx_struct-ref name="message_t" ref="0x7e872dd8"/>
                <typename><typedef-ref name="message_t" ref="0x7e8707a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="79:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc" name="msg" ref="0x7e58cef0">
            <type-pointer alignment="I:4" size="I:4">
              <type-tag alignment="I:1" size="I:50"><nx_struct-ref name="message_t" ref="0x7e872dd8"/>
                <typename><typedef-ref name="message_t" ref="0x7e8707a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>